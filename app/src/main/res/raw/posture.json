{"v":"5.7.4","fr":29.9700012207031,"ip":0,"op":900.000036657751,"w":1920,"h":1080,"nm":"Comp 1","ddd":0,"assets":[],"layers":[{"ddd":0,"ind":1,"ty":4,"nm":"leg-Ankle","hd":true,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10,"x":"var $bm_rt;\nvar startctrl = thisComp.layer('leg-Hip');\nvar endctrl = thisLayer;\nvar curLayer = thisLayer;\nvar curRot = 0;\nwhile (curLayer.hasParent) {\n    curRot = $bm_sum(curRot, curLayer.parent('ADBE Transform Group')('ADBE Rotate Z'));\n    curLayer = curLayer.parent;\n}\nvar rotend = $bm_div(endctrl.effect('Limber')('Rotate End'), 100);\nif (rotend == 0) {\n    $bm_rt = $bm_neg(curRot);\n} else {\n    var p1 = startctrl.toWorld([\n            0,\n            0,\n            0\n        ]);\n    var p3ik = endctrl.toWorld([\n            0,\n            0,\n            0\n        ]);\n    var p3r = $bm_sub(p3ik, p1);\n    var c1 = $bm_div(endctrl.content('Admin').content('p1').transform.scale[0], 2);\n    var c2 = $bm_div(endctrl.content('Admin').content('p2blend').transform.scale[0], 2);\n    var c3 = $bm_div(endctrl.content('Admin').content('p3blend').transform.scale[0], 2);\n    var linkLeng = endctrl.effect('Limber')('Link Length to Size Scale');\n    var sizeScale = $bm_div(endctrl.effect('Limber')('Size Scale'), 100);\n    var cw = endctrl.effect('Limber')('Clockwise');\n    var cwLin = Math.abs($bm_div(cw, 100));\n    var antipop = $bm_div(endctrl.effect('Limber')('Anti-pop'), 100);\n    var s3ik = Math.max($bm_mul(endctrl.effect('Limber')('Upper Length'), linkLeng == true ? sizeScale : 1), Math.abs($bm_sub(c1, c2)));\n    var s1ik = Math.max($bm_mul(endctrl.effect('Limber')('Lower Length'), linkLeng == true ? sizeScale : 1), Math.abs($bm_sub(c2, c3)));\n    var totLeng = $bm_sum(s3ik, s1ik);\n    var s2 = length(p1, p3ik);\n    var prox = linear(Math.abs($bm_sub(s2, $bm_div(totLeng, 2))), 0, $bm_div(totLeng, 2), 0, 1);\n    var antipopLin = $bm_mul(totLeng, linear(linear($bm_mul($bm_mul(prox, prox), prox), 0.833, 1), $bm_sub(1, antipop), 1));\n    var s1ap = $bm_mul(antipopLin, $bm_div(s1ik, totLeng));\n    var s3ap = $bm_mul(antipopLin, $bm_div(s3ik, totLeng));\n    var s3blend = $bm_sum($bm_mul(s3ap, cwLin), $bm_mul($bm_mul($bm_div(s3ap, $bm_sum(s3ap, s1ap)), s2), $bm_sub(1, cwLin)));\n    var s1blend = $bm_sum($bm_mul(s1ap, cwLin), $bm_mul($bm_mul($bm_div(s1ap, $bm_sum(s3ap, s1ap)), s2), $bm_sub(1, cwLin)));\n    try {\n        var theta2 = $bm_mul(cw > 0 ? 1 : -1, Math.acos(clamp($bm_div($bm_sub($bm_sub($bm_sum($bm_mul(p3r[1], p3r[1]), $bm_mul(p3r[0], p3r[0])), $bm_mul(s3blend, s3blend)), $bm_mul(s1blend, s1blend)), $bm_mul($bm_mul(2, s3blend), s1blend)), -1, 1)));\n        var theta1 = Math.atan2($bm_sub($bm_mul($bm_neg(p3r[0]), $bm_sum(s3blend, $bm_mul(s1blend, Math.cos(theta2)))), $bm_mul(p3r[1], $bm_mul(s1blend, Math.sin(theta2)))), $bm_sub($bm_mul(p3r[1], $bm_sum(s3blend, $bm_mul(s1blend, Math.cos(theta2)))), $bm_mul(p3r[0], $bm_mul(s1blend, Math.sin(theta2)))));\n        var a1ik = $bm_sum(theta1, Math.PI);\n        var a2ik = $bm_sum($bm_sum(theta1, theta2), Math.PI);\n    } catch (err) {\n        value;\n    }\n    var curveLin = $bm_div(endctrl.effect('Limber')('Bone Curvature'), 100);\n    if (curveLin == 0) {\n        $bm_rt = $bm_sum($bm_mul(rotend, $bm_sub($bm_sub(radiansToDegrees(a2ik), 180), curRot)), $bm_mul($bm_sub(1, rotend), $bm_neg(curRot)));\n    } else {\n        var p2ik = $bm_sum(p1, [\n                Math.sin(a1ik) * s3blend,\n                -Math.cos(a1ik) * s3blend\n            ]);\n        var p3ik = $bm_sum(p2ik, [\n                Math.sin(a2ik) * s1blend,\n                -Math.cos(a2ik) * s1blend\n            ]);\n        var sizeScale = $bm_div(endctrl.effect('Limber')('Size Scale'), 100);\n        var linkScale = endctrl.effect('Limber')('Link Length to Size Scale');\n        var tangLeng = $bm_mul($bm_div($bm_mul(curveLin, $bm_sum(endctrl.effect('Limber')('Upper Length'), endctrl.effect('Limber')('Lower Length'))), 2), linkScale == true ? sizeScale : 1);\n        var avang = $bm_div($bm_sub($bm_sum(a1ik, a2ik), Math.PI), 2);\n        var tangPos = $bm_sum(p2ik, [\n                Math.cos(avang) * tangLeng,\n                Math.sin(avang) * tangLeng\n            ]);\n        var tangPosRel = $bm_sub(tangPos, p3ik);\n        var a1curve = $bm_sum(radiansToDegrees(Math.atan2(tangPosRel[1], tangPosRel[0])), 90);\n        $bm_rt = $bm_sum($bm_sub($bm_mul(rotend, a1curve), curRot), $bm_mul($bm_sub(1, rotend), $bm_neg(curRot)));\n    }\n}"},"p":{"a":0,"k":[1144,776,0],"ix":2,"l":2},"a":{"a":0,"k":[0,0,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"ef":[{"ty":5,"nm":"Limber","np":36,"mn":"Pseudo/Limber_16","ix":1,"en":1,"ef":[{"ty":6,"nm":"Shape","mn":"Pseudo/Limber_16-0001","ix":1,"v":0},{"ty":0,"nm":"Upper Length","mn":"Pseudo/Limber_16-0002","ix":2,"v":{"a":0,"k":282,"ix":2}},{"ty":0,"nm":"Lower Length","mn":"Pseudo/Limber_16-0003","ix":3,"v":{"a":0,"k":283,"ix":3}},{"ty":0,"nm":"Start Size","mn":"Pseudo/Limber_16-0004","ix":4,"v":{"a":0,"k":100,"ix":4}},{"ty":0,"nm":"Middle Size","mn":"Pseudo/Limber_16-0005","ix":5,"v":{"a":0,"k":70,"ix":5}},{"ty":0,"nm":"End Size","mn":"Pseudo/Limber_16-0006","ix":6,"v":{"a":0,"k":40,"ix":6}},{"ty":0,"nm":"Bone Curvature","mn":"Pseudo/Limber_16-0007","ix":7,"v":{"a":0,"k":100,"ix":7}},{"ty":7,"nm":"Square End","mn":"Pseudo/Limber_16-0008","ix":8,"v":{"a":0,"k":0,"ix":8}},{"ty":6,"nm":"Limber","mn":"Pseudo/Limber_16-0009","ix":9,"v":0},{"ty":6,"nm":"Scale","mn":"Pseudo/Limber_16-0010","ix":10,"v":0},{"ty":0,"nm":"Size Scale","mn":"Pseudo/Limber_16-0011","ix":11,"v":{"a":0,"k":100,"ix":11}},{"ty":7,"nm":"Link Length to Size Scale","mn":"Pseudo/Limber_16-0012","ix":12,"v":{"a":0,"k":1,"ix":12}},{"ty":6,"nm":"Limber","mn":"Pseudo/Limber_16-0013","ix":13,"v":0},{"ty":6,"nm":"Colors","mn":"Pseudo/Limber_16-0014","ix":14,"v":0},{"ty":0,"nm":"Upper Split","mn":"Pseudo/Limber_16-0015","ix":15,"v":{"a":0,"k":100,"ix":15}},{"ty":0,"nm":"Upper Rounding","mn":"Pseudo/Limber_16-0016","ix":16,"v":{"a":0,"k":-66,"ix":16}},{"ty":0,"nm":"Lower Split","mn":"Pseudo/Limber_16-0017","ix":17,"v":{"a":0,"k":70,"ix":17}},{"ty":0,"nm":"Lower Rounding","mn":"Pseudo/Limber_16-0018","ix":18,"v":{"a":0,"k":0,"ix":18}},{"ty":2,"nm":"Upper Color","mn":"Pseudo/Limber_16-0019","ix":19,"v":{"a":0,"k":[0.050813354552,0.052880637348,0.054947916418,1],"ix":19}},{"ty":2,"nm":"Middle Color","mn":"Pseudo/Limber_16-0020","ix":20,"v":{"a":0,"k":[0.92156869173,0.643137276173,0.176470592618,1],"ix":20}},{"ty":2,"nm":"Lower Color","mn":"Pseudo/Limber_16-0021","ix":21,"v":{"a":0,"k":[0.92156869173,0.643137276173,0.176470592618,1],"ix":21}},{"ty":6,"nm":"Limber","mn":"Pseudo/Limber_16-0022","ix":22,"v":0},{"ty":6,"nm":"Dynamics","mn":"Pseudo/Limber_16-0023","ix":23,"v":0},{"ty":0,"nm":"Clockwise","mn":"Pseudo/Limber_16-0024","ix":24,"v":{"a":0,"k":-100,"ix":24}},{"ty":0,"nm":"Rotate Start","mn":"Pseudo/Limber_16-0025","ix":25,"v":{"a":0,"k":0,"ix":25}},{"ty":0,"nm":"Rotate End","mn":"Pseudo/Limber_16-0026","ix":26,"v":{"a":0,"k":0,"ix":26}},{"ty":7,"nm":"Stretch","mn":"Pseudo/Limber_16-0027","ix":27,"v":{"a":0,"k":1,"ix":27}},{"ty":0,"nm":"Anti-pop","mn":"Pseudo/Limber_16-0028","ix":28,"v":{"a":0,"k":0,"ix":28}},{"ty":6,"nm":"Limber","mn":"Pseudo/Limber_16-0029","ix":29,"v":0},{"ty":6,"nm":"Forward Kinematics","mn":"Pseudo/Limber_16-0030","ix":30,"v":0},{"ty":0,"nm":"FK","mn":"Pseudo/Limber_16-0031","ix":31,"v":{"a":0,"k":0,"ix":31}},{"ty":0,"nm":"Upper FK Rotation","mn":"Pseudo/Limber_16-0032","ix":32,"v":{"a":0,"k":180,"ix":32}},{"ty":0,"nm":"Lower FK Rotation","mn":"Pseudo/Limber_16-0033","ix":33,"v":{"a":0,"k":0,"ix":33}},{"ty":6,"nm":"Limber","mn":"Pseudo/Limber_16-0034","ix":34,"v":0}]}],"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[3.082,3.37],[0,0],[0,0],[0,0],[0,0],[0,-4.927],[-10.467,0],[0,10.467]],"o":[[0,0],[0,0],[0,0],[0,0],[-3.082,3.371],[0,10.467],[10.467,0],[0,-4.927]],"v":[[13.989,-12.688],[13.991,-12.688],[0,-27.99],[-13.991,-12.688],[-13.989,-12.688],[-18.952,0.096],[0,19.048],[18.952,0.096]],"c":true},"ix":2,"x":"var $bm_rt;\n$bm_rt = value;"},"nm":"Path","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0,0.800000011921,0,1],"ix":4,"x":"var $bm_rt;\nvar hsl;\nvar startctrl = thisComp.layer('leg-Hip');\nvar endctrl = thisLayer;\nvar totLeng = $bm_mul($bm_sum(endctrl.effect('Limber')('Upper Length'), endctrl.effect('Limber')('Lower Length')), endctrl.effect('Limber')('Link Length to Size Scale') == true ? endctrl.effect('Limber')('Size Scale') / 100 : 1);\nvar stretchLimit = length(endctrl.toWorld(endctrl.anchorPoint), startctrl.toWorld(startctrl.anchorPoint));\n$bm_rt = hsl = $bm_sum([\n    0.333,\n    1,\n    0.4,\n    0\n], [\n    linear(stretchLimit, $bm_mul(totLeng, 0.97), totLeng, 0, 0.19),\n    0,\n    0\n]);\nif (stretchLimit > totLeng)\n    $bm_rt = [\n        1,\n        0,\n        0,\n        0\n    ];\nelse\n    $bm_rt = hslToRgb(hsl);"},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":180,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Controller","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ty":"gr","it":[{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2,"x":"var $bm_rt;\nvar s1blend = thisLayer.content('Admin').content('sides').transform.position[0];\nvar a2blend = degreesToRadians(thisLayer.content('Admin').content('angles').transform.anchorPoint[1]);\nvar p2blend = thisLayer.content('Admin').content('p2blend').transform.position;\n$bm_rt = $bm_sum(p2blend, [\n    Math.sin(a2blend) * s1blend,\n    -Math.cos(a2blend) * s1blend\n]);"},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"p3blend","np":0,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":true},{"ty":"gr","it":[{"ty":"tr","p":{"a":0,"k":[1,0],"ix":2,"x":"var $bm_rt;\nvar s3blend = thisLayer(2)('Admin').content('sides').transform.position[1];\nvar a1blend = degreesToRadians(thisLayer.content('Admin').content('angles').transform.anchorPoint[0]);\n$bm_rt = $bm_sum(thisLayer.content('Admin').content('p1').transform.position, [\n    Math.sin(a1blend) * s3blend,\n    -Math.cos(a1blend) * s3blend\n]);"},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3,"x":"var $bm_rt;\nvar c2;\nvar endctrl = thisComp.layer('leg-Ankle');\nvar sizeScale = $bm_div(endctrl.effect('Limber')('Size Scale'), 100);\nc2 = clamp($bm_mul(endctrl.effect('Limber')('Middle Size'), sizeScale), 1, $bm_mul($bm_mul($bm_sum(endctrl.effect('Limber')('Upper Length'), endctrl.effect('Limber')('Lower Length')), 0.55), endctrl.effect('Limber')('Link Length to Size Scale') == true ? sizeScale : 1));\n$bm_rt = [\n    c2,\n    c2\n];"},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"p2blend","np":0,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":true},{"ty":"gr","it":[{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1,"x":"var $bm_rt;\nvar startctrl = thisComp.layer('leg-Hip');\nvar endctrl = thisComp.layer('leg-Ankle');\nvar fk = $bm_div(endctrl.effect('Limber')('FK'), 100);\nif (fk == 1) {\n    var curLayer = startctrl;\n    var curRot = 0;\n    while (curLayer.hasParent) {\n        curRot = $bm_sum(curRot, curLayer.parent('ADBE Transform Group')('ADBE Rotate Z'));\n        curLayer = curLayer.parent;\n    }\n    var a1fk = $bm_sum(curRot, endctrl.effect('Limber')('Upper FK Rotation'));\n    var a2fk = endctrl.effect('Limber')('Lower FK Rotation');\n    $bm_rt = [\n        a1fk,\n        a1fk + a2fk\n    ];\n} else if (fk == 0) {\n    var p1 = thisLayer.content('Admin').content('p1').transform.position;\n    var p3ik = thisLayer.content('Admin').content('p3ik').transform.position;\n    var p3r = $bm_sub(p3ik, p1);\n    var s2ik = length(p1, p3ik);\n    var sides = thisLayer.content('Admin').content('sides').transform.position;\n    var s3blend = sides[1];\n    var s1blend = sides[0];\n    var cw = endctrl.effect('Limber')('Clockwise');\n    try {\n        var theta2 = $bm_mul($bm_neg(cw > 0 ? -1 : 1), Math.acos(clamp($bm_div($bm_sub($bm_sub($bm_sum($bm_mul(p3r[1], p3r[1]), $bm_mul(p3r[0], p3r[0])), $bm_mul(s3blend, s3blend)), $bm_mul(s1blend, s1blend)), $bm_mul($bm_mul(2, s3blend), s1blend)), -1, 1)));\n        var theta1 = Math.atan2($bm_sub($bm_mul($bm_neg(p3r[0]), $bm_sum(s3blend, $bm_mul(s1blend, Math.cos(theta2)))), $bm_mul(p3r[1], $bm_mul(s1blend, Math.sin(theta2)))), $bm_sub($bm_mul(p3r[1], $bm_sum(s3blend, $bm_mul(s1blend, Math.cos(theta2)))), $bm_mul(p3r[0], $bm_mul(s1blend, Math.sin(theta2)))));\n        var a1ik = $bm_sum(180, radiansToDegrees(theta1));\n        var a2ik = $bm_sum(180, radiansToDegrees($bm_sum(theta1, theta2)));\n        $bm_rt = [\n            a1ik,\n            a2ik\n        ];\n    } catch (err) {\n        $bm_rt = value;\n    }\n} else {\n    var curLayer = startctrl;\n    var curRot = 0;\n    while (curLayer.hasParent) {\n        curRot = $bm_sum(curRot, curLayer.parent('ADBE Transform Group')('ADBE Rotate Z'));\n        curLayer = curLayer.parent;\n    }\n    var a2fk = endctrl.effect('Limber')('Lower FK Rotation');\n    var a1fk = $bm_sum(curRot, endctrl.effect('Limber')('Upper FK Rotation'));\n    var p1 = thisLayer.content('Admin').content('p1').transform.position;\n    var p3ik = thisLayer.content('Admin').content('p3ik').transform.position;\n    var sides = thisLayer.content('Admin').content('sides').transform.position;\n    var s3blend = sides[1];\n    var s1blend = sides[0];\n    var p3r = $bm_sub(p3ik, p1);\n    var cw = endctrl.effect('Limber')('Clockwise');\n    try {\n        var theta2 = $bm_mul($bm_neg(cw > 0 ? -1 : 1), Math.acos(clamp($bm_div($bm_sub($bm_sub($bm_sum($bm_mul(p3r[1], p3r[1]), $bm_mul(p3r[0], p3r[0])), $bm_mul(s3blend, s3blend)), $bm_mul(s1blend, s1blend)), $bm_mul($bm_mul(2, s3blend), s1blend)), -1, 1)));\n        var theta1 = Math.atan2($bm_sub($bm_mul($bm_neg(p3r[0]), $bm_sum(s3blend, $bm_mul(s1blend, Math.cos(theta2)))), $bm_mul(p3r[1], $bm_mul(s1blend, Math.sin(theta2)))), $bm_sub($bm_mul(p3r[1], $bm_sum(s3blend, $bm_mul(s1blend, Math.cos(theta2)))), $bm_mul(p3r[0], $bm_mul(s1blend, Math.sin(theta2)))));\n        var a1ik = $bm_sum(180, radiansToDegrees(theta1));\n        var a2ik = $bm_sum(180, radiansToDegrees($bm_sum(theta1, theta2)));\n        var a1blend = $bm_sum($bm_mul(a1ik, $bm_sub(1, fk)), $bm_mul(a1fk, fk));\n        var a2blend = $bm_sum($bm_mul(a2ik, $bm_sub(1, fk)), $bm_mul($bm_sum(a1fk, a2fk), fk));\n        $bm_rt = [\n            a1blend,\n            a2blend\n        ];\n    } catch (err) {\n        $bm_rt = value;\n    }\n}"},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"angles","np":0,"cix":2,"bm":0,"ix":3,"mn":"ADBE Vector Group","hd":true},{"ty":"gr","it":[{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2,"x":"var $bm_rt;\nvar endctrl = thisComp.layer('leg-Ankle');\nvar startctrl = thisComp.layer('leg-Hip');\nvar fk = $bm_div(endctrl.effect('Limber')('FK'), 100);\nvar p1 = thisLayer.content('Admin').content('p1').transform.position;\nvar p3 = thisLayer.content('Admin').content('p3ik').transform.position;\nvar c1 = $bm_div(thisLayer.content('Admin').content('p1').transform.scale[0], 2);\nvar c2 = $bm_div(thisLayer.content('Admin').content('p2blend').transform.scale[0], 2);\nvar c3 = $bm_div(thisLayer.content('Admin').content('p3ik').transform.scale[0], 2);\nvar linkLeng = endctrl.effect('Limber')('Link Length to Size Scale');\nvar sizeScale = $bm_div(endctrl.effect('Limber')('Size Scale'), 100);\nvar stretch = endctrl.effect('Limber')('Stretch');\nvar cw = $bm_div(endctrl.effect('Limber')('Clockwise'), 100);\nvar cwLin = Math.abs(cw);\nvar antipop = $bm_div(endctrl.effect('Limber')('Anti-pop'), 100);\nvar s3ik = Math.max($bm_mul(endctrl.effect('Limber')('Upper Length'), linkLeng == true ? sizeScale : 1), Math.abs($bm_sub(c1, c2)));\nvar s1ik = Math.max($bm_mul(endctrl.effect('Limber')('Lower Length'), linkLeng == true ? sizeScale : 1), Math.abs($bm_sub(c2, c3)));\nvar totLeng = $bm_sum(s3ik, s1ik);\nvar s2 = length(p1, p3);\nif (s2 > totLeng && stretch == false) {\n    $bm_rt = [\n        s1ik,\n        s3ik\n    ];\n} else if (s2 > totLeng && stretch == true) {\n    var increase = $bm_sum(1, $bm_div($bm_sub(s2, totLeng), totLeng));\n    $bm_rt = [\n        s1ik * increase * (1 - fk) + s1ik * fk,\n        s3ik * increase * (1 - fk) + s3ik * fk\n    ];\n} else {\n    var prox = linear(Math.abs($bm_sub(s2, $bm_div(totLeng, 2))), 0, $bm_div(totLeng, 2), 0, 1);\n    var antipopLin = $bm_mul(totLeng, linear(linear($bm_mul($bm_mul(prox, prox), prox), 0.833, 1), $bm_sub(1, $bm_mul(antipop, $bm_sub(1, fk))), 1));\n    var cwBlend = $bm_sum(cwLin, $bm_mul(fk, $bm_sub(1, cwLin)));\n    var s1ap = $bm_mul(antipopLin, $bm_div(s1ik, totLeng));\n    var s3ap = $bm_mul(antipopLin, $bm_div(s3ik, totLeng));\n    var s3blend = $bm_sum($bm_mul(s3ap, cwBlend), $bm_mul($bm_mul($bm_div(s3ap, $bm_sum(s3ap, s1ap)), s2), $bm_sub(1, cwBlend)));\n    var s1blend = $bm_sum($bm_mul(s1ap, cwBlend), $bm_mul($bm_mul($bm_div(s1ap, $bm_sum(s3ap, s1ap)), s2), $bm_sub(1, cwBlend)));\n    $bm_rt = [\n        s1blend,\n        s3blend\n    ];\n}"},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"sides","np":0,"cix":2,"bm":0,"ix":4,"mn":"ADBE Vector Group","hd":true},{"ty":"gr","it":[{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2,"x":"var $bm_rt;\nvar val = thisComp.layer('leg-Ankle');\n$bm_rt = val.toWorld(val.anchorPoint);"},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3,"x":"var $bm_rt;\nvar endctrl = thisComp.layer('leg-Ankle');\nvar c3 = $bm_div($bm_mul(endctrl.effect('Limber')('End Size'), endctrl.effect('Limber')('Size Scale')), 100);\n$bm_rt = [\n    c3,\n    c3\n];"},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"p3ik","np":0,"cix":2,"bm":0,"ix":5,"mn":"ADBE Vector Group","hd":true},{"ty":"gr","it":[{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2,"x":"var $bm_rt;\nvar val = thisComp.layer('leg-Hip');\n$bm_rt = val.toWorld(val.anchorPoint);"},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3,"x":"var $bm_rt;\nvar endctrl = thisComp.layer('leg-Ankle');\nvar c1 = $bm_div($bm_mul(endctrl.effect('Limber')('Start Size'), endctrl.effect('Limber')('Size Scale')), 100);\n$bm_rt = [\n    c1,\n    c1\n];"},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"p1","np":0,"cix":2,"bm":0,"ix":6,"mn":"ADBE Vector Group","hd":true},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3,"x":"var $bm_rt;\nvar limbLayers = {\n        ankle: thisComp.layer('leg-Ankle'),\n        hip: thisComp.layer('leg-Hip'),\n        leg: thisComp.layer('leg-Leg')\n    };\n$bm_rt = value;"},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Admin","np":6,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":900.000036657751,"st":0,"bm":0},{"ddd":0,"ind":2,"ty":4,"nm":"leg-Hip","parent":8,"hd":true,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10,"x":"var $bm_rt;\nvar endctrl = thisComp.layer('leg-Ankle');\nvar startctrl = thisComp.layer('leg-Hip');\nvar rotstart = $bm_div(endctrl.effect('Limber')('Rotate Start'), 100);\nvar curlayer = startctrl;\nvar curRot = 0;\nwhile (curlayer.hasParent) {\n    curRot = $bm_sum(curRot, curlayer.parent('ADBE Transform Group')('ADBE Rotate Z'));\n    curlayer = curlayer.parent;\n}\nif (rotstart == 0) {\n    $bm_rt = $bm_neg(curRot);\n} else {\n    var fk = $bm_div(endctrl.effect('Limber')('FK'), 100);\n    if (fk == 1) {\n        var startctrl = thisComp.layer('leg-Hip');\n        var p1 = startctrl.toWorld([\n                0,\n                0,\n                0\n            ]);\n        var a1fk = degreesToRadians(endctrl.effect('Limber')('Upper FK Rotation'));\n        var curveLin = $bm_div(endctrl.effect('Limber')('Bone Curvature'), 100);\n        if (curveLin == 0) {\n            $bm_rt = $bm_sum($bm_sub($bm_mul(rotstart, $bm_sub(radiansToDegrees(a1fk), 180)), curRot), $bm_mul($bm_neg(rotstart), $bm_neg(curRot)));\n        } else {\n            var a2fk = degreesToRadians(endctrl.effect('Limber')('Lower FK Rotation'));\n            var c1 = $bm_div(endctrl.content('Admin').content('p1').transform.scale[0], 2);\n            var c2 = $bm_div(endctr.content('Admin').content('p2blend').transform.scale[0], 2);\n            var c3 = $bm_div(endctrl.content('Admin').content('p3blend').transform.scale[0], 2);\n            var s3fk = Math.max(endctrl.effect('Limber')('Upper Length'), Math.abs($bm_sub(c1, c2)));\n            var s1fk = Math.max(endctrl.effect('Limber')('Lower Length'), Math.abs($bm_sub(c2, c3)));\n            var p2fk = $bm_sum(p1, [\n                    Math.sin(a1fk) * s3fk,\n                    -Math.cos(a1fk) * s3fk\n                ]);\n            var avang = $bm_div($bm_sub($bm_sum($bm_sum(a1fk, a1fk), a2fk), Math.PI), 2);\n            var tangLeng = $bm_div($bm_mul(curveLin, $bm_sum(s3fk, s1fk)), 2);\n            var tangPos = $bm_sub(p2fk, [\n                    Math.cos(avang) * tangLeng,\n                    Math.sin(avang) * tangLeng\n                ]);\n            var tangPosRel = $bm_sub(tangPos, p1);\n            var a1fkcurve = $bm_sub(radiansToDegrees(Math.atan2(tangPosRel[1], tangPosRel[0])), 90);\n            $bm_rt = $bm_sum($bm_sub($bm_mul(rotstart, a1fkcurve), curRot), $bm_mul($bm_neg(rotstart), $bm_neg(curRot)));\n        }\n    } else if (fk == 0) {\n        var p1 = startctrl.toWorld([\n                0,\n                0,\n                0\n            ]);\n        var p3ik = endctrl.toWorld([\n                0,\n                0,\n                0\n            ]);\n        var p3r = $bm_sub(p3ik, p1);\n        var s2 = length(p1, p3ik);\n        var c1 = $bm_div(endctrl.content('Admin').content('p1').transform.scale[0], 2);\n        var c2 = $bm_div(endctrl.content('Admin').content('p2blend').transform.scale[0], 2);\n        var c3 = $bm_div(endctrl.content('Admin').content('p3blend').transform.scale[0], 2);\n        var linkLeng = endctrl.effect('Limber')('Link Length to Size Scale');\n        var sizeScale = $bm_div(endctrl.effect('Limber')('Size Scale'), 100);\n        var cw = endctrl.effect('Limber')('Clockwise');\n        var cwLin = Math.abs($bm_div(cw, 100));\n        var antipop = $bm_div(endctrl.effect('Limber')('Anti-pop'), 100);\n        var s3ik = Math.max($bm_mul(endctrl.effect('Limber')('Upper Length'), linkLeng == true ? sizeScale : 1), Math.abs($bm_sub(c1, c2)));\n        var s1ik = Math.max($bm_mul(endctrl.effect('Limber')('Lower Length'), linkLeng == true ? sizeScale : 1), Math.abs($bm_sub(c2, c3)));\n        var totLeng = $bm_sum(s3ik, s1ik);\n        var s2 = length(p1, p3ik);\n        var prox = linear(Math.abs($bm_sub(s2, $bm_div(totLeng, 2))), 0, $bm_div(totLeng, 2), 0, 1);\n        var antipopLin = $bm_mul(totLeng, linear(linear($bm_mul($bm_mul(prox, prox), prox), 0.833, 1), $bm_sub(1, antipop), 1));\n        var s1ap = $bm_mul(antipopLin, $bm_div(s1ik, totLeng));\n        var s3ap = $bm_mul(antipopLin, $bm_div(s3ik, totLeng));\n        var cwBlend = $bm_sum(cwLin, $bm_mul(fk, $bm_sub(1, cwLin)));\n        var s3blend = $bm_sum($bm_mul(s3ap, cwBlend), $bm_mul($bm_mul($bm_div(s3ap, $bm_sum(s3ap, s1ap)), s2), $bm_sub(1, cwBlend)));\n        var s1blend = $bm_sum($bm_mul(s1ap, cwBlend), $bm_mul($bm_mul($bm_div(s1ap, $bm_sum(s3ap, s1ap)), s2), $bm_sub(1, cwBlend)));\n        try {\n            var theta2 = $bm_mul(cw > 0 ? 1 : -1, Math.acos(clamp($bm_div($bm_sub($bm_sub($bm_sum($bm_mul(p3r[1], p3r[1]), $bm_mul(p3r[0], p3r[0])), $bm_mul(s3blend, s3blend)), $bm_mul(s1blend, s1blend)), $bm_mul($bm_mul(2, s3blend), s1blend)), -1, 1)));\n            var theta1 = Math.atan2($bm_sub($bm_mul($bm_neg(p3r[0]), $bm_sum(s3blend, $bm_mul(s1blend, Math.cos(theta2)))), $bm_mul(p3r[1], $bm_mul(s1blend, Math.sin(theta2)))), $bm_sub($bm_mul(p3r[1], $bm_sum(s3blend, $bm_mul(s1blend, Math.cos(theta2)))), $bm_mul(p3r[0], $bm_mul(s1blend, Math.sin(theta2)))));\n            var a1ik = $bm_sum(theta1, Math.PI);\n            var a2ik = theta2;\n        } catch (err) {\n            value;\n        }\n        var curveLin = $bm_div(endctrl.effect('Limber')('Bone Curvature'), 100);\n        if (curveLin == 0) {\n            $bm_rt = $bm_sum($bm_mul(rotstart, $bm_sub($bm_sub(radiansToDegrees(a1ik), 180), curRot)), $bm_mul($bm_sub(1, rotstart), $bm_neg(curRot)));\n        } else {\n            var p2ik = $bm_sum(p1, [\n                    Math.sin(a1ik) * s3blend,\n                    -Math.cos(a1ik) * s3blend\n                ]);\n            var avang = $bm_div($bm_sub($bm_sum($bm_sum(a1ik, a1ik), a2ik), Math.PI), 2);\n            var sizeScale = $bm_div(endctrl.effect('Limber')('Size Scale'), 100);\n            var linkScale = endctrl.effect('Limber')('Link Length to Size Scale');\n            var tangLeng = $bm_mul($bm_div($bm_mul(curveLin, $bm_sum(endctrl.effect('Limber')('Upper Length'), endctrl.effect('Limber')('Lower Length'))), 2), linkScale == true ? sizeScale : 1);\n            var tangPos = $bm_sub(p2ik, [\n                    Math.cos(avang) * tangLeng,\n                    Math.sin(avang) * tangLeng\n                ]);\n            var tangPosRel = $bm_sub(tangPos, p1);\n            var curveRotik = $bm_sub(radiansToDegrees(Math.atan2(tangPosRel[1], tangPosRel[0])), 90);\n            $bm_rt = $bm_sum($bm_mul(rotstart, $bm_sub(curveRotik, curRot)), $bm_mul($bm_sub(1, rotstart), $bm_neg(curRot)));\n        }\n    } else {\n        var p1 = startctrl.toWorld([\n                0,\n                0,\n                0\n            ]);\n        var p3ik = endctrl.toWorld([\n                0,\n                0,\n                0\n            ]);\n        var p3r = $bm_sub(p3ik, p1);\n        var s2 = length(p1, p3ik);\n        var c1 = $bm_div(endctrl.content('Admin').content('p1').transform.scale[0], 2);\n        var c2 = $bm_div(endctrl.content('Admin').content('p2blend').transform.scale[0], 2);\n        var c3 = $bm_div(endctrl.content('Admin').content('p3blend').transform.scale[0], 2);\n        var linkLeng = endctrl.effect('Limber')('Link Length to Size Scale');\n        var sizeScale = $bm_div(endctrl.effect('Limber')('Size Scale'), 100);\n        var cw = endctrl.effect('Limber')('Clockwise');\n        var cwLin = Math.abs($bm_div(cw, 100));\n        var s3ik = Math.max($bm_mul(endctrl.effect('Limber')('Upper Length'), linkLeng == true ? sizeScale : 1), Math.abs($bm_sub(c1, c2)));\n        var s1ik = Math.max($bm_mul(endctrl.effect('Limber')('Lower Length'), linkLeng == true ? sizeScale : 1), Math.abs($bm_sub(c2, c3)));\n        var totLeng = $bm_sum(s3ik, s1ik);\n        var s2 = length(p1, p3ik);\n        var prox = linear(Math.abs($bm_sub(s2, $bm_div(totLeng, 2))), 0, $bm_div(totLeng, 2), 0, 1);\n        var antipopLin = $bm_mul(totLeng, linear(linear($bm_mul($bm_mul(prox, prox), prox), 0.833, 1), $bm_sub(1, $bm_div(endctrl.effect('Limber')('Anti-pop'), 100)), 1));\n        var s1ap = $bm_mul(antipopLin, $bm_div(s1ik, totLeng));\n        var s3ap = $bm_mul(antipopLin, $bm_div(s3ik, totLeng));\n        var cwBlend = $bm_sum(cwLin, $bm_mul(fk, $bm_sub(1, cwLin)));\n        var s3blend = $bm_sum($bm_mul(s3ap, cwBlend), $bm_mul($bm_mul($bm_div(s3ap, $bm_sum(s3ap, s1ap)), s2), $bm_sub(1, cwBlend)));\n        var s1blend = $bm_sum($bm_mul(s1ap, cwBlend), $bm_mul($bm_mul($bm_div(s1ap, $bm_sum(s3ap, s1ap)), s2), $bm_sub(1, cwBlend)));\n        try {\n            var theta2 = $bm_mul(cw > 0 ? 1 : -1, Math.acos(clamp($bm_div($bm_sub($bm_sub($bm_sum($bm_mul(p3r[1], p3r[1]), $bm_mul(p3r[0], p3r[0])), $bm_mul(s3blend, s3blend)), $bm_mul(s1blend, s1blend)), $bm_mul($bm_mul(2, s3blend), s1blend)), -1, 1)));\n            var theta1 = Math.atan2($bm_sub($bm_mul($bm_neg(p3r[0]), $bm_sum(s3blend, $bm_mul(s1blend, Math.cos(theta2)))), $bm_mul(p3r[1], $bm_mul(s1blend, Math.sin(theta2)))), $bm_sub($bm_mul(p3r[1], $bm_sum(s3blend, $bm_mul(s1blend, Math.cos(theta2)))), $bm_mul(p3r[0], $bm_mul(s1blend, Math.sin(theta2)))));\n            var a1ik = $bm_sum(theta1, Math.PI);\n            var a2ik = theta2;\n        } catch (err) {\n            value;\n        }\n        var a1fk = degreesToRadians($bm_sum(curRot, endctrl.effect('Limber')('Upper FK Rotation')));\n        var a2fk = degreesToRadians(endctrl.effect('Limber')('Lower FK Rotation'));\n        var a1blend = $bm_sum($bm_mul(a1ik, $bm_sub(1, fk)), $bm_mul(a1fk, fk));\n        var a2blend = $bm_sum($bm_mul(a2ik, $bm_sub(1, fk)), $bm_mul(a2fk, fk));\n        var p2blend = $bm_sum(p1, [\n                Math.sin(a1blend) * s3blend,\n                -Math.cos(a1blend) * s3blend\n            ]);\n        var curveLin = $bm_div(endctrl.effect('Limber')('Bone Curvature'), 100);\n        if (curveLin == 0) {\n            $bm_rt = $bm_sum($bm_mul(rotstart, $bm_sub($bm_sub(radiansToDegrees(a1blend), 180), curRot)), $bm_mul($bm_sub(1, rotstart), $bm_neg(curRot)));\n        } else {\n            var avang = $bm_div($bm_sub($bm_sum($bm_sum(a1blend, a1blend), a2blend), Math.PI), 2);\n            var tangLeng = $bm_div($bm_mul(curveLin, totLeng), 2);\n            var tangPos = $bm_sub(p2blend, [\n                    Math.cos(avang) * tangLeng,\n                    Math.sin(avang) * tangLeng\n                ]);\n            var tangPosRel = $bm_sub(tangPos, p1);\n            var curveRotblend = $bm_sub(radiansToDegrees(Math.atan2(tangPosRel[1], tangPosRel[0])), 90);\n            $bm_rt = $bm_sum($bm_mul(rotstart, $bm_sub(curveRotblend, curRot)), $bm_mul($bm_sub(1, rotstart), $bm_neg(curRot)));\n        }\n    }\n}"},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":0,"s":[12,12,0],"to":[0.667,-2.667,0],"ti":[-0.667,2.667,0]},{"t":354.000014418716,"s":[16,-4,0]}],"ix":2,"l":2},"a":{"a":0,"k":[0,0,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100],"ix":6,"l":2}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[3.082,3.37],[0,0],[0,0],[0,0],[0,0],[0,-4.927],[-10.467,0],[0,10.467]],"o":[[0,0],[0,0],[0,0],[0,0],[-3.082,3.371],[0,10.467],[10.467,0],[0,-4.927]],"v":[[13.989,-12.688],[13.991,-12.688],[0,-27.99],[-13.991,-12.688],[-13.989,-12.688],[-18.952,0.096],[0,19.048],[18.952,0.096]],"c":true},"ix":2},"nm":"Path","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0,0.800000011921,0,1],"ix":4,"x":"var $bm_rt;\nvar hsl;\nvar startctrl = thisLayer;\nvar endctrl = thisComp.layer('leg-Ankle');\nvar totLeng = $bm_mul($bm_sum(endctrl.effect('Limber')('Upper Length'), endctrl.effect('Limber')('Lower Length')), endctrl.effect('Limber')('Link Length to Size Scale') == true ? endctrl.effect('Limber')('Size Scale') / 100 : 1);\nvar stretchLimit = length(endctrl.toWorld(endctrl.anchorPoint), startctrl.toWorld(startctrl.anchorPoint));\n$bm_rt = hsl = $bm_sum([\n    0.333,\n    1,\n    0.4,\n    0\n], [\n    linear(stretchLimit, $bm_mul(totLeng, 0.97), totLeng, 0, 0.19),\n    0,\n    0\n]);\nif (stretchLimit > totLeng)\n    $bm_rt = [\n        1,\n        0,\n        0,\n        0\n    ];\nelse\n    $bm_rt = hslToRgb(hsl);"},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":180,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Controller","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3,"x":"var $bm_rt;\nvar limbLayers = {\n        ankle: thisComp.layer('leg-Ankle'),\n        hip: thisComp.layer('leg-Hip'),\n        leg: thisComp.layer('leg-Leg')\n    };\n$bm_rt = value;"},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Admin","np":0,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":900.000036657751,"st":0,"bm":0},{"ddd":0,"ind":3,"ty":4,"nm":"leg-Leg","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10,"x":"var $bm_rt;\nvar curlayer = thisLayer;\nvar rot = 0;\nwhile (curlayer.hasParent) {\n    rot = $bm_sum(rot, curlayer.parent('ADBE Transform Group')('ADBE Rotate Z'));\n    curlayer = curlayer.parent;\n}\n$bm_rt = $bm_neg(rot);"},"p":{"a":0,"k":[0,0,0],"ix":2,"x":"var $bm_rt;\nvar val = [\n        0,\n        0\n    ];\nif (thisLayer.hasParent)\n    val = parent.fromWorld([\n        0,\n        0,\n        0\n    ]);\n$bm_rt = [\n    val[0],\n    val[1],\n    0\n];","l":2},"a":{"a":0,"k":[0,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"shapes":[{"ty":"gr","it":[{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[],"o":[],"v":[],"c":false},"ix":2,"x":"var $bm_rt;\nvar newA, newT, nq0, nq1, nq2, nr0, nr1, ns0, t, q0, q1, q2, r0, r1, s0, v6, v4, newVerts, newIns, newOuts, uq1, uq2, ur0, ur1, us0;\nfunction midPoint(p1, p2, per) {\n    return [\n        p1[0] + (p2[0] - p1[0]) * per,\n        p1[1] + (p2[1] - p1[1]) * per\n    ];\n}\nfunction tangentsAbsolute(vertices, tans) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        tans[i] = $bm_sum(tans[i], vertices[i]);\n    }\n    return tans;\n}\nfunction tangentsRelative(vertices, tans) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        tans[i] = $bm_sub(tans[i], vertices[i]);\n    }\n    return tans;\n}\nfunction fx(point) {\n    return [\n        -point[0],\n        point[1]\n    ];\n}\nfunction fy(point) {\n    return [\n        point[0],\n        -point[1]\n    ];\n}\nfunction fxy(point) {\n    return [\n        -point[0],\n        -point[1]\n    ];\n}\nfunction flipArrayY(vertices, flipPoint) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        vertices[i] = [\n            vertices[i][0],\n            $bm_sub($bm_mul(flipPoint, 2), vertices[i][1])\n        ];\n    }\n    return vertices;\n}\nfunction pointAlongY(val, p1, p2) {\n    var linearValue = linear(val, p1[1], p2[1], p1[0], p2[0]);\n    return [\n        linearValue,\n        val\n    ];\n}\nfunction xOnCircleGivenY(x, r) {\n    return Math.sqrt($bm_sub($bm_mul(r, r), $bm_mul(x, x)));\n}\nvar semiFac = 0.55228474983079;\nvar quad = $bm_mul(0.5, Math.PI);\nvar groupName = thisProperty.propertyGroup(3)._name;\nvar isUpper = groupName.split(' ')[1] === 'Upper';\nvar isProximal = groupName.split(' ')[0] === 'Proximal';\nvar endctrl = thisComp.layer('leg-Ankle');\nvar lowerSplit = endctrl.effect('Limber')('Lower Split');\nvar lowerSplitValue = $bm_div(lowerSplit.value, 100);\nvar upperSplit = endctrl.effect('Limber')('Upper Split');\nvar upperSplitValue = $bm_div(upperSplit.value, 100);\nvar lowerRounding = endctrl.effect('Limber')('Lower Rounding');\nvar lowerRoundingValue = $bm_div(lowerRounding.value, 100);\nvar upperRounding = endctrl.effect('Limber')('Upper Rounding');\nvar upperRoundingValue = $bm_div(upperRounding.value, 100);\nvar squareEndValue = endctrl.effect('Limber')('Square End').value;\nvar sides = endctrl.content('Admin').content('sides').transform.position;\nif (isUpper) {\n    var c2 = endctrl.content('Admin').content('p2blend').transform.scale;\n    var c1 = endctrl.content('Admin').content('p1').transform.scale;\n    var dist = sides[1];\n} else {\n    var c1 = endctrl.content('Admin').content('p2blend').transform.scale;\n    var c2 = endctrl.content('Admin').content('p3ik').transform.scale;\n    var dist = sides[0];\n}\nvar distrad = $bm_mul(c2[0], 0.5);\nvar proxrad = $bm_mul(c1[0], 0.5);\nvar pers = $bm_neg(lowerRoundingValue);\nvar splitY = isProximal ? lowerSplitValue : $bm_sub(1, lowerSplitValue);\nif (isUpper) {\n    pers = $bm_neg(upperRoundingValue);\n    splitY = isProximal ? upperSplitValue : $bm_sub(1, upperSplitValue);\n}\nsplitY = $bm_sub($bm_mul($bm_neg(dist), splitY), 0.5);\nvar rad1 = isProximal ? proxrad : distrad;\nvar rad2 = isProximal ? distrad : proxrad;\nvar A = Math.acos(clamp($bm_div($bm_sub(rad2, rad1), dist), -1, 1));\nvar r3a = [\n        rad2 * Math.sin(A),\n        -(dist - rad2 * Math.cos(A))\n    ];\nvar r3b = [\n        rad1 * Math.sin(A),\n        rad1 * Math.cos(A)\n    ];\nvar semiVerts = [\n        [\n            rad1,\n            0\n        ],\n        [\n            0,\n            rad1\n        ],\n        [\n            -rad1,\n            0\n        ]\n    ];\nvar semiIns = tangentsAbsolute(semiVerts, [\n        [\n            0,\n            0\n        ],\n        [\n            $bm_mul(rad1, semiFac),\n            0\n        ],\n        [\n            0,\n            $bm_mul(rad1, semiFac)\n        ]\n    ]);\nvar semiOuts = tangentsAbsolute(semiVerts, [\n        [\n            0,\n            $bm_mul(rad1, semiFac)\n        ],\n        [\n            $bm_mul($bm_neg(rad1), semiFac),\n            0\n        ],\n        [\n            0,\n            0\n        ]\n    ]);\nif (rad2 < rad1) {\n    if (splitY > r3b[1]) {\n        var state = 1;\n        newA = $bm_neg(Math.atan2(splitY, xOnCircleGivenY(splitY, rad1)));\n        newT = $bm_div(newA, quad);\n        nq0 = midPoint(semiVerts[0], semiOuts[0], newT);\n        nq1 = midPoint(semiOuts[0], semiIns[1], newT);\n        nq2 = midPoint(semiIns[1], semiVerts[1], newT);\n        nr0 = midPoint(nq0, nq1, newT);\n        nr1 = midPoint(nq1, nq2, newT);\n        ns0 = midPoint(nr0, nr1, newT);\n        t = $bm_div($bm_sub(A, quad), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, fy(s0));\n        v4 = fx(v6);\n        newVerts = [\n            semiVerts[0],\n            semiVerts[0],\n            semiVerts[1],\n            semiVerts[2],\n            fxy(ns0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(ns0)\n        ];\n        newIns = tangentsRelative(newVerts, [\n            fy(nq0),\n            semiVerts[0],\n            semiIns[1],\n            semiIns[2],\n            fxy(nr0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(ns0)\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            semiVerts[0],\n            semiOuts[0],\n            semiOuts[1],\n            fxy(nq0),\n            fxy(ns0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(nr0)\n        ]);\n    } else {\n        var state = 2;\n        t = $bm_div($bm_sub(A, quad), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, fy(s0));\n        v4 = fx(v6);\n        newVerts = [\n            semiVerts[0],\n            semiVerts[1],\n            semiVerts[2],\n            fxy(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(s0)\n        ];\n        newIns = tangentsRelative(newVerts, [\n            fy(q0),\n            semiIns[1],\n            semiIns[2],\n            fxy(r0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(s0)\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            semiOuts[0],\n            semiOuts[1],\n            fxy(q0),\n            fxy(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(r0)\n        ]);\n    }\n} else {\n    if (splitY < r3a[1]) {\n        var state = 3;\n        var UpsemiVerts = [\n                [\n                    rad2,\n                    -dist\n                ],\n                [\n                    0,\n                    -(dist - rad2)\n                ],\n                [\n                    -rad2,\n                    -dist\n                ]\n            ];\n        var UpsemiIns = tangentsAbsolute(UpsemiVerts, [\n                [\n                    0,\n                    0\n                ],\n                [\n                    $bm_mul(rad2, semiFac),\n                    0\n                ],\n                [\n                    0,\n                    $bm_mul(rad2, semiFac)\n                ]\n            ]);\n        var UpsemiOuts = tangentsAbsolute(UpsemiVerts, [\n                [\n                    0,\n                    $bm_mul(rad2, semiFac)\n                ],\n                [\n                    $bm_mul($bm_neg(rad2), semiFac),\n                    0\n                ],\n                [\n                    0,\n                    0\n                ]\n            ]);\n        t = $bm_div($bm_sub(quad, A), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        if (rad2 == rad1) {\n            var upA = 0.00001;\n        } else {\n            var upA = $bm_sub(quad, Math.acos(clamp($bm_div($bm_sub(rad2, rad1), dist), -1, 1)));\n        }\n        var upT = $bm_div(upA, quad);\n        var uq0 = midPoint(UpsemiVerts[0], UpsemiOuts[0], upT);\n        uq1 = midPoint(UpsemiOuts[0], UpsemiIns[1], upT);\n        uq2 = midPoint(UpsemiIns[1], UpsemiVerts[1], upT);\n        ur0 = midPoint(uq0, uq1, upT);\n        ur1 = midPoint(uq1, uq2, upT);\n        us0 = midPoint(ur0, ur1, upT);\n        newA = $bm_neg(Math.atan2($bm_sub($bm_neg(dist), splitY), xOnCircleGivenY($bm_sub($bm_neg(dist), splitY), rad2)));\n        newT = $bm_div(newA, upA);\n        nq0 = midPoint(UpsemiVerts[0], uq0, newT);\n        nq1 = midPoint(uq0, ur0, newT);\n        nq2 = midPoint(ur0, us0, newT);\n        nr0 = midPoint(nq0, nq1, newT);\n        nr1 = midPoint(nq1, nq2, newT);\n        ns0 = midPoint(nr0, nr1, newT);\n        newVerts = [\n            s0,\n            semiVerts[1],\n            fx(s0),\n            fx(r3a),\n            fx(ns0),\n            [\n                0,\n                splitY\n            ],\n            ns0,\n            us0\n        ];\n        newIns = tangentsRelative(newVerts, [\n            s0,\n            q2,\n            fx(r1),\n            fx(r3a),\n            fx(nr1),\n            [\n                0,\n                splitY\n            ],\n            ns0,\n            us0\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            r1,\n            fx(q2),\n            fx(r0),\n            fx(nq2),\n            fx(ns0),\n            [\n                0,\n                splitY\n            ],\n            nr1,\n            r3a\n        ]);\n    } else {\n        var state = 4;\n        t = $bm_div($bm_sub(quad, A), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, s0);\n        v4 = fx(v6);\n        newVerts = [\n            s0,\n            s0,\n            semiVerts[1],\n            fx(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            v6\n        ];\n        newIns = tangentsRelative(newVerts, [\n            s0,\n            s0,\n            q2,\n            fx(r1),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            v6\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            s0,\n            r1,\n            fx(q2),\n            fx(r0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            r0\n        ]);\n    }\n}\nif (isProximal != true) {\n    var tempVerts = newVerts;\n    var tempIns = newIns;\n    var tempOuts = newOuts;\n    newVerts = flipArrayY(tempVerts, -dist * 0.5).reverse();\n    newIns = flipArrayY(tempOuts, 0).reverse();\n    newOuts = flipArrayY(tempIns, 0).reverse();\n}\nif (pers != 0) {\n    var pVert = isProximal ? 5 : 2;\n    newVerts[pVert] = $bm_sum(newVerts[pVert], isProximal ? [\n        0,\n        newVerts[pVert + 1][0] * pers\n    ] : [\n        0,\n        -newVerts[pVert + 1][0] * pers\n    ]);\n    newIns[pVert] = [\n        $bm_mul($bm_neg(newVerts[pVert + 1][0]), semiFac),\n        0\n    ];\n    newOuts[pVert] = [\n        $bm_mul(newVerts[pVert + 1][0], semiFac),\n        0\n    ];\n    var B = isProximal ? $bm_sub($bm_div(Math.PI, 2), A) : -(Math.PI / 2 + A);\n    var temp6 = [\n            0,\n            newVerts[pVert + 1][0] * semiFac * pers\n        ];\n    newIns[pVert + 1][0] = $bm_mul($bm_neg(temp6[1]), Math.sin(B));\n    newIns[pVert + 1][1] = $bm_mul(temp6[1], Math.cos(B));\n    var temp4 = [\n            0,\n            newVerts[pVert + 1][0] * semiFac * pers\n        ];\n    newOuts[pVert - 1][0] = $bm_mul($bm_neg(temp4[1]), Math.sin($bm_neg(B)));\n    newOuts[pVert - 1][1] = $bm_mul(temp4[1], Math.cos($bm_neg(B)));\n}\nif (squareEndValue && !isUpper && !isProximal) {\n    if (state === 1) {\n        newVerts[5] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newOuts[4] = [\n            0,\n            0\n        ];\n        newIns[6] = [\n            0,\n            0\n        ];\n    }\n    if (state === 2) {\n        newVerts[6] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newOuts[5] = [\n            0,\n            0\n        ];\n        newIns[7] = [\n            0,\n            0\n        ];\n    }\n    if (state === 3) {\n        newVerts[5] = [\n            $bm_neg(distrad),\n            $bm_neg(dist)\n        ];\n        newVerts[6] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newVerts[7] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newOuts[5] = [\n            0,\n            0\n        ];\n        newIns[7] = [\n            0,\n            0\n        ];\n    }\n    if (state === 4) {\n        newVerts[4] = [\n            $bm_neg(distrad),\n            $bm_neg(dist)\n        ];\n        newVerts[5] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newVerts[6] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newVerts[7] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newOuts[4] = [\n            0,\n            0\n        ];\n        newIns[6] = [\n            0,\n            0\n        ];\n    }\n}\n$bm_rt = createPath(newVerts, newIns, newOuts, true);"},"nm":"Taper Path","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,0,0,1],"ix":4,"x":"var $bm_rt;\n$bm_rt = thisComp.layer('leg-Ankle').effect('Limber')('Middle Color');"},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Distal Upper","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[],"o":[],"v":[],"c":false},"ix":2,"x":"var $bm_rt;\nvar newA, newT, nq0, nq1, nq2, nr0, nr1, ns0, t, q0, q1, q2, r0, r1, s0, v6, v4, newVerts, newIns, newOuts, uq1, uq2, ur0, ur1, us0;\nfunction midPoint(p1, p2, per) {\n    return [\n        p1[0] + (p2[0] - p1[0]) * per,\n        p1[1] + (p2[1] - p1[1]) * per\n    ];\n}\nfunction tangentsAbsolute(vertices, tans) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        tans[i] = $bm_sum(tans[i], vertices[i]);\n    }\n    return tans;\n}\nfunction tangentsRelative(vertices, tans) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        tans[i] = $bm_sub(tans[i], vertices[i]);\n    }\n    return tans;\n}\nfunction fx(point) {\n    return [\n        -point[0],\n        point[1]\n    ];\n}\nfunction fy(point) {\n    return [\n        point[0],\n        -point[1]\n    ];\n}\nfunction fxy(point) {\n    return [\n        -point[0],\n        -point[1]\n    ];\n}\nfunction flipArrayY(vertices, flipPoint) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        vertices[i] = [\n            vertices[i][0],\n            $bm_sub($bm_mul(flipPoint, 2), vertices[i][1])\n        ];\n    }\n    return vertices;\n}\nfunction pointAlongY(val, p1, p2) {\n    var linearValue = linear(val, p1[1], p2[1], p1[0], p2[0]);\n    return [\n        linearValue,\n        val\n    ];\n}\nfunction xOnCircleGivenY(x, r) {\n    return Math.sqrt($bm_sub($bm_mul(r, r), $bm_mul(x, x)));\n}\nvar semiFac = 0.55228474983079;\nvar quad = $bm_mul(0.5, Math.PI);\nvar groupName = thisProperty.propertyGroup(3)._name;\nvar isUpper = groupName.split(' ')[1] === 'Upper';\nvar isProximal = groupName.split(' ')[0] === 'Proximal';\nvar endctrl = thisComp.layer('leg-Ankle');\nvar lowerSplit = endctrl.effect('Limber')('Lower Split');\nvar lowerSplitValue = $bm_div(lowerSplit.value, 100);\nvar upperSplit = endctrl.effect('Limber')('Upper Split');\nvar upperSplitValue = $bm_div(upperSplit.value, 100);\nvar lowerRounding = endctrl.effect('Limber')('Lower Rounding');\nvar lowerRoundingValue = $bm_div(lowerRounding.value, 100);\nvar upperRounding = endctrl.effect('Limber')('Upper Rounding');\nvar upperRoundingValue = $bm_div(upperRounding.value, 100);\nvar squareEndValue = endctrl.effect('Limber')('Square End').value;\nvar sides = endctrl.content('Admin').content('sides').transform.position;\nif (isUpper) {\n    var c2 = endctrl.content('Admin').content('p2blend').transform.scale;\n    var c1 = endctrl.content('Admin').content('p1').transform.scale;\n    var dist = sides[1];\n} else {\n    var c1 = endctrl.content('Admin').content('p2blend').transform.scale;\n    var c2 = endctrl.content('Admin').content('p3ik').transform.scale;\n    var dist = sides[0];\n}\nvar distrad = $bm_mul(c2[0], 0.5);\nvar proxrad = $bm_mul(c1[0], 0.5);\nvar pers = $bm_neg(lowerRoundingValue);\nvar splitY = isProximal ? lowerSplitValue : $bm_sub(1, lowerSplitValue);\nif (isUpper) {\n    pers = $bm_neg(upperRoundingValue);\n    splitY = isProximal ? upperSplitValue : $bm_sub(1, upperSplitValue);\n}\nsplitY = $bm_sub($bm_mul($bm_neg(dist), splitY), 0.5);\nvar rad1 = isProximal ? proxrad : distrad;\nvar rad2 = isProximal ? distrad : proxrad;\nvar A = Math.acos(clamp($bm_div($bm_sub(rad2, rad1), dist), -1, 1));\nvar r3a = [\n        rad2 * Math.sin(A),\n        -(dist - rad2 * Math.cos(A))\n    ];\nvar r3b = [\n        rad1 * Math.sin(A),\n        rad1 * Math.cos(A)\n    ];\nvar semiVerts = [\n        [\n            rad1,\n            0\n        ],\n        [\n            0,\n            rad1\n        ],\n        [\n            -rad1,\n            0\n        ]\n    ];\nvar semiIns = tangentsAbsolute(semiVerts, [\n        [\n            0,\n            0\n        ],\n        [\n            $bm_mul(rad1, semiFac),\n            0\n        ],\n        [\n            0,\n            $bm_mul(rad1, semiFac)\n        ]\n    ]);\nvar semiOuts = tangentsAbsolute(semiVerts, [\n        [\n            0,\n            $bm_mul(rad1, semiFac)\n        ],\n        [\n            $bm_mul($bm_neg(rad1), semiFac),\n            0\n        ],\n        [\n            0,\n            0\n        ]\n    ]);\nif (rad2 < rad1) {\n    if (splitY > r3b[1]) {\n        var state = 1;\n        newA = $bm_neg(Math.atan2(splitY, xOnCircleGivenY(splitY, rad1)));\n        newT = $bm_div(newA, quad);\n        nq0 = midPoint(semiVerts[0], semiOuts[0], newT);\n        nq1 = midPoint(semiOuts[0], semiIns[1], newT);\n        nq2 = midPoint(semiIns[1], semiVerts[1], newT);\n        nr0 = midPoint(nq0, nq1, newT);\n        nr1 = midPoint(nq1, nq2, newT);\n        ns0 = midPoint(nr0, nr1, newT);\n        t = $bm_div($bm_sub(A, quad), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, fy(s0));\n        v4 = fx(v6);\n        newVerts = [\n            semiVerts[0],\n            semiVerts[0],\n            semiVerts[1],\n            semiVerts[2],\n            fxy(ns0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(ns0)\n        ];\n        newIns = tangentsRelative(newVerts, [\n            fy(nq0),\n            semiVerts[0],\n            semiIns[1],\n            semiIns[2],\n            fxy(nr0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(ns0)\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            semiVerts[0],\n            semiOuts[0],\n            semiOuts[1],\n            fxy(nq0),\n            fxy(ns0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(nr0)\n        ]);\n    } else {\n        var state = 2;\n        t = $bm_div($bm_sub(A, quad), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, fy(s0));\n        v4 = fx(v6);\n        newVerts = [\n            semiVerts[0],\n            semiVerts[1],\n            semiVerts[2],\n            fxy(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(s0)\n        ];\n        newIns = tangentsRelative(newVerts, [\n            fy(q0),\n            semiIns[1],\n            semiIns[2],\n            fxy(r0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(s0)\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            semiOuts[0],\n            semiOuts[1],\n            fxy(q0),\n            fxy(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(r0)\n        ]);\n    }\n} else {\n    if (splitY < r3a[1]) {\n        var state = 3;\n        var UpsemiVerts = [\n                [\n                    rad2,\n                    -dist\n                ],\n                [\n                    0,\n                    -(dist - rad2)\n                ],\n                [\n                    -rad2,\n                    -dist\n                ]\n            ];\n        var UpsemiIns = tangentsAbsolute(UpsemiVerts, [\n                [\n                    0,\n                    0\n                ],\n                [\n                    $bm_mul(rad2, semiFac),\n                    0\n                ],\n                [\n                    0,\n                    $bm_mul(rad2, semiFac)\n                ]\n            ]);\n        var UpsemiOuts = tangentsAbsolute(UpsemiVerts, [\n                [\n                    0,\n                    $bm_mul(rad2, semiFac)\n                ],\n                [\n                    $bm_mul($bm_neg(rad2), semiFac),\n                    0\n                ],\n                [\n                    0,\n                    0\n                ]\n            ]);\n        t = $bm_div($bm_sub(quad, A), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        if (rad2 == rad1) {\n            var upA = 0.00001;\n        } else {\n            var upA = $bm_sub(quad, Math.acos(clamp($bm_div($bm_sub(rad2, rad1), dist), -1, 1)));\n        }\n        var upT = $bm_div(upA, quad);\n        var uq0 = midPoint(UpsemiVerts[0], UpsemiOuts[0], upT);\n        uq1 = midPoint(UpsemiOuts[0], UpsemiIns[1], upT);\n        uq2 = midPoint(UpsemiIns[1], UpsemiVerts[1], upT);\n        ur0 = midPoint(uq0, uq1, upT);\n        ur1 = midPoint(uq1, uq2, upT);\n        us0 = midPoint(ur0, ur1, upT);\n        newA = $bm_neg(Math.atan2($bm_sub($bm_neg(dist), splitY), xOnCircleGivenY($bm_sub($bm_neg(dist), splitY), rad2)));\n        newT = $bm_div(newA, upA);\n        nq0 = midPoint(UpsemiVerts[0], uq0, newT);\n        nq1 = midPoint(uq0, ur0, newT);\n        nq2 = midPoint(ur0, us0, newT);\n        nr0 = midPoint(nq0, nq1, newT);\n        nr1 = midPoint(nq1, nq2, newT);\n        ns0 = midPoint(nr0, nr1, newT);\n        newVerts = [\n            s0,\n            semiVerts[1],\n            fx(s0),\n            fx(r3a),\n            fx(ns0),\n            [\n                0,\n                splitY\n            ],\n            ns0,\n            us0\n        ];\n        newIns = tangentsRelative(newVerts, [\n            s0,\n            q2,\n            fx(r1),\n            fx(r3a),\n            fx(nr1),\n            [\n                0,\n                splitY\n            ],\n            ns0,\n            us0\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            r1,\n            fx(q2),\n            fx(r0),\n            fx(nq2),\n            fx(ns0),\n            [\n                0,\n                splitY\n            ],\n            nr1,\n            r3a\n        ]);\n    } else {\n        var state = 4;\n        t = $bm_div($bm_sub(quad, A), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, s0);\n        v4 = fx(v6);\n        newVerts = [\n            s0,\n            s0,\n            semiVerts[1],\n            fx(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            v6\n        ];\n        newIns = tangentsRelative(newVerts, [\n            s0,\n            s0,\n            q2,\n            fx(r1),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            v6\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            s0,\n            r1,\n            fx(q2),\n            fx(r0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            r0\n        ]);\n    }\n}\nif (isProximal != true) {\n    var tempVerts = newVerts;\n    var tempIns = newIns;\n    var tempOuts = newOuts;\n    newVerts = flipArrayY(tempVerts, -dist * 0.5).reverse();\n    newIns = flipArrayY(tempOuts, 0).reverse();\n    newOuts = flipArrayY(tempIns, 0).reverse();\n}\nif (pers != 0) {\n    var pVert = isProximal ? 5 : 2;\n    newVerts[pVert] = $bm_sum(newVerts[pVert], isProximal ? [\n        0,\n        newVerts[pVert + 1][0] * pers\n    ] : [\n        0,\n        -newVerts[pVert + 1][0] * pers\n    ]);\n    newIns[pVert] = [\n        $bm_mul($bm_neg(newVerts[pVert + 1][0]), semiFac),\n        0\n    ];\n    newOuts[pVert] = [\n        $bm_mul(newVerts[pVert + 1][0], semiFac),\n        0\n    ];\n    var B = isProximal ? $bm_sub($bm_div(Math.PI, 2), A) : -(Math.PI / 2 + A);\n    var temp6 = [\n            0,\n            newVerts[pVert + 1][0] * semiFac * pers\n        ];\n    newIns[pVert + 1][0] = $bm_mul($bm_neg(temp6[1]), Math.sin(B));\n    newIns[pVert + 1][1] = $bm_mul(temp6[1], Math.cos(B));\n    var temp4 = [\n            0,\n            newVerts[pVert + 1][0] * semiFac * pers\n        ];\n    newOuts[pVert - 1][0] = $bm_mul($bm_neg(temp4[1]), Math.sin($bm_neg(B)));\n    newOuts[pVert - 1][1] = $bm_mul(temp4[1], Math.cos($bm_neg(B)));\n}\nif (squareEndValue && !isUpper && !isProximal) {\n    if (state === 1) {\n        newVerts[5] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newOuts[4] = [\n            0,\n            0\n        ];\n        newIns[6] = [\n            0,\n            0\n        ];\n    }\n    if (state === 2) {\n        newVerts[6] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newOuts[5] = [\n            0,\n            0\n        ];\n        newIns[7] = [\n            0,\n            0\n        ];\n    }\n    if (state === 3) {\n        newVerts[5] = [\n            $bm_neg(distrad),\n            $bm_neg(dist)\n        ];\n        newVerts[6] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newVerts[7] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newOuts[5] = [\n            0,\n            0\n        ];\n        newIns[7] = [\n            0,\n            0\n        ];\n    }\n    if (state === 4) {\n        newVerts[4] = [\n            $bm_neg(distrad),\n            $bm_neg(dist)\n        ];\n        newVerts[5] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newVerts[6] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newVerts[7] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newOuts[4] = [\n            0,\n            0\n        ];\n        newIns[6] = [\n            0,\n            0\n        ];\n    }\n}\n$bm_rt = createPath(newVerts, newIns, newOuts, true);"},"nm":"Taper Path","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,0,0,1],"ix":4,"x":"var $bm_rt;\n$bm_rt = thisComp.layer('leg-Ankle').effect('Limber')('Upper Color');"},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Proximal Upper","np":2,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2,"x":"var $bm_rt;\n$bm_rt = thisComp.layer('leg-Ankle').content('Admin').content('p1').transform.position;"},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6,"x":"var $bm_rt;\n$bm_rt = thisComp.layer('leg-Ankle').content('Admin').content('angles').transform.anchorPoint[0];"},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Upper Group","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[],"o":[],"v":[],"c":false},"ix":2,"x":"var $bm_rt;\nvar newA, newT, nq0, nq1, nq2, nr0, nr1, ns0, t, q0, q1, q2, r0, r1, s0, v6, v4, newVerts, newIns, newOuts, uq1, uq2, ur0, ur1, us0;\nfunction midPoint(p1, p2, per) {\n    return [\n        p1[0] + (p2[0] - p1[0]) * per,\n        p1[1] + (p2[1] - p1[1]) * per\n    ];\n}\nfunction tangentsAbsolute(vertices, tans) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        tans[i] = $bm_sum(tans[i], vertices[i]);\n    }\n    return tans;\n}\nfunction tangentsRelative(vertices, tans) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        tans[i] = $bm_sub(tans[i], vertices[i]);\n    }\n    return tans;\n}\nfunction fx(point) {\n    return [\n        -point[0],\n        point[1]\n    ];\n}\nfunction fy(point) {\n    return [\n        point[0],\n        -point[1]\n    ];\n}\nfunction fxy(point) {\n    return [\n        -point[0],\n        -point[1]\n    ];\n}\nfunction flipArrayY(vertices, flipPoint) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        vertices[i] = [\n            vertices[i][0],\n            $bm_sub($bm_mul(flipPoint, 2), vertices[i][1])\n        ];\n    }\n    return vertices;\n}\nfunction pointAlongY(val, p1, p2) {\n    var linearValue = linear(val, p1[1], p2[1], p1[0], p2[0]);\n    return [\n        linearValue,\n        val\n    ];\n}\nfunction xOnCircleGivenY(x, r) {\n    return Math.sqrt($bm_sub($bm_mul(r, r), $bm_mul(x, x)));\n}\nvar semiFac = 0.55228474983079;\nvar quad = $bm_mul(0.5, Math.PI);\nvar groupName = thisProperty.propertyGroup(3)._name;\nvar isUpper = groupName.split(' ')[1] === 'Upper';\nvar isProximal = groupName.split(' ')[0] === 'Proximal';\nvar endctrl = thisComp.layer('leg-Ankle');\nvar lowerSplit = endctrl.effect('Limber')('Lower Split');\nvar lowerSplitValue = $bm_div(lowerSplit.value, 100);\nvar upperSplit = endctrl.effect('Limber')('Upper Split');\nvar upperSplitValue = $bm_div(upperSplit.value, 100);\nvar lowerRounding = endctrl.effect('Limber')('Lower Rounding');\nvar lowerRoundingValue = $bm_div(lowerRounding.value, 100);\nvar upperRounding = endctrl.effect('Limber')('Upper Rounding');\nvar upperRoundingValue = $bm_div(upperRounding.value, 100);\nvar squareEndValue = endctrl.effect('Limber')('Square End').value;\nvar sides = endctrl.content('Admin').content('sides').transform.position;\nif (isUpper) {\n    var c2 = endctrl.content('Admin').content('p2blend').transform.scale;\n    var c1 = endctrl.content('Admin').content('p1').transform.scale;\n    var dist = sides[1];\n} else {\n    var c1 = endctrl.content('Admin').content('p2blend').transform.scale;\n    var c2 = endctrl.content('Admin').content('p3ik').transform.scale;\n    var dist = sides[0];\n}\nvar distrad = $bm_mul(c2[0], 0.5);\nvar proxrad = $bm_mul(c1[0], 0.5);\nvar pers = $bm_neg(lowerRoundingValue);\nvar splitY = isProximal ? lowerSplitValue : $bm_sub(1, lowerSplitValue);\nif (isUpper) {\n    pers = $bm_neg(upperRoundingValue);\n    splitY = isProximal ? upperSplitValue : $bm_sub(1, upperSplitValue);\n}\nsplitY = $bm_sub($bm_mul($bm_neg(dist), splitY), 0.5);\nvar rad1 = isProximal ? proxrad : distrad;\nvar rad2 = isProximal ? distrad : proxrad;\nvar A = Math.acos(clamp($bm_div($bm_sub(rad2, rad1), dist), -1, 1));\nvar r3a = [\n        rad2 * Math.sin(A),\n        -(dist - rad2 * Math.cos(A))\n    ];\nvar r3b = [\n        rad1 * Math.sin(A),\n        rad1 * Math.cos(A)\n    ];\nvar semiVerts = [\n        [\n            rad1,\n            0\n        ],\n        [\n            0,\n            rad1\n        ],\n        [\n            -rad1,\n            0\n        ]\n    ];\nvar semiIns = tangentsAbsolute(semiVerts, [\n        [\n            0,\n            0\n        ],\n        [\n            $bm_mul(rad1, semiFac),\n            0\n        ],\n        [\n            0,\n            $bm_mul(rad1, semiFac)\n        ]\n    ]);\nvar semiOuts = tangentsAbsolute(semiVerts, [\n        [\n            0,\n            $bm_mul(rad1, semiFac)\n        ],\n        [\n            $bm_mul($bm_neg(rad1), semiFac),\n            0\n        ],\n        [\n            0,\n            0\n        ]\n    ]);\nif (rad2 < rad1) {\n    if (splitY > r3b[1]) {\n        var state = 1;\n        newA = $bm_neg(Math.atan2(splitY, xOnCircleGivenY(splitY, rad1)));\n        newT = $bm_div(newA, quad);\n        nq0 = midPoint(semiVerts[0], semiOuts[0], newT);\n        nq1 = midPoint(semiOuts[0], semiIns[1], newT);\n        nq2 = midPoint(semiIns[1], semiVerts[1], newT);\n        nr0 = midPoint(nq0, nq1, newT);\n        nr1 = midPoint(nq1, nq2, newT);\n        ns0 = midPoint(nr0, nr1, newT);\n        t = $bm_div($bm_sub(A, quad), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, fy(s0));\n        v4 = fx(v6);\n        newVerts = [\n            semiVerts[0],\n            semiVerts[0],\n            semiVerts[1],\n            semiVerts[2],\n            fxy(ns0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(ns0)\n        ];\n        newIns = tangentsRelative(newVerts, [\n            fy(nq0),\n            semiVerts[0],\n            semiIns[1],\n            semiIns[2],\n            fxy(nr0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(ns0)\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            semiVerts[0],\n            semiOuts[0],\n            semiOuts[1],\n            fxy(nq0),\n            fxy(ns0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(nr0)\n        ]);\n    } else {\n        var state = 2;\n        t = $bm_div($bm_sub(A, quad), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, fy(s0));\n        v4 = fx(v6);\n        newVerts = [\n            semiVerts[0],\n            semiVerts[1],\n            semiVerts[2],\n            fxy(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(s0)\n        ];\n        newIns = tangentsRelative(newVerts, [\n            fy(q0),\n            semiIns[1],\n            semiIns[2],\n            fxy(r0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(s0)\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            semiOuts[0],\n            semiOuts[1],\n            fxy(q0),\n            fxy(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(r0)\n        ]);\n    }\n} else {\n    if (splitY < r3a[1]) {\n        var state = 3;\n        var UpsemiVerts = [\n                [\n                    rad2,\n                    -dist\n                ],\n                [\n                    0,\n                    -(dist - rad2)\n                ],\n                [\n                    -rad2,\n                    -dist\n                ]\n            ];\n        var UpsemiIns = tangentsAbsolute(UpsemiVerts, [\n                [\n                    0,\n                    0\n                ],\n                [\n                    $bm_mul(rad2, semiFac),\n                    0\n                ],\n                [\n                    0,\n                    $bm_mul(rad2, semiFac)\n                ]\n            ]);\n        var UpsemiOuts = tangentsAbsolute(UpsemiVerts, [\n                [\n                    0,\n                    $bm_mul(rad2, semiFac)\n                ],\n                [\n                    $bm_mul($bm_neg(rad2), semiFac),\n                    0\n                ],\n                [\n                    0,\n                    0\n                ]\n            ]);\n        t = $bm_div($bm_sub(quad, A), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        if (rad2 == rad1) {\n            var upA = 0.00001;\n        } else {\n            var upA = $bm_sub(quad, Math.acos(clamp($bm_div($bm_sub(rad2, rad1), dist), -1, 1)));\n        }\n        var upT = $bm_div(upA, quad);\n        var uq0 = midPoint(UpsemiVerts[0], UpsemiOuts[0], upT);\n        uq1 = midPoint(UpsemiOuts[0], UpsemiIns[1], upT);\n        uq2 = midPoint(UpsemiIns[1], UpsemiVerts[1], upT);\n        ur0 = midPoint(uq0, uq1, upT);\n        ur1 = midPoint(uq1, uq2, upT);\n        us0 = midPoint(ur0, ur1, upT);\n        newA = $bm_neg(Math.atan2($bm_sub($bm_neg(dist), splitY), xOnCircleGivenY($bm_sub($bm_neg(dist), splitY), rad2)));\n        newT = $bm_div(newA, upA);\n        nq0 = midPoint(UpsemiVerts[0], uq0, newT);\n        nq1 = midPoint(uq0, ur0, newT);\n        nq2 = midPoint(ur0, us0, newT);\n        nr0 = midPoint(nq0, nq1, newT);\n        nr1 = midPoint(nq1, nq2, newT);\n        ns0 = midPoint(nr0, nr1, newT);\n        newVerts = [\n            s0,\n            semiVerts[1],\n            fx(s0),\n            fx(r3a),\n            fx(ns0),\n            [\n                0,\n                splitY\n            ],\n            ns0,\n            us0\n        ];\n        newIns = tangentsRelative(newVerts, [\n            s0,\n            q2,\n            fx(r1),\n            fx(r3a),\n            fx(nr1),\n            [\n                0,\n                splitY\n            ],\n            ns0,\n            us0\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            r1,\n            fx(q2),\n            fx(r0),\n            fx(nq2),\n            fx(ns0),\n            [\n                0,\n                splitY\n            ],\n            nr1,\n            r3a\n        ]);\n    } else {\n        var state = 4;\n        t = $bm_div($bm_sub(quad, A), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, s0);\n        v4 = fx(v6);\n        newVerts = [\n            s0,\n            s0,\n            semiVerts[1],\n            fx(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            v6\n        ];\n        newIns = tangentsRelative(newVerts, [\n            s0,\n            s0,\n            q2,\n            fx(r1),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            v6\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            s0,\n            r1,\n            fx(q2),\n            fx(r0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            r0\n        ]);\n    }\n}\nif (isProximal != true) {\n    var tempVerts = newVerts;\n    var tempIns = newIns;\n    var tempOuts = newOuts;\n    newVerts = flipArrayY(tempVerts, -dist * 0.5).reverse();\n    newIns = flipArrayY(tempOuts, 0).reverse();\n    newOuts = flipArrayY(tempIns, 0).reverse();\n}\nif (pers != 0) {\n    var pVert = isProximal ? 5 : 2;\n    newVerts[pVert] = $bm_sum(newVerts[pVert], isProximal ? [\n        0,\n        newVerts[pVert + 1][0] * pers\n    ] : [\n        0,\n        -newVerts[pVert + 1][0] * pers\n    ]);\n    newIns[pVert] = [\n        $bm_mul($bm_neg(newVerts[pVert + 1][0]), semiFac),\n        0\n    ];\n    newOuts[pVert] = [\n        $bm_mul(newVerts[pVert + 1][0], semiFac),\n        0\n    ];\n    var B = isProximal ? $bm_sub($bm_div(Math.PI, 2), A) : -(Math.PI / 2 + A);\n    var temp6 = [\n            0,\n            newVerts[pVert + 1][0] * semiFac * pers\n        ];\n    newIns[pVert + 1][0] = $bm_mul($bm_neg(temp6[1]), Math.sin(B));\n    newIns[pVert + 1][1] = $bm_mul(temp6[1], Math.cos(B));\n    var temp4 = [\n            0,\n            newVerts[pVert + 1][0] * semiFac * pers\n        ];\n    newOuts[pVert - 1][0] = $bm_mul($bm_neg(temp4[1]), Math.sin($bm_neg(B)));\n    newOuts[pVert - 1][1] = $bm_mul(temp4[1], Math.cos($bm_neg(B)));\n}\nif (squareEndValue && !isUpper && !isProximal) {\n    if (state === 1) {\n        newVerts[5] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newOuts[4] = [\n            0,\n            0\n        ];\n        newIns[6] = [\n            0,\n            0\n        ];\n    }\n    if (state === 2) {\n        newVerts[6] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newOuts[5] = [\n            0,\n            0\n        ];\n        newIns[7] = [\n            0,\n            0\n        ];\n    }\n    if (state === 3) {\n        newVerts[5] = [\n            $bm_neg(distrad),\n            $bm_neg(dist)\n        ];\n        newVerts[6] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newVerts[7] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newOuts[5] = [\n            0,\n            0\n        ];\n        newIns[7] = [\n            0,\n            0\n        ];\n    }\n    if (state === 4) {\n        newVerts[4] = [\n            $bm_neg(distrad),\n            $bm_neg(dist)\n        ];\n        newVerts[5] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newVerts[6] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newVerts[7] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newOuts[4] = [\n            0,\n            0\n        ];\n        newIns[6] = [\n            0,\n            0\n        ];\n    }\n}\n$bm_rt = createPath(newVerts, newIns, newOuts, true);"},"nm":"Taper Path","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,0,0,1],"ix":4,"x":"var $bm_rt;\n$bm_rt = thisComp.layer('leg-Ankle').effect('Limber')('Middle Color');"},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Proximal Lower","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[],"o":[],"v":[],"c":false},"ix":2,"x":"var $bm_rt;\nvar newA, newT, nq0, nq1, nq2, nr0, nr1, ns0, t, q0, q1, q2, r0, r1, s0, v6, v4, newVerts, newIns, newOuts, uq1, uq2, ur0, ur1, us0;\nfunction midPoint(p1, p2, per) {\n    return [\n        p1[0] + (p2[0] - p1[0]) * per,\n        p1[1] + (p2[1] - p1[1]) * per\n    ];\n}\nfunction tangentsAbsolute(vertices, tans) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        tans[i] = $bm_sum(tans[i], vertices[i]);\n    }\n    return tans;\n}\nfunction tangentsRelative(vertices, tans) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        tans[i] = $bm_sub(tans[i], vertices[i]);\n    }\n    return tans;\n}\nfunction fx(point) {\n    return [\n        -point[0],\n        point[1]\n    ];\n}\nfunction fy(point) {\n    return [\n        point[0],\n        -point[1]\n    ];\n}\nfunction fxy(point) {\n    return [\n        -point[0],\n        -point[1]\n    ];\n}\nfunction flipArrayY(vertices, flipPoint) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        vertices[i] = [\n            vertices[i][0],\n            $bm_sub($bm_mul(flipPoint, 2), vertices[i][1])\n        ];\n    }\n    return vertices;\n}\nfunction pointAlongY(val, p1, p2) {\n    var linearValue = linear(val, p1[1], p2[1], p1[0], p2[0]);\n    return [\n        linearValue,\n        val\n    ];\n}\nfunction xOnCircleGivenY(x, r) {\n    return Math.sqrt($bm_sub($bm_mul(r, r), $bm_mul(x, x)));\n}\nvar semiFac = 0.55228474983079;\nvar quad = $bm_mul(0.5, Math.PI);\nvar groupName = thisProperty.propertyGroup(3)._name;\nvar isUpper = groupName.split(' ')[1] === 'Upper';\nvar isProximal = groupName.split(' ')[0] === 'Proximal';\nvar endctrl = thisComp.layer('leg-Ankle');\nvar lowerSplit = endctrl.effect('Limber')('Lower Split');\nvar lowerSplitValue = $bm_div(lowerSplit.value, 100);\nvar upperSplit = endctrl.effect('Limber')('Upper Split');\nvar upperSplitValue = $bm_div(upperSplit.value, 100);\nvar lowerRounding = endctrl.effect('Limber')('Lower Rounding');\nvar lowerRoundingValue = $bm_div(lowerRounding.value, 100);\nvar upperRounding = endctrl.effect('Limber')('Upper Rounding');\nvar upperRoundingValue = $bm_div(upperRounding.value, 100);\nvar squareEndValue = endctrl.effect('Limber')('Square End').value;\nvar sides = endctrl.content('Admin').content('sides').transform.position;\nif (isUpper) {\n    var c2 = endctrl.content('Admin').content('p2blend').transform.scale;\n    var c1 = endctrl.content('Admin').content('p1').transform.scale;\n    var dist = sides[1];\n} else {\n    var c1 = endctrl.content('Admin').content('p2blend').transform.scale;\n    var c2 = endctrl.content('Admin').content('p3ik').transform.scale;\n    var dist = sides[0];\n}\nvar distrad = $bm_mul(c2[0], 0.5);\nvar proxrad = $bm_mul(c1[0], 0.5);\nvar pers = $bm_neg(lowerRoundingValue);\nvar splitY = isProximal ? lowerSplitValue : $bm_sub(1, lowerSplitValue);\nif (isUpper) {\n    pers = $bm_neg(upperRoundingValue);\n    splitY = isProximal ? upperSplitValue : $bm_sub(1, upperSplitValue);\n}\nsplitY = $bm_sub($bm_mul($bm_neg(dist), splitY), 0.5);\nvar rad1 = isProximal ? proxrad : distrad;\nvar rad2 = isProximal ? distrad : proxrad;\nvar A = Math.acos(clamp($bm_div($bm_sub(rad2, rad1), dist), -1, 1));\nvar r3a = [\n        rad2 * Math.sin(A),\n        -(dist - rad2 * Math.cos(A))\n    ];\nvar r3b = [\n        rad1 * Math.sin(A),\n        rad1 * Math.cos(A)\n    ];\nvar semiVerts = [\n        [\n            rad1,\n            0\n        ],\n        [\n            0,\n            rad1\n        ],\n        [\n            -rad1,\n            0\n        ]\n    ];\nvar semiIns = tangentsAbsolute(semiVerts, [\n        [\n            0,\n            0\n        ],\n        [\n            $bm_mul(rad1, semiFac),\n            0\n        ],\n        [\n            0,\n            $bm_mul(rad1, semiFac)\n        ]\n    ]);\nvar semiOuts = tangentsAbsolute(semiVerts, [\n        [\n            0,\n            $bm_mul(rad1, semiFac)\n        ],\n        [\n            $bm_mul($bm_neg(rad1), semiFac),\n            0\n        ],\n        [\n            0,\n            0\n        ]\n    ]);\nif (rad2 < rad1) {\n    if (splitY > r3b[1]) {\n        var state = 1;\n        newA = $bm_neg(Math.atan2(splitY, xOnCircleGivenY(splitY, rad1)));\n        newT = $bm_div(newA, quad);\n        nq0 = midPoint(semiVerts[0], semiOuts[0], newT);\n        nq1 = midPoint(semiOuts[0], semiIns[1], newT);\n        nq2 = midPoint(semiIns[1], semiVerts[1], newT);\n        nr0 = midPoint(nq0, nq1, newT);\n        nr1 = midPoint(nq1, nq2, newT);\n        ns0 = midPoint(nr0, nr1, newT);\n        t = $bm_div($bm_sub(A, quad), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, fy(s0));\n        v4 = fx(v6);\n        newVerts = [\n            semiVerts[0],\n            semiVerts[0],\n            semiVerts[1],\n            semiVerts[2],\n            fxy(ns0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(ns0)\n        ];\n        newIns = tangentsRelative(newVerts, [\n            fy(nq0),\n            semiVerts[0],\n            semiIns[1],\n            semiIns[2],\n            fxy(nr0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(ns0)\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            semiVerts[0],\n            semiOuts[0],\n            semiOuts[1],\n            fxy(nq0),\n            fxy(ns0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(nr0)\n        ]);\n    } else {\n        var state = 2;\n        t = $bm_div($bm_sub(A, quad), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, fy(s0));\n        v4 = fx(v6);\n        newVerts = [\n            semiVerts[0],\n            semiVerts[1],\n            semiVerts[2],\n            fxy(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(s0)\n        ];\n        newIns = tangentsRelative(newVerts, [\n            fy(q0),\n            semiIns[1],\n            semiIns[2],\n            fxy(r0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(s0)\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            semiOuts[0],\n            semiOuts[1],\n            fxy(q0),\n            fxy(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(r0)\n        ]);\n    }\n} else {\n    if (splitY < r3a[1]) {\n        var state = 3;\n        var UpsemiVerts = [\n                [\n                    rad2,\n                    -dist\n                ],\n                [\n                    0,\n                    -(dist - rad2)\n                ],\n                [\n                    -rad2,\n                    -dist\n                ]\n            ];\n        var UpsemiIns = tangentsAbsolute(UpsemiVerts, [\n                [\n                    0,\n                    0\n                ],\n                [\n                    $bm_mul(rad2, semiFac),\n                    0\n                ],\n                [\n                    0,\n                    $bm_mul(rad2, semiFac)\n                ]\n            ]);\n        var UpsemiOuts = tangentsAbsolute(UpsemiVerts, [\n                [\n                    0,\n                    $bm_mul(rad2, semiFac)\n                ],\n                [\n                    $bm_mul($bm_neg(rad2), semiFac),\n                    0\n                ],\n                [\n                    0,\n                    0\n                ]\n            ]);\n        t = $bm_div($bm_sub(quad, A), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        if (rad2 == rad1) {\n            var upA = 0.00001;\n        } else {\n            var upA = $bm_sub(quad, Math.acos(clamp($bm_div($bm_sub(rad2, rad1), dist), -1, 1)));\n        }\n        var upT = $bm_div(upA, quad);\n        var uq0 = midPoint(UpsemiVerts[0], UpsemiOuts[0], upT);\n        uq1 = midPoint(UpsemiOuts[0], UpsemiIns[1], upT);\n        uq2 = midPoint(UpsemiIns[1], UpsemiVerts[1], upT);\n        ur0 = midPoint(uq0, uq1, upT);\n        ur1 = midPoint(uq1, uq2, upT);\n        us0 = midPoint(ur0, ur1, upT);\n        newA = $bm_neg(Math.atan2($bm_sub($bm_neg(dist), splitY), xOnCircleGivenY($bm_sub($bm_neg(dist), splitY), rad2)));\n        newT = $bm_div(newA, upA);\n        nq0 = midPoint(UpsemiVerts[0], uq0, newT);\n        nq1 = midPoint(uq0, ur0, newT);\n        nq2 = midPoint(ur0, us0, newT);\n        nr0 = midPoint(nq0, nq1, newT);\n        nr1 = midPoint(nq1, nq2, newT);\n        ns0 = midPoint(nr0, nr1, newT);\n        newVerts = [\n            s0,\n            semiVerts[1],\n            fx(s0),\n            fx(r3a),\n            fx(ns0),\n            [\n                0,\n                splitY\n            ],\n            ns0,\n            us0\n        ];\n        newIns = tangentsRelative(newVerts, [\n            s0,\n            q2,\n            fx(r1),\n            fx(r3a),\n            fx(nr1),\n            [\n                0,\n                splitY\n            ],\n            ns0,\n            us0\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            r1,\n            fx(q2),\n            fx(r0),\n            fx(nq2),\n            fx(ns0),\n            [\n                0,\n                splitY\n            ],\n            nr1,\n            r3a\n        ]);\n    } else {\n        var state = 4;\n        t = $bm_div($bm_sub(quad, A), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, s0);\n        v4 = fx(v6);\n        newVerts = [\n            s0,\n            s0,\n            semiVerts[1],\n            fx(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            v6\n        ];\n        newIns = tangentsRelative(newVerts, [\n            s0,\n            s0,\n            q2,\n            fx(r1),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            v6\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            s0,\n            r1,\n            fx(q2),\n            fx(r0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            r0\n        ]);\n    }\n}\nif (isProximal != true) {\n    var tempVerts = newVerts;\n    var tempIns = newIns;\n    var tempOuts = newOuts;\n    newVerts = flipArrayY(tempVerts, -dist * 0.5).reverse();\n    newIns = flipArrayY(tempOuts, 0).reverse();\n    newOuts = flipArrayY(tempIns, 0).reverse();\n}\nif (pers != 0) {\n    var pVert = isProximal ? 5 : 2;\n    newVerts[pVert] = $bm_sum(newVerts[pVert], isProximal ? [\n        0,\n        newVerts[pVert + 1][0] * pers\n    ] : [\n        0,\n        -newVerts[pVert + 1][0] * pers\n    ]);\n    newIns[pVert] = [\n        $bm_mul($bm_neg(newVerts[pVert + 1][0]), semiFac),\n        0\n    ];\n    newOuts[pVert] = [\n        $bm_mul(newVerts[pVert + 1][0], semiFac),\n        0\n    ];\n    var B = isProximal ? $bm_sub($bm_div(Math.PI, 2), A) : -(Math.PI / 2 + A);\n    var temp6 = [\n            0,\n            newVerts[pVert + 1][0] * semiFac * pers\n        ];\n    newIns[pVert + 1][0] = $bm_mul($bm_neg(temp6[1]), Math.sin(B));\n    newIns[pVert + 1][1] = $bm_mul(temp6[1], Math.cos(B));\n    var temp4 = [\n            0,\n            newVerts[pVert + 1][0] * semiFac * pers\n        ];\n    newOuts[pVert - 1][0] = $bm_mul($bm_neg(temp4[1]), Math.sin($bm_neg(B)));\n    newOuts[pVert - 1][1] = $bm_mul(temp4[1], Math.cos($bm_neg(B)));\n}\nif (squareEndValue && !isUpper && !isProximal) {\n    if (state === 1) {\n        newVerts[5] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newOuts[4] = [\n            0,\n            0\n        ];\n        newIns[6] = [\n            0,\n            0\n        ];\n    }\n    if (state === 2) {\n        newVerts[6] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newOuts[5] = [\n            0,\n            0\n        ];\n        newIns[7] = [\n            0,\n            0\n        ];\n    }\n    if (state === 3) {\n        newVerts[5] = [\n            $bm_neg(distrad),\n            $bm_neg(dist)\n        ];\n        newVerts[6] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newVerts[7] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newOuts[5] = [\n            0,\n            0\n        ];\n        newIns[7] = [\n            0,\n            0\n        ];\n    }\n    if (state === 4) {\n        newVerts[4] = [\n            $bm_neg(distrad),\n            $bm_neg(dist)\n        ];\n        newVerts[5] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newVerts[6] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newVerts[7] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newOuts[4] = [\n            0,\n            0\n        ];\n        newIns[6] = [\n            0,\n            0\n        ];\n    }\n}\n$bm_rt = createPath(newVerts, newIns, newOuts, true);"},"nm":"Taper Path","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,0,0,1],"ix":4,"x":"var $bm_rt;\n$bm_rt = thisComp.layer('leg-Ankle').effect('Limber')('Lower Color');"},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Distal Lower","np":2,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2,"x":"var $bm_rt;\n$bm_rt = thisComp.layer('leg-Ankle').content('Admin').content('p2blend').transform.position;"},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6,"x":"var $bm_rt;\n$bm_rt = thisComp.layer('leg-Ankle').content('Admin').content('angles').transform.anchorPoint[1];"},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Lower Group","np":2,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Limb","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3,"x":"var $bm_rt;\nvar limbLayers = {\n        ankle: thisComp.layer('leg-Ankle'),\n        hip: thisComp.layer('leg-Hip'),\n        leg: thisComp.layer('leg-Leg')\n    };\n$bm_rt = value;"},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Admin","np":0,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":true}],"ip":0,"op":900.000036657751,"st":0,"bm":0},{"ddd":0,"ind":4,"ty":4,"nm":"arm-Ankle","hd":true,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":24.075,"ix":10,"x":"var $bm_rt;\nvar startctrl = thisComp.layer('arm-Hip');\nvar endctrl = thisLayer;\nvar curLayer = thisLayer;\nvar curRot = 0;\nwhile (curLayer.hasParent) {\n    curRot = $bm_sum(curRot, curLayer.parent('ADBE Transform Group')('ADBE Rotate Z'));\n    curLayer = curLayer.parent;\n}\nvar rotend = $bm_div(endctrl.effect('Limber')('Rotate End'), 100);\nif (rotend == 0) {\n    $bm_rt = $bm_neg(curRot);\n} else {\n    var p1 = startctrl.toWorld([\n            0,\n            0,\n            0\n        ]);\n    var p3ik = endctrl.toWorld([\n            0,\n            0,\n            0\n        ]);\n    var p3r = $bm_sub(p3ik, p1);\n    var c1 = $bm_div(endctrl.content('Admin').content('p1').transform.scale[0], 2);\n    var c2 = $bm_div(endctrl.content('Admin').content('p2blend').transform.scale[0], 2);\n    var c3 = $bm_div(endctrl.content('Admin').content('p3blend').transform.scale[0], 2);\n    var linkLeng = endctrl.effect('Limber')('Link Length to Size Scale');\n    var sizeScale = $bm_div(endctrl.effect('Limber')('Size Scale'), 100);\n    var cw = endctrl.effect('Limber')('Clockwise');\n    var cwLin = Math.abs($bm_div(cw, 100));\n    var antipop = $bm_div(endctrl.effect('Limber')('Anti-pop'), 100);\n    var s3ik = Math.max($bm_mul(endctrl.effect('Limber')('Upper Length'), linkLeng == true ? sizeScale : 1), Math.abs($bm_sub(c1, c2)));\n    var s1ik = Math.max($bm_mul(endctrl.effect('Limber')('Lower Length'), linkLeng == true ? sizeScale : 1), Math.abs($bm_sub(c2, c3)));\n    var totLeng = $bm_sum(s3ik, s1ik);\n    var s2 = length(p1, p3ik);\n    var prox = linear(Math.abs($bm_sub(s2, $bm_div(totLeng, 2))), 0, $bm_div(totLeng, 2), 0, 1);\n    var antipopLin = $bm_mul(totLeng, linear(linear($bm_mul($bm_mul(prox, prox), prox), 0.833, 1), $bm_sub(1, antipop), 1));\n    var s1ap = $bm_mul(antipopLin, $bm_div(s1ik, totLeng));\n    var s3ap = $bm_mul(antipopLin, $bm_div(s3ik, totLeng));\n    var s3blend = $bm_sum($bm_mul(s3ap, cwLin), $bm_mul($bm_mul($bm_div(s3ap, $bm_sum(s3ap, s1ap)), s2), $bm_sub(1, cwLin)));\n    var s1blend = $bm_sum($bm_mul(s1ap, cwLin), $bm_mul($bm_mul($bm_div(s1ap, $bm_sum(s3ap, s1ap)), s2), $bm_sub(1, cwLin)));\n    try {\n        var theta2 = $bm_mul(cw > 0 ? 1 : -1, Math.acos(clamp($bm_div($bm_sub($bm_sub($bm_sum($bm_mul(p3r[1], p3r[1]), $bm_mul(p3r[0], p3r[0])), $bm_mul(s3blend, s3blend)), $bm_mul(s1blend, s1blend)), $bm_mul($bm_mul(2, s3blend), s1blend)), -1, 1)));\n        var theta1 = Math.atan2($bm_sub($bm_mul($bm_neg(p3r[0]), $bm_sum(s3blend, $bm_mul(s1blend, Math.cos(theta2)))), $bm_mul(p3r[1], $bm_mul(s1blend, Math.sin(theta2)))), $bm_sub($bm_mul(p3r[1], $bm_sum(s3blend, $bm_mul(s1blend, Math.cos(theta2)))), $bm_mul(p3r[0], $bm_mul(s1blend, Math.sin(theta2)))));\n        var a1ik = $bm_sum(theta1, Math.PI);\n        var a2ik = $bm_sum($bm_sum(theta1, theta2), Math.PI);\n    } catch (err) {\n        value;\n    }\n    var curveLin = $bm_div(endctrl.effect('Limber')('Bone Curvature'), 100);\n    if (curveLin == 0) {\n        $bm_rt = $bm_sum($bm_mul(rotend, $bm_sub($bm_sub(radiansToDegrees(a2ik), 180), curRot)), $bm_mul($bm_sub(1, rotend), $bm_neg(curRot)));\n    } else {\n        var p2ik = $bm_sum(p1, [\n                Math.sin(a1ik) * s3blend,\n                -Math.cos(a1ik) * s3blend\n            ]);\n        var p3ik = $bm_sum(p2ik, [\n                Math.sin(a2ik) * s1blend,\n                -Math.cos(a2ik) * s1blend\n            ]);\n        var sizeScale = $bm_div(endctrl.effect('Limber')('Size Scale'), 100);\n        var linkScale = endctrl.effect('Limber')('Link Length to Size Scale');\n        var tangLeng = $bm_mul($bm_div($bm_mul(curveLin, $bm_sum(endctrl.effect('Limber')('Upper Length'), endctrl.effect('Limber')('Lower Length'))), 2), linkScale == true ? sizeScale : 1);\n        var avang = $bm_div($bm_sub($bm_sum(a1ik, a2ik), Math.PI), 2);\n        var tangPos = $bm_sum(p2ik, [\n                Math.cos(avang) * tangLeng,\n                Math.sin(avang) * tangLeng\n            ]);\n        var tangPosRel = $bm_sub(tangPos, p3ik);\n        var a1curve = $bm_sum(radiansToDegrees(Math.atan2(tangPosRel[1], tangPosRel[0])), 90);\n        $bm_rt = $bm_sum($bm_sub($bm_mul(rotend, a1curve), curRot), $bm_mul($bm_sub(1, rotend), $bm_neg(curRot)));\n    }\n}"},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":0,"s":[280,248,0],"to":[19.333,59.333,0],"ti":[0.667,-1.333,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":205,"s":[296,404,0],"to":[-0.667,1.333,0],"ti":[-0.667,-1.333,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":430,"s":[388,700,0],"to":[0.667,1.333,0],"ti":[-2.667,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":512,"s":[852,724,0],"to":[2.667,0,0],"ti":[-2.667,0,0]},{"t":643.000026189927,"s":[944,744,0]}],"ix":2,"l":2},"a":{"a":0,"k":[0,0,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"ef":[{"ty":5,"nm":"Limber","np":36,"mn":"Pseudo/Limber_16","ix":1,"en":1,"ef":[{"ty":6,"nm":"Shape","mn":"Pseudo/Limber_16-0001","ix":1,"v":0},{"ty":0,"nm":"Upper Length","mn":"Pseudo/Limber_16-0002","ix":2,"v":{"a":0,"k":200,"ix":2}},{"ty":0,"nm":"Lower Length","mn":"Pseudo/Limber_16-0003","ix":3,"v":{"a":0,"k":200,"ix":3}},{"ty":0,"nm":"Start Size","mn":"Pseudo/Limber_16-0004","ix":4,"v":{"a":0,"k":100,"ix":4}},{"ty":0,"nm":"Middle Size","mn":"Pseudo/Limber_16-0005","ix":5,"v":{"a":0,"k":70,"ix":5}},{"ty":0,"nm":"End Size","mn":"Pseudo/Limber_16-0006","ix":6,"v":{"a":0,"k":40,"ix":6}},{"ty":0,"nm":"Bone Curvature","mn":"Pseudo/Limber_16-0007","ix":7,"v":{"a":0,"k":0,"ix":7}},{"ty":7,"nm":"Square End","mn":"Pseudo/Limber_16-0008","ix":8,"v":{"a":0,"k":0,"ix":8}},{"ty":6,"nm":"Limber","mn":"Pseudo/Limber_16-0009","ix":9,"v":0},{"ty":6,"nm":"Scale","mn":"Pseudo/Limber_16-0010","ix":10,"v":0},{"ty":0,"nm":"Size Scale","mn":"Pseudo/Limber_16-0011","ix":11,"v":{"a":0,"k":100,"ix":11}},{"ty":7,"nm":"Link Length to Size Scale","mn":"Pseudo/Limber_16-0012","ix":12,"v":{"a":0,"k":1,"ix":12}},{"ty":6,"nm":"Limber","mn":"Pseudo/Limber_16-0013","ix":13,"v":0},{"ty":6,"nm":"Colors","mn":"Pseudo/Limber_16-0014","ix":14,"v":0},{"ty":0,"nm":"Upper Split","mn":"Pseudo/Limber_16-0015","ix":15,"v":{"a":0,"k":100,"ix":15}},{"ty":0,"nm":"Upper Rounding","mn":"Pseudo/Limber_16-0016","ix":16,"v":{"a":0,"k":0,"ix":16}},{"ty":0,"nm":"Lower Split","mn":"Pseudo/Limber_16-0017","ix":17,"v":{"a":0,"k":70,"ix":17}},{"ty":0,"nm":"Lower Rounding","mn":"Pseudo/Limber_16-0018","ix":18,"v":{"a":0,"k":0,"ix":18}},{"ty":2,"nm":"Upper Color","mn":"Pseudo/Limber_16-0019","ix":19,"v":{"a":0,"k":[0.058818124235,0.060413964093,0.062009803951,1],"ix":19}},{"ty":2,"nm":"Middle Color","mn":"Pseudo/Limber_16-0020","ix":20,"v":{"a":0,"k":[0.921568632126,0.644690752029,0.176470592618,1],"ix":20}},{"ty":2,"nm":"Lower Color","mn":"Pseudo/Limber_16-0021","ix":21,"v":{"a":0,"k":[0.92156869173,0.643137276173,0.176470592618,1],"ix":21}},{"ty":6,"nm":"Limber","mn":"Pseudo/Limber_16-0022","ix":22,"v":0},{"ty":6,"nm":"Dynamics","mn":"Pseudo/Limber_16-0023","ix":23,"v":0},{"ty":0,"nm":"Clockwise","mn":"Pseudo/Limber_16-0024","ix":24,"v":{"a":0,"k":100,"ix":24}},{"ty":0,"nm":"Rotate Start","mn":"Pseudo/Limber_16-0025","ix":25,"v":{"a":0,"k":0,"ix":25}},{"ty":0,"nm":"Rotate End","mn":"Pseudo/Limber_16-0026","ix":26,"v":{"a":0,"k":0,"ix":26}},{"ty":7,"nm":"Stretch","mn":"Pseudo/Limber_16-0027","ix":27,"v":{"a":0,"k":1,"ix":27}},{"ty":0,"nm":"Anti-pop","mn":"Pseudo/Limber_16-0028","ix":28,"v":{"a":0,"k":0,"ix":28}},{"ty":6,"nm":"Limber","mn":"Pseudo/Limber_16-0029","ix":29,"v":0},{"ty":6,"nm":"Forward Kinematics","mn":"Pseudo/Limber_16-0030","ix":30,"v":0},{"ty":0,"nm":"FK","mn":"Pseudo/Limber_16-0031","ix":31,"v":{"a":0,"k":0,"ix":31}},{"ty":0,"nm":"Upper FK Rotation","mn":"Pseudo/Limber_16-0032","ix":32,"v":{"a":0,"k":180,"ix":32}},{"ty":0,"nm":"Lower FK Rotation","mn":"Pseudo/Limber_16-0033","ix":33,"v":{"a":0,"k":0,"ix":33}},{"ty":6,"nm":"Limber","mn":"Pseudo/Limber_16-0034","ix":34,"v":0}]}],"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[3.082,3.37],[0,0],[0,0],[0,0],[0,0],[0,-4.927],[-10.467,0],[0,10.467]],"o":[[0,0],[0,0],[0,0],[0,0],[-3.082,3.371],[0,10.467],[10.467,0],[0,-4.927]],"v":[[13.989,-12.688],[13.991,-12.688],[0,-27.99],[-13.991,-12.688],[-13.989,-12.688],[-18.952,0.096],[0,19.048],[18.952,0.096]],"c":true},"ix":2,"x":"var $bm_rt;\n$bm_rt = value;"},"nm":"Path","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0,0.800000011921,0,1],"ix":4,"x":"var $bm_rt;\nvar hsl;\nvar startctrl = thisComp.layer('arm-Hip');\nvar endctrl = thisLayer;\nvar totLeng = $bm_mul($bm_sum(endctrl.effect('Limber')('Upper Length'), endctrl.effect('Limber')('Lower Length')), endctrl.effect('Limber')('Link Length to Size Scale') == true ? endctrl.effect('Limber')('Size Scale') / 100 : 1);\nvar stretchLimit = length(endctrl.toWorld(endctrl.anchorPoint), startctrl.toWorld(startctrl.anchorPoint));\n$bm_rt = hsl = $bm_sum([\n    0.333,\n    1,\n    0.4,\n    0\n], [\n    linear(stretchLimit, $bm_mul(totLeng, 0.97), totLeng, 0, 0.19),\n    0,\n    0\n]);\nif (stretchLimit > totLeng)\n    $bm_rt = [\n        1,\n        0,\n        0,\n        0\n    ];\nelse\n    $bm_rt = hslToRgb(hsl);"},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":180,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Controller","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ty":"gr","it":[{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2,"x":"var $bm_rt;\nvar s1blend = thisLayer.content('Admin').content('sides').transform.position[0];\nvar a2blend = degreesToRadians(thisLayer.content('Admin').content('angles').transform.anchorPoint[1]);\nvar p2blend = thisLayer.content('Admin').content('p2blend').transform.position;\n$bm_rt = $bm_sum(p2blend, [\n    Math.sin(a2blend) * s1blend,\n    -Math.cos(a2blend) * s1blend\n]);"},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"p3blend","np":0,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":true},{"ty":"gr","it":[{"ty":"tr","p":{"a":0,"k":[1,0],"ix":2,"x":"var $bm_rt;\nvar s3blend = thisLayer(2)('Admin').content('sides').transform.position[1];\nvar a1blend = degreesToRadians(thisLayer.content('Admin').content('angles').transform.anchorPoint[0]);\n$bm_rt = $bm_sum(thisLayer.content('Admin').content('p1').transform.position, [\n    Math.sin(a1blend) * s3blend,\n    -Math.cos(a1blend) * s3blend\n]);"},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3,"x":"var $bm_rt;\nvar c2;\nvar endctrl = thisComp.layer('arm-Ankle');\nvar sizeScale = $bm_div(endctrl.effect('Limber')('Size Scale'), 100);\nc2 = clamp($bm_mul(endctrl.effect('Limber')('Middle Size'), sizeScale), 1, $bm_mul($bm_mul($bm_sum(endctrl.effect('Limber')('Upper Length'), endctrl.effect('Limber')('Lower Length')), 0.55), endctrl.effect('Limber')('Link Length to Size Scale') == true ? sizeScale : 1));\n$bm_rt = [\n    c2,\n    c2\n];"},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"p2blend","np":0,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":true},{"ty":"gr","it":[{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1,"x":"var $bm_rt;\nvar startctrl = thisComp.layer('arm-Hip');\nvar endctrl = thisComp.layer('arm-Ankle');\nvar fk = $bm_div(endctrl.effect('Limber')('FK'), 100);\nif (fk == 1) {\n    var curLayer = startctrl;\n    var curRot = 0;\n    while (curLayer.hasParent) {\n        curRot = $bm_sum(curRot, curLayer.parent('ADBE Transform Group')('ADBE Rotate Z'));\n        curLayer = curLayer.parent;\n    }\n    var a1fk = $bm_sum(curRot, endctrl.effect('Limber')('Upper FK Rotation'));\n    var a2fk = endctrl.effect('Limber')('Lower FK Rotation');\n    $bm_rt = [\n        a1fk,\n        a1fk + a2fk\n    ];\n} else if (fk == 0) {\n    var p1 = thisLayer.content('Admin').content('p1').transform.position;\n    var p3ik = thisLayer.content('Admin').content('p3ik').transform.position;\n    var p3r = $bm_sub(p3ik, p1);\n    var s2ik = length(p1, p3ik);\n    var sides = thisLayer.content('Admin').content('sides').transform.position;\n    var s3blend = sides[1];\n    var s1blend = sides[0];\n    var cw = endctrl.effect('Limber')('Clockwise');\n    try {\n        var theta2 = $bm_mul($bm_neg(cw > 0 ? -1 : 1), Math.acos(clamp($bm_div($bm_sub($bm_sub($bm_sum($bm_mul(p3r[1], p3r[1]), $bm_mul(p3r[0], p3r[0])), $bm_mul(s3blend, s3blend)), $bm_mul(s1blend, s1blend)), $bm_mul($bm_mul(2, s3blend), s1blend)), -1, 1)));\n        var theta1 = Math.atan2($bm_sub($bm_mul($bm_neg(p3r[0]), $bm_sum(s3blend, $bm_mul(s1blend, Math.cos(theta2)))), $bm_mul(p3r[1], $bm_mul(s1blend, Math.sin(theta2)))), $bm_sub($bm_mul(p3r[1], $bm_sum(s3blend, $bm_mul(s1blend, Math.cos(theta2)))), $bm_mul(p3r[0], $bm_mul(s1blend, Math.sin(theta2)))));\n        var a1ik = $bm_sum(180, radiansToDegrees(theta1));\n        var a2ik = $bm_sum(180, radiansToDegrees($bm_sum(theta1, theta2)));\n        $bm_rt = [\n            a1ik,\n            a2ik\n        ];\n    } catch (err) {\n        $bm_rt = value;\n    }\n} else {\n    var curLayer = startctrl;\n    var curRot = 0;\n    while (curLayer.hasParent) {\n        curRot = $bm_sum(curRot, curLayer.parent('ADBE Transform Group')('ADBE Rotate Z'));\n        curLayer = curLayer.parent;\n    }\n    var a2fk = endctrl.effect('Limber')('Lower FK Rotation');\n    var a1fk = $bm_sum(curRot, endctrl.effect('Limber')('Upper FK Rotation'));\n    var p1 = thisLayer.content('Admin').content('p1').transform.position;\n    var p3ik = thisLayer.content('Admin').content('p3ik').transform.position;\n    var sides = thisLayer.content('Admin').content('sides').transform.position;\n    var s3blend = sides[1];\n    var s1blend = sides[0];\n    var p3r = $bm_sub(p3ik, p1);\n    var cw = endctrl.effect('Limber')('Clockwise');\n    try {\n        var theta2 = $bm_mul($bm_neg(cw > 0 ? -1 : 1), Math.acos(clamp($bm_div($bm_sub($bm_sub($bm_sum($bm_mul(p3r[1], p3r[1]), $bm_mul(p3r[0], p3r[0])), $bm_mul(s3blend, s3blend)), $bm_mul(s1blend, s1blend)), $bm_mul($bm_mul(2, s3blend), s1blend)), -1, 1)));\n        var theta1 = Math.atan2($bm_sub($bm_mul($bm_neg(p3r[0]), $bm_sum(s3blend, $bm_mul(s1blend, Math.cos(theta2)))), $bm_mul(p3r[1], $bm_mul(s1blend, Math.sin(theta2)))), $bm_sub($bm_mul(p3r[1], $bm_sum(s3blend, $bm_mul(s1blend, Math.cos(theta2)))), $bm_mul(p3r[0], $bm_mul(s1blend, Math.sin(theta2)))));\n        var a1ik = $bm_sum(180, radiansToDegrees(theta1));\n        var a2ik = $bm_sum(180, radiansToDegrees($bm_sum(theta1, theta2)));\n        var a1blend = $bm_sum($bm_mul(a1ik, $bm_sub(1, fk)), $bm_mul(a1fk, fk));\n        var a2blend = $bm_sum($bm_mul(a2ik, $bm_sub(1, fk)), $bm_mul($bm_sum(a1fk, a2fk), fk));\n        $bm_rt = [\n            a1blend,\n            a2blend\n        ];\n    } catch (err) {\n        $bm_rt = value;\n    }\n}"},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"angles","np":0,"cix":2,"bm":0,"ix":3,"mn":"ADBE Vector Group","hd":true},{"ty":"gr","it":[{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2,"x":"var $bm_rt;\nvar endctrl = thisComp.layer('arm-Ankle');\nvar startctrl = thisComp.layer('arm-Hip');\nvar fk = $bm_div(endctrl.effect('Limber')('FK'), 100);\nvar p1 = thisLayer.content('Admin').content('p1').transform.position;\nvar p3 = thisLayer.content('Admin').content('p3ik').transform.position;\nvar c1 = $bm_div(thisLayer.content('Admin').content('p1').transform.scale[0], 2);\nvar c2 = $bm_div(thisLayer.content('Admin').content('p2blend').transform.scale[0], 2);\nvar c3 = $bm_div(thisLayer.content('Admin').content('p3ik').transform.scale[0], 2);\nvar linkLeng = endctrl.effect('Limber')('Link Length to Size Scale');\nvar sizeScale = $bm_div(endctrl.effect('Limber')('Size Scale'), 100);\nvar stretch = endctrl.effect('Limber')('Stretch');\nvar cw = $bm_div(endctrl.effect('Limber')('Clockwise'), 100);\nvar cwLin = Math.abs(cw);\nvar antipop = $bm_div(endctrl.effect('Limber')('Anti-pop'), 100);\nvar s3ik = Math.max($bm_mul(endctrl.effect('Limber')('Upper Length'), linkLeng == true ? sizeScale : 1), Math.abs($bm_sub(c1, c2)));\nvar s1ik = Math.max($bm_mul(endctrl.effect('Limber')('Lower Length'), linkLeng == true ? sizeScale : 1), Math.abs($bm_sub(c2, c3)));\nvar totLeng = $bm_sum(s3ik, s1ik);\nvar s2 = length(p1, p3);\nif (s2 > totLeng && stretch == false) {\n    $bm_rt = [\n        s1ik,\n        s3ik\n    ];\n} else if (s2 > totLeng && stretch == true) {\n    var increase = $bm_sum(1, $bm_div($bm_sub(s2, totLeng), totLeng));\n    $bm_rt = [\n        s1ik * increase * (1 - fk) + s1ik * fk,\n        s3ik * increase * (1 - fk) + s3ik * fk\n    ];\n} else {\n    var prox = linear(Math.abs($bm_sub(s2, $bm_div(totLeng, 2))), 0, $bm_div(totLeng, 2), 0, 1);\n    var antipopLin = $bm_mul(totLeng, linear(linear($bm_mul($bm_mul(prox, prox), prox), 0.833, 1), $bm_sub(1, $bm_mul(antipop, $bm_sub(1, fk))), 1));\n    var cwBlend = $bm_sum(cwLin, $bm_mul(fk, $bm_sub(1, cwLin)));\n    var s1ap = $bm_mul(antipopLin, $bm_div(s1ik, totLeng));\n    var s3ap = $bm_mul(antipopLin, $bm_div(s3ik, totLeng));\n    var s3blend = $bm_sum($bm_mul(s3ap, cwBlend), $bm_mul($bm_mul($bm_div(s3ap, $bm_sum(s3ap, s1ap)), s2), $bm_sub(1, cwBlend)));\n    var s1blend = $bm_sum($bm_mul(s1ap, cwBlend), $bm_mul($bm_mul($bm_div(s1ap, $bm_sum(s3ap, s1ap)), s2), $bm_sub(1, cwBlend)));\n    $bm_rt = [\n        s1blend,\n        s3blend\n    ];\n}"},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"sides","np":0,"cix":2,"bm":0,"ix":4,"mn":"ADBE Vector Group","hd":true},{"ty":"gr","it":[{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2,"x":"var $bm_rt;\nvar val = thisComp.layer('arm-Ankle');\n$bm_rt = val.toWorld(val.anchorPoint);"},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3,"x":"var $bm_rt;\nvar endctrl = thisComp.layer('arm-Ankle');\nvar c3 = $bm_div($bm_mul(endctrl.effect('Limber')('End Size'), endctrl.effect('Limber')('Size Scale')), 100);\n$bm_rt = [\n    c3,\n    c3\n];"},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"p3ik","np":0,"cix":2,"bm":0,"ix":5,"mn":"ADBE Vector Group","hd":true},{"ty":"gr","it":[{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2,"x":"var $bm_rt;\nvar val = thisComp.layer('arm-Hip');\n$bm_rt = val.toWorld(val.anchorPoint);"},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3,"x":"var $bm_rt;\nvar endctrl = thisComp.layer('arm-Ankle');\nvar c1 = $bm_div($bm_mul(endctrl.effect('Limber')('Start Size'), endctrl.effect('Limber')('Size Scale')), 100);\n$bm_rt = [\n    c1,\n    c1\n];"},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"p1","np":0,"cix":2,"bm":0,"ix":6,"mn":"ADBE Vector Group","hd":true},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3,"x":"var $bm_rt;\nvar limbLayers = {\n        ankle: thisComp.layer('arm-Ankle'),\n        hip: thisComp.layer('arm-Hip'),\n        leg: thisComp.layer('arm-Leg')\n    };\n$bm_rt = value;"},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Admin","np":6,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":900.000036657751,"st":0,"bm":0},{"ddd":0,"ind":5,"ty":4,"nm":"arm-Hip","parent":7,"hd":true,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10,"x":"var $bm_rt;\nvar endctrl = thisComp.layer('arm-Ankle');\nvar startctrl = thisComp.layer('arm-Hip');\nvar rotstart = $bm_div(endctrl.effect('Limber')('Rotate Start'), 100);\nvar curlayer = startctrl;\nvar curRot = 0;\nwhile (curlayer.hasParent) {\n    curRot = $bm_sum(curRot, curlayer.parent('ADBE Transform Group')('ADBE Rotate Z'));\n    curlayer = curlayer.parent;\n}\nif (rotstart == 0) {\n    $bm_rt = $bm_neg(curRot);\n} else {\n    var fk = $bm_div(endctrl.effect('Limber')('FK'), 100);\n    if (fk == 1) {\n        var startctrl = thisComp.layer('arm-Hip');\n        var p1 = startctrl.toWorld([\n                0,\n                0,\n                0\n            ]);\n        var a1fk = degreesToRadians(endctrl.effect('Limber')('Upper FK Rotation'));\n        var curveLin = $bm_div(endctrl.effect('Limber')('Bone Curvature'), 100);\n        if (curveLin == 0) {\n            $bm_rt = $bm_sum($bm_sub($bm_mul(rotstart, $bm_sub(radiansToDegrees(a1fk), 180)), curRot), $bm_mul($bm_neg(rotstart), $bm_neg(curRot)));\n        } else {\n            var a2fk = degreesToRadians(endctrl.effect('Limber')('Lower FK Rotation'));\n            var c1 = $bm_div(endctrl.content('Admin').content('p1').transform.scale[0], 2);\n            var c2 = $bm_div(endctr.content('Admin').content('p2blend').transform.scale[0], 2);\n            var c3 = $bm_div(endctrl.content('Admin').content('p3blend').transform.scale[0], 2);\n            var s3fk = Math.max(endctrl.effect('Limber')('Upper Length'), Math.abs($bm_sub(c1, c2)));\n            var s1fk = Math.max(endctrl.effect('Limber')('Lower Length'), Math.abs($bm_sub(c2, c3)));\n            var p2fk = $bm_sum(p1, [\n                    Math.sin(a1fk) * s3fk,\n                    -Math.cos(a1fk) * s3fk\n                ]);\n            var avang = $bm_div($bm_sub($bm_sum($bm_sum(a1fk, a1fk), a2fk), Math.PI), 2);\n            var tangLeng = $bm_div($bm_mul(curveLin, $bm_sum(s3fk, s1fk)), 2);\n            var tangPos = $bm_sub(p2fk, [\n                    Math.cos(avang) * tangLeng,\n                    Math.sin(avang) * tangLeng\n                ]);\n            var tangPosRel = $bm_sub(tangPos, p1);\n            var a1fkcurve = $bm_sub(radiansToDegrees(Math.atan2(tangPosRel[1], tangPosRel[0])), 90);\n            $bm_rt = $bm_sum($bm_sub($bm_mul(rotstart, a1fkcurve), curRot), $bm_mul($bm_neg(rotstart), $bm_neg(curRot)));\n        }\n    } else if (fk == 0) {\n        var p1 = startctrl.toWorld([\n                0,\n                0,\n                0\n            ]);\n        var p3ik = endctrl.toWorld([\n                0,\n                0,\n                0\n            ]);\n        var p3r = $bm_sub(p3ik, p1);\n        var s2 = length(p1, p3ik);\n        var c1 = $bm_div(endctrl.content('Admin').content('p1').transform.scale[0], 2);\n        var c2 = $bm_div(endctrl.content('Admin').content('p2blend').transform.scale[0], 2);\n        var c3 = $bm_div(endctrl.content('Admin').content('p3blend').transform.scale[0], 2);\n        var linkLeng = endctrl.effect('Limber')('Link Length to Size Scale');\n        var sizeScale = $bm_div(endctrl.effect('Limber')('Size Scale'), 100);\n        var cw = endctrl.effect('Limber')('Clockwise');\n        var cwLin = Math.abs($bm_div(cw, 100));\n        var antipop = $bm_div(endctrl.effect('Limber')('Anti-pop'), 100);\n        var s3ik = Math.max($bm_mul(endctrl.effect('Limber')('Upper Length'), linkLeng == true ? sizeScale : 1), Math.abs($bm_sub(c1, c2)));\n        var s1ik = Math.max($bm_mul(endctrl.effect('Limber')('Lower Length'), linkLeng == true ? sizeScale : 1), Math.abs($bm_sub(c2, c3)));\n        var totLeng = $bm_sum(s3ik, s1ik);\n        var s2 = length(p1, p3ik);\n        var prox = linear(Math.abs($bm_sub(s2, $bm_div(totLeng, 2))), 0, $bm_div(totLeng, 2), 0, 1);\n        var antipopLin = $bm_mul(totLeng, linear(linear($bm_mul($bm_mul(prox, prox), prox), 0.833, 1), $bm_sub(1, antipop), 1));\n        var s1ap = $bm_mul(antipopLin, $bm_div(s1ik, totLeng));\n        var s3ap = $bm_mul(antipopLin, $bm_div(s3ik, totLeng));\n        var cwBlend = $bm_sum(cwLin, $bm_mul(fk, $bm_sub(1, cwLin)));\n        var s3blend = $bm_sum($bm_mul(s3ap, cwBlend), $bm_mul($bm_mul($bm_div(s3ap, $bm_sum(s3ap, s1ap)), s2), $bm_sub(1, cwBlend)));\n        var s1blend = $bm_sum($bm_mul(s1ap, cwBlend), $bm_mul($bm_mul($bm_div(s1ap, $bm_sum(s3ap, s1ap)), s2), $bm_sub(1, cwBlend)));\n        try {\n            var theta2 = $bm_mul(cw > 0 ? 1 : -1, Math.acos(clamp($bm_div($bm_sub($bm_sub($bm_sum($bm_mul(p3r[1], p3r[1]), $bm_mul(p3r[0], p3r[0])), $bm_mul(s3blend, s3blend)), $bm_mul(s1blend, s1blend)), $bm_mul($bm_mul(2, s3blend), s1blend)), -1, 1)));\n            var theta1 = Math.atan2($bm_sub($bm_mul($bm_neg(p3r[0]), $bm_sum(s3blend, $bm_mul(s1blend, Math.cos(theta2)))), $bm_mul(p3r[1], $bm_mul(s1blend, Math.sin(theta2)))), $bm_sub($bm_mul(p3r[1], $bm_sum(s3blend, $bm_mul(s1blend, Math.cos(theta2)))), $bm_mul(p3r[0], $bm_mul(s1blend, Math.sin(theta2)))));\n            var a1ik = $bm_sum(theta1, Math.PI);\n            var a2ik = theta2;\n        } catch (err) {\n            value;\n        }\n        var curveLin = $bm_div(endctrl.effect('Limber')('Bone Curvature'), 100);\n        if (curveLin == 0) {\n            $bm_rt = $bm_sum($bm_mul(rotstart, $bm_sub($bm_sub(radiansToDegrees(a1ik), 180), curRot)), $bm_mul($bm_sub(1, rotstart), $bm_neg(curRot)));\n        } else {\n            var p2ik = $bm_sum(p1, [\n                    Math.sin(a1ik) * s3blend,\n                    -Math.cos(a1ik) * s3blend\n                ]);\n            var avang = $bm_div($bm_sub($bm_sum($bm_sum(a1ik, a1ik), a2ik), Math.PI), 2);\n            var sizeScale = $bm_div(endctrl.effect('Limber')('Size Scale'), 100);\n            var linkScale = endctrl.effect('Limber')('Link Length to Size Scale');\n            var tangLeng = $bm_mul($bm_div($bm_mul(curveLin, $bm_sum(endctrl.effect('Limber')('Upper Length'), endctrl.effect('Limber')('Lower Length'))), 2), linkScale == true ? sizeScale : 1);\n            var tangPos = $bm_sub(p2ik, [\n                    Math.cos(avang) * tangLeng,\n                    Math.sin(avang) * tangLeng\n                ]);\n            var tangPosRel = $bm_sub(tangPos, p1);\n            var curveRotik = $bm_sub(radiansToDegrees(Math.atan2(tangPosRel[1], tangPosRel[0])), 90);\n            $bm_rt = $bm_sum($bm_mul(rotstart, $bm_sub(curveRotik, curRot)), $bm_mul($bm_sub(1, rotstart), $bm_neg(curRot)));\n        }\n    } else {\n        var p1 = startctrl.toWorld([\n                0,\n                0,\n                0\n            ]);\n        var p3ik = endctrl.toWorld([\n                0,\n                0,\n                0\n            ]);\n        var p3r = $bm_sub(p3ik, p1);\n        var s2 = length(p1, p3ik);\n        var c1 = $bm_div(endctrl.content('Admin').content('p1').transform.scale[0], 2);\n        var c2 = $bm_div(endctrl.content('Admin').content('p2blend').transform.scale[0], 2);\n        var c3 = $bm_div(endctrl.content('Admin').content('p3blend').transform.scale[0], 2);\n        var linkLeng = endctrl.effect('Limber')('Link Length to Size Scale');\n        var sizeScale = $bm_div(endctrl.effect('Limber')('Size Scale'), 100);\n        var cw = endctrl.effect('Limber')('Clockwise');\n        var cwLin = Math.abs($bm_div(cw, 100));\n        var s3ik = Math.max($bm_mul(endctrl.effect('Limber')('Upper Length'), linkLeng == true ? sizeScale : 1), Math.abs($bm_sub(c1, c2)));\n        var s1ik = Math.max($bm_mul(endctrl.effect('Limber')('Lower Length'), linkLeng == true ? sizeScale : 1), Math.abs($bm_sub(c2, c3)));\n        var totLeng = $bm_sum(s3ik, s1ik);\n        var s2 = length(p1, p3ik);\n        var prox = linear(Math.abs($bm_sub(s2, $bm_div(totLeng, 2))), 0, $bm_div(totLeng, 2), 0, 1);\n        var antipopLin = $bm_mul(totLeng, linear(linear($bm_mul($bm_mul(prox, prox), prox), 0.833, 1), $bm_sub(1, $bm_div(endctrl.effect('Limber')('Anti-pop'), 100)), 1));\n        var s1ap = $bm_mul(antipopLin, $bm_div(s1ik, totLeng));\n        var s3ap = $bm_mul(antipopLin, $bm_div(s3ik, totLeng));\n        var cwBlend = $bm_sum(cwLin, $bm_mul(fk, $bm_sub(1, cwLin)));\n        var s3blend = $bm_sum($bm_mul(s3ap, cwBlend), $bm_mul($bm_mul($bm_div(s3ap, $bm_sum(s3ap, s1ap)), s2), $bm_sub(1, cwBlend)));\n        var s1blend = $bm_sum($bm_mul(s1ap, cwBlend), $bm_mul($bm_mul($bm_div(s1ap, $bm_sum(s3ap, s1ap)), s2), $bm_sub(1, cwBlend)));\n        try {\n            var theta2 = $bm_mul(cw > 0 ? 1 : -1, Math.acos(clamp($bm_div($bm_sub($bm_sub($bm_sum($bm_mul(p3r[1], p3r[1]), $bm_mul(p3r[0], p3r[0])), $bm_mul(s3blend, s3blend)), $bm_mul(s1blend, s1blend)), $bm_mul($bm_mul(2, s3blend), s1blend)), -1, 1)));\n            var theta1 = Math.atan2($bm_sub($bm_mul($bm_neg(p3r[0]), $bm_sum(s3blend, $bm_mul(s1blend, Math.cos(theta2)))), $bm_mul(p3r[1], $bm_mul(s1blend, Math.sin(theta2)))), $bm_sub($bm_mul(p3r[1], $bm_sum(s3blend, $bm_mul(s1blend, Math.cos(theta2)))), $bm_mul(p3r[0], $bm_mul(s1blend, Math.sin(theta2)))));\n            var a1ik = $bm_sum(theta1, Math.PI);\n            var a2ik = theta2;\n        } catch (err) {\n            value;\n        }\n        var a1fk = degreesToRadians($bm_sum(curRot, endctrl.effect('Limber')('Upper FK Rotation')));\n        var a2fk = degreesToRadians(endctrl.effect('Limber')('Lower FK Rotation'));\n        var a1blend = $bm_sum($bm_mul(a1ik, $bm_sub(1, fk)), $bm_mul(a1fk, fk));\n        var a2blend = $bm_sum($bm_mul(a2ik, $bm_sub(1, fk)), $bm_mul(a2fk, fk));\n        var p2blend = $bm_sum(p1, [\n                Math.sin(a1blend) * s3blend,\n                -Math.cos(a1blend) * s3blend\n            ]);\n        var curveLin = $bm_div(endctrl.effect('Limber')('Bone Curvature'), 100);\n        if (curveLin == 0) {\n            $bm_rt = $bm_sum($bm_mul(rotstart, $bm_sub($bm_sub(radiansToDegrees(a1blend), 180), curRot)), $bm_mul($bm_sub(1, rotstart), $bm_neg(curRot)));\n        } else {\n            var avang = $bm_div($bm_sub($bm_sum($bm_sum(a1blend, a1blend), a2blend), Math.PI), 2);\n            var tangLeng = $bm_div($bm_mul(curveLin, totLeng), 2);\n            var tangPos = $bm_sub(p2blend, [\n                    Math.cos(avang) * tangLeng,\n                    Math.sin(avang) * tangLeng\n                ]);\n            var tangPosRel = $bm_sub(tangPos, p1);\n            var curveRotblend = $bm_sub(radiansToDegrees(Math.atan2(tangPosRel[1], tangPosRel[0])), 90);\n            $bm_rt = $bm_sum($bm_mul(rotstart, $bm_sub(curveRotblend, curRot)), $bm_mul($bm_sub(1, rotstart), $bm_neg(curRot)));\n        }\n    }\n}"},"p":{"a":0,"k":[-36,-4,0],"ix":2,"l":2},"a":{"a":0,"k":[0,0,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100],"ix":6,"l":2}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[3.082,3.37],[0,0],[0,0],[0,0],[0,0],[0,-4.927],[-10.467,0],[0,10.467]],"o":[[0,0],[0,0],[0,0],[0,0],[-3.082,3.371],[0,10.467],[10.467,0],[0,-4.927]],"v":[[13.989,-12.688],[13.991,-12.688],[0,-27.99],[-13.991,-12.688],[-13.989,-12.688],[-18.952,0.096],[0,19.048],[18.952,0.096]],"c":true},"ix":2},"nm":"Path","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0,0.800000011921,0,1],"ix":4,"x":"var $bm_rt;\nvar hsl;\nvar startctrl = thisLayer;\nvar endctrl = thisComp.layer('arm-Ankle');\nvar totLeng = $bm_mul($bm_sum(endctrl.effect('Limber')('Upper Length'), endctrl.effect('Limber')('Lower Length')), endctrl.effect('Limber')('Link Length to Size Scale') == true ? endctrl.effect('Limber')('Size Scale') / 100 : 1);\nvar stretchLimit = length(endctrl.toWorld(endctrl.anchorPoint), startctrl.toWorld(startctrl.anchorPoint));\n$bm_rt = hsl = $bm_sum([\n    0.333,\n    1,\n    0.4,\n    0\n], [\n    linear(stretchLimit, $bm_mul(totLeng, 0.97), totLeng, 0, 0.19),\n    0,\n    0\n]);\nif (stretchLimit > totLeng)\n    $bm_rt = [\n        1,\n        0,\n        0,\n        0\n    ];\nelse\n    $bm_rt = hslToRgb(hsl);"},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":180,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Controller","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3,"x":"var $bm_rt;\nvar limbLayers = {\n        ankle: thisComp.layer('arm-Ankle'),\n        hip: thisComp.layer('arm-Hip'),\n        leg: thisComp.layer('arm-Leg')\n    };\n$bm_rt = value;"},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Admin","np":0,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":900.000036657751,"st":0,"bm":0},{"ddd":0,"ind":6,"ty":4,"nm":"arm-Leg","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10,"x":"var $bm_rt;\nvar curlayer = thisLayer;\nvar rot = 0;\nwhile (curlayer.hasParent) {\n    rot = $bm_sum(rot, curlayer.parent('ADBE Transform Group')('ADBE Rotate Z'));\n    curlayer = curlayer.parent;\n}\n$bm_rt = $bm_neg(rot);"},"p":{"a":0,"k":[0,0,0],"ix":2,"x":"var $bm_rt;\nvar val = [\n        0,\n        0\n    ];\nif (thisLayer.hasParent)\n    val = parent.fromWorld([\n        0,\n        0,\n        0\n    ]);\n$bm_rt = [\n    val[0],\n    val[1],\n    0\n];","l":2},"a":{"a":0,"k":[0,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"shapes":[{"ty":"gr","it":[{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[],"o":[],"v":[],"c":false},"ix":2,"x":"var $bm_rt;\nvar newA, newT, nq0, nq1, nq2, nr0, nr1, ns0, t, q0, q1, q2, r0, r1, s0, v6, v4, newVerts, newIns, newOuts, uq1, uq2, ur0, ur1, us0;\nfunction midPoint(p1, p2, per) {\n    return [\n        p1[0] + (p2[0] - p1[0]) * per,\n        p1[1] + (p2[1] - p1[1]) * per\n    ];\n}\nfunction tangentsAbsolute(vertices, tans) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        tans[i] = $bm_sum(tans[i], vertices[i]);\n    }\n    return tans;\n}\nfunction tangentsRelative(vertices, tans) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        tans[i] = $bm_sub(tans[i], vertices[i]);\n    }\n    return tans;\n}\nfunction fx(point) {\n    return [\n        -point[0],\n        point[1]\n    ];\n}\nfunction fy(point) {\n    return [\n        point[0],\n        -point[1]\n    ];\n}\nfunction fxy(point) {\n    return [\n        -point[0],\n        -point[1]\n    ];\n}\nfunction flipArrayY(vertices, flipPoint) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        vertices[i] = [\n            vertices[i][0],\n            $bm_sub($bm_mul(flipPoint, 2), vertices[i][1])\n        ];\n    }\n    return vertices;\n}\nfunction pointAlongY(val, p1, p2) {\n    var linearValue = linear(val, p1[1], p2[1], p1[0], p2[0]);\n    return [\n        linearValue,\n        val\n    ];\n}\nfunction xOnCircleGivenY(x, r) {\n    return Math.sqrt($bm_sub($bm_mul(r, r), $bm_mul(x, x)));\n}\nvar semiFac = 0.55228474983079;\nvar quad = $bm_mul(0.5, Math.PI);\nvar groupName = thisProperty.propertyGroup(3)._name;\nvar isUpper = groupName.split(' ')[1] === 'Upper';\nvar isProximal = groupName.split(' ')[0] === 'Proximal';\nvar endctrl = thisComp.layer('arm-Ankle');\nvar lowerSplit = endctrl.effect('Limber')('Lower Split');\nvar lowerSplitValue = $bm_div(lowerSplit.value, 100);\nvar upperSplit = endctrl.effect('Limber')('Upper Split');\nvar upperSplitValue = $bm_div(upperSplit.value, 100);\nvar lowerRounding = endctrl.effect('Limber')('Lower Rounding');\nvar lowerRoundingValue = $bm_div(lowerRounding.value, 100);\nvar upperRounding = endctrl.effect('Limber')('Upper Rounding');\nvar upperRoundingValue = $bm_div(upperRounding.value, 100);\nvar squareEndValue = endctrl.effect('Limber')('Square End').value;\nvar sides = endctrl.content('Admin').content('sides').transform.position;\nif (isUpper) {\n    var c2 = endctrl.content('Admin').content('p2blend').transform.scale;\n    var c1 = endctrl.content('Admin').content('p1').transform.scale;\n    var dist = sides[1];\n} else {\n    var c1 = endctrl.content('Admin').content('p2blend').transform.scale;\n    var c2 = endctrl.content('Admin').content('p3ik').transform.scale;\n    var dist = sides[0];\n}\nvar distrad = $bm_mul(c2[0], 0.5);\nvar proxrad = $bm_mul(c1[0], 0.5);\nvar pers = $bm_neg(lowerRoundingValue);\nvar splitY = isProximal ? lowerSplitValue : $bm_sub(1, lowerSplitValue);\nif (isUpper) {\n    pers = $bm_neg(upperRoundingValue);\n    splitY = isProximal ? upperSplitValue : $bm_sub(1, upperSplitValue);\n}\nsplitY = $bm_sub($bm_mul($bm_neg(dist), splitY), 0.5);\nvar rad1 = isProximal ? proxrad : distrad;\nvar rad2 = isProximal ? distrad : proxrad;\nvar A = Math.acos(clamp($bm_div($bm_sub(rad2, rad1), dist), -1, 1));\nvar r3a = [\n        rad2 * Math.sin(A),\n        -(dist - rad2 * Math.cos(A))\n    ];\nvar r3b = [\n        rad1 * Math.sin(A),\n        rad1 * Math.cos(A)\n    ];\nvar semiVerts = [\n        [\n            rad1,\n            0\n        ],\n        [\n            0,\n            rad1\n        ],\n        [\n            -rad1,\n            0\n        ]\n    ];\nvar semiIns = tangentsAbsolute(semiVerts, [\n        [\n            0,\n            0\n        ],\n        [\n            $bm_mul(rad1, semiFac),\n            0\n        ],\n        [\n            0,\n            $bm_mul(rad1, semiFac)\n        ]\n    ]);\nvar semiOuts = tangentsAbsolute(semiVerts, [\n        [\n            0,\n            $bm_mul(rad1, semiFac)\n        ],\n        [\n            $bm_mul($bm_neg(rad1), semiFac),\n            0\n        ],\n        [\n            0,\n            0\n        ]\n    ]);\nif (rad2 < rad1) {\n    if (splitY > r3b[1]) {\n        var state = 1;\n        newA = $bm_neg(Math.atan2(splitY, xOnCircleGivenY(splitY, rad1)));\n        newT = $bm_div(newA, quad);\n        nq0 = midPoint(semiVerts[0], semiOuts[0], newT);\n        nq1 = midPoint(semiOuts[0], semiIns[1], newT);\n        nq2 = midPoint(semiIns[1], semiVerts[1], newT);\n        nr0 = midPoint(nq0, nq1, newT);\n        nr1 = midPoint(nq1, nq2, newT);\n        ns0 = midPoint(nr0, nr1, newT);\n        t = $bm_div($bm_sub(A, quad), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, fy(s0));\n        v4 = fx(v6);\n        newVerts = [\n            semiVerts[0],\n            semiVerts[0],\n            semiVerts[1],\n            semiVerts[2],\n            fxy(ns0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(ns0)\n        ];\n        newIns = tangentsRelative(newVerts, [\n            fy(nq0),\n            semiVerts[0],\n            semiIns[1],\n            semiIns[2],\n            fxy(nr0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(ns0)\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            semiVerts[0],\n            semiOuts[0],\n            semiOuts[1],\n            fxy(nq0),\n            fxy(ns0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(nr0)\n        ]);\n    } else {\n        var state = 2;\n        t = $bm_div($bm_sub(A, quad), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, fy(s0));\n        v4 = fx(v6);\n        newVerts = [\n            semiVerts[0],\n            semiVerts[1],\n            semiVerts[2],\n            fxy(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(s0)\n        ];\n        newIns = tangentsRelative(newVerts, [\n            fy(q0),\n            semiIns[1],\n            semiIns[2],\n            fxy(r0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(s0)\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            semiOuts[0],\n            semiOuts[1],\n            fxy(q0),\n            fxy(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(r0)\n        ]);\n    }\n} else {\n    if (splitY < r3a[1]) {\n        var state = 3;\n        var UpsemiVerts = [\n                [\n                    rad2,\n                    -dist\n                ],\n                [\n                    0,\n                    -(dist - rad2)\n                ],\n                [\n                    -rad2,\n                    -dist\n                ]\n            ];\n        var UpsemiIns = tangentsAbsolute(UpsemiVerts, [\n                [\n                    0,\n                    0\n                ],\n                [\n                    $bm_mul(rad2, semiFac),\n                    0\n                ],\n                [\n                    0,\n                    $bm_mul(rad2, semiFac)\n                ]\n            ]);\n        var UpsemiOuts = tangentsAbsolute(UpsemiVerts, [\n                [\n                    0,\n                    $bm_mul(rad2, semiFac)\n                ],\n                [\n                    $bm_mul($bm_neg(rad2), semiFac),\n                    0\n                ],\n                [\n                    0,\n                    0\n                ]\n            ]);\n        t = $bm_div($bm_sub(quad, A), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        if (rad2 == rad1) {\n            var upA = 0.00001;\n        } else {\n            var upA = $bm_sub(quad, Math.acos(clamp($bm_div($bm_sub(rad2, rad1), dist), -1, 1)));\n        }\n        var upT = $bm_div(upA, quad);\n        var uq0 = midPoint(UpsemiVerts[0], UpsemiOuts[0], upT);\n        uq1 = midPoint(UpsemiOuts[0], UpsemiIns[1], upT);\n        uq2 = midPoint(UpsemiIns[1], UpsemiVerts[1], upT);\n        ur0 = midPoint(uq0, uq1, upT);\n        ur1 = midPoint(uq1, uq2, upT);\n        us0 = midPoint(ur0, ur1, upT);\n        newA = $bm_neg(Math.atan2($bm_sub($bm_neg(dist), splitY), xOnCircleGivenY($bm_sub($bm_neg(dist), splitY), rad2)));\n        newT = $bm_div(newA, upA);\n        nq0 = midPoint(UpsemiVerts[0], uq0, newT);\n        nq1 = midPoint(uq0, ur0, newT);\n        nq2 = midPoint(ur0, us0, newT);\n        nr0 = midPoint(nq0, nq1, newT);\n        nr1 = midPoint(nq1, nq2, newT);\n        ns0 = midPoint(nr0, nr1, newT);\n        newVerts = [\n            s0,\n            semiVerts[1],\n            fx(s0),\n            fx(r3a),\n            fx(ns0),\n            [\n                0,\n                splitY\n            ],\n            ns0,\n            us0\n        ];\n        newIns = tangentsRelative(newVerts, [\n            s0,\n            q2,\n            fx(r1),\n            fx(r3a),\n            fx(nr1),\n            [\n                0,\n                splitY\n            ],\n            ns0,\n            us0\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            r1,\n            fx(q2),\n            fx(r0),\n            fx(nq2),\n            fx(ns0),\n            [\n                0,\n                splitY\n            ],\n            nr1,\n            r3a\n        ]);\n    } else {\n        var state = 4;\n        t = $bm_div($bm_sub(quad, A), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, s0);\n        v4 = fx(v6);\n        newVerts = [\n            s0,\n            s0,\n            semiVerts[1],\n            fx(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            v6\n        ];\n        newIns = tangentsRelative(newVerts, [\n            s0,\n            s0,\n            q2,\n            fx(r1),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            v6\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            s0,\n            r1,\n            fx(q2),\n            fx(r0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            r0\n        ]);\n    }\n}\nif (isProximal != true) {\n    var tempVerts = newVerts;\n    var tempIns = newIns;\n    var tempOuts = newOuts;\n    newVerts = flipArrayY(tempVerts, -dist * 0.5).reverse();\n    newIns = flipArrayY(tempOuts, 0).reverse();\n    newOuts = flipArrayY(tempIns, 0).reverse();\n}\nif (pers != 0) {\n    var pVert = isProximal ? 5 : 2;\n    newVerts[pVert] = $bm_sum(newVerts[pVert], isProximal ? [\n        0,\n        newVerts[pVert + 1][0] * pers\n    ] : [\n        0,\n        -newVerts[pVert + 1][0] * pers\n    ]);\n    newIns[pVert] = [\n        $bm_mul($bm_neg(newVerts[pVert + 1][0]), semiFac),\n        0\n    ];\n    newOuts[pVert] = [\n        $bm_mul(newVerts[pVert + 1][0], semiFac),\n        0\n    ];\n    var B = isProximal ? $bm_sub($bm_div(Math.PI, 2), A) : -(Math.PI / 2 + A);\n    var temp6 = [\n            0,\n            newVerts[pVert + 1][0] * semiFac * pers\n        ];\n    newIns[pVert + 1][0] = $bm_mul($bm_neg(temp6[1]), Math.sin(B));\n    newIns[pVert + 1][1] = $bm_mul(temp6[1], Math.cos(B));\n    var temp4 = [\n            0,\n            newVerts[pVert + 1][0] * semiFac * pers\n        ];\n    newOuts[pVert - 1][0] = $bm_mul($bm_neg(temp4[1]), Math.sin($bm_neg(B)));\n    newOuts[pVert - 1][1] = $bm_mul(temp4[1], Math.cos($bm_neg(B)));\n}\nif (squareEndValue && !isUpper && !isProximal) {\n    if (state === 1) {\n        newVerts[5] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newOuts[4] = [\n            0,\n            0\n        ];\n        newIns[6] = [\n            0,\n            0\n        ];\n    }\n    if (state === 2) {\n        newVerts[6] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newOuts[5] = [\n            0,\n            0\n        ];\n        newIns[7] = [\n            0,\n            0\n        ];\n    }\n    if (state === 3) {\n        newVerts[5] = [\n            $bm_neg(distrad),\n            $bm_neg(dist)\n        ];\n        newVerts[6] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newVerts[7] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newOuts[5] = [\n            0,\n            0\n        ];\n        newIns[7] = [\n            0,\n            0\n        ];\n    }\n    if (state === 4) {\n        newVerts[4] = [\n            $bm_neg(distrad),\n            $bm_neg(dist)\n        ];\n        newVerts[5] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newVerts[6] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newVerts[7] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newOuts[4] = [\n            0,\n            0\n        ];\n        newIns[6] = [\n            0,\n            0\n        ];\n    }\n}\n$bm_rt = createPath(newVerts, newIns, newOuts, true);"},"nm":"Taper Path","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,0,0,1],"ix":4,"x":"var $bm_rt;\n$bm_rt = thisComp.layer('arm-Ankle').effect('Limber')('Middle Color');"},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Distal Upper","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[],"o":[],"v":[],"c":false},"ix":2,"x":"var $bm_rt;\nvar newA, newT, nq0, nq1, nq2, nr0, nr1, ns0, t, q0, q1, q2, r0, r1, s0, v6, v4, newVerts, newIns, newOuts, uq1, uq2, ur0, ur1, us0;\nfunction midPoint(p1, p2, per) {\n    return [\n        p1[0] + (p2[0] - p1[0]) * per,\n        p1[1] + (p2[1] - p1[1]) * per\n    ];\n}\nfunction tangentsAbsolute(vertices, tans) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        tans[i] = $bm_sum(tans[i], vertices[i]);\n    }\n    return tans;\n}\nfunction tangentsRelative(vertices, tans) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        tans[i] = $bm_sub(tans[i], vertices[i]);\n    }\n    return tans;\n}\nfunction fx(point) {\n    return [\n        -point[0],\n        point[1]\n    ];\n}\nfunction fy(point) {\n    return [\n        point[0],\n        -point[1]\n    ];\n}\nfunction fxy(point) {\n    return [\n        -point[0],\n        -point[1]\n    ];\n}\nfunction flipArrayY(vertices, flipPoint) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        vertices[i] = [\n            vertices[i][0],\n            $bm_sub($bm_mul(flipPoint, 2), vertices[i][1])\n        ];\n    }\n    return vertices;\n}\nfunction pointAlongY(val, p1, p2) {\n    var linearValue = linear(val, p1[1], p2[1], p1[0], p2[0]);\n    return [\n        linearValue,\n        val\n    ];\n}\nfunction xOnCircleGivenY(x, r) {\n    return Math.sqrt($bm_sub($bm_mul(r, r), $bm_mul(x, x)));\n}\nvar semiFac = 0.55228474983079;\nvar quad = $bm_mul(0.5, Math.PI);\nvar groupName = thisProperty.propertyGroup(3)._name;\nvar isUpper = groupName.split(' ')[1] === 'Upper';\nvar isProximal = groupName.split(' ')[0] === 'Proximal';\nvar endctrl = thisComp.layer('arm-Ankle');\nvar lowerSplit = endctrl.effect('Limber')('Lower Split');\nvar lowerSplitValue = $bm_div(lowerSplit.value, 100);\nvar upperSplit = endctrl.effect('Limber')('Upper Split');\nvar upperSplitValue = $bm_div(upperSplit.value, 100);\nvar lowerRounding = endctrl.effect('Limber')('Lower Rounding');\nvar lowerRoundingValue = $bm_div(lowerRounding.value, 100);\nvar upperRounding = endctrl.effect('Limber')('Upper Rounding');\nvar upperRoundingValue = $bm_div(upperRounding.value, 100);\nvar squareEndValue = endctrl.effect('Limber')('Square End').value;\nvar sides = endctrl.content('Admin').content('sides').transform.position;\nif (isUpper) {\n    var c2 = endctrl.content('Admin').content('p2blend').transform.scale;\n    var c1 = endctrl.content('Admin').content('p1').transform.scale;\n    var dist = sides[1];\n} else {\n    var c1 = endctrl.content('Admin').content('p2blend').transform.scale;\n    var c2 = endctrl.content('Admin').content('p3ik').transform.scale;\n    var dist = sides[0];\n}\nvar distrad = $bm_mul(c2[0], 0.5);\nvar proxrad = $bm_mul(c1[0], 0.5);\nvar pers = $bm_neg(lowerRoundingValue);\nvar splitY = isProximal ? lowerSplitValue : $bm_sub(1, lowerSplitValue);\nif (isUpper) {\n    pers = $bm_neg(upperRoundingValue);\n    splitY = isProximal ? upperSplitValue : $bm_sub(1, upperSplitValue);\n}\nsplitY = $bm_sub($bm_mul($bm_neg(dist), splitY), 0.5);\nvar rad1 = isProximal ? proxrad : distrad;\nvar rad2 = isProximal ? distrad : proxrad;\nvar A = Math.acos(clamp($bm_div($bm_sub(rad2, rad1), dist), -1, 1));\nvar r3a = [\n        rad2 * Math.sin(A),\n        -(dist - rad2 * Math.cos(A))\n    ];\nvar r3b = [\n        rad1 * Math.sin(A),\n        rad1 * Math.cos(A)\n    ];\nvar semiVerts = [\n        [\n            rad1,\n            0\n        ],\n        [\n            0,\n            rad1\n        ],\n        [\n            -rad1,\n            0\n        ]\n    ];\nvar semiIns = tangentsAbsolute(semiVerts, [\n        [\n            0,\n            0\n        ],\n        [\n            $bm_mul(rad1, semiFac),\n            0\n        ],\n        [\n            0,\n            $bm_mul(rad1, semiFac)\n        ]\n    ]);\nvar semiOuts = tangentsAbsolute(semiVerts, [\n        [\n            0,\n            $bm_mul(rad1, semiFac)\n        ],\n        [\n            $bm_mul($bm_neg(rad1), semiFac),\n            0\n        ],\n        [\n            0,\n            0\n        ]\n    ]);\nif (rad2 < rad1) {\n    if (splitY > r3b[1]) {\n        var state = 1;\n        newA = $bm_neg(Math.atan2(splitY, xOnCircleGivenY(splitY, rad1)));\n        newT = $bm_div(newA, quad);\n        nq0 = midPoint(semiVerts[0], semiOuts[0], newT);\n        nq1 = midPoint(semiOuts[0], semiIns[1], newT);\n        nq2 = midPoint(semiIns[1], semiVerts[1], newT);\n        nr0 = midPoint(nq0, nq1, newT);\n        nr1 = midPoint(nq1, nq2, newT);\n        ns0 = midPoint(nr0, nr1, newT);\n        t = $bm_div($bm_sub(A, quad), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, fy(s0));\n        v4 = fx(v6);\n        newVerts = [\n            semiVerts[0],\n            semiVerts[0],\n            semiVerts[1],\n            semiVerts[2],\n            fxy(ns0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(ns0)\n        ];\n        newIns = tangentsRelative(newVerts, [\n            fy(nq0),\n            semiVerts[0],\n            semiIns[1],\n            semiIns[2],\n            fxy(nr0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(ns0)\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            semiVerts[0],\n            semiOuts[0],\n            semiOuts[1],\n            fxy(nq0),\n            fxy(ns0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(nr0)\n        ]);\n    } else {\n        var state = 2;\n        t = $bm_div($bm_sub(A, quad), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, fy(s0));\n        v4 = fx(v6);\n        newVerts = [\n            semiVerts[0],\n            semiVerts[1],\n            semiVerts[2],\n            fxy(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(s0)\n        ];\n        newIns = tangentsRelative(newVerts, [\n            fy(q0),\n            semiIns[1],\n            semiIns[2],\n            fxy(r0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(s0)\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            semiOuts[0],\n            semiOuts[1],\n            fxy(q0),\n            fxy(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(r0)\n        ]);\n    }\n} else {\n    if (splitY < r3a[1]) {\n        var state = 3;\n        var UpsemiVerts = [\n                [\n                    rad2,\n                    -dist\n                ],\n                [\n                    0,\n                    -(dist - rad2)\n                ],\n                [\n                    -rad2,\n                    -dist\n                ]\n            ];\n        var UpsemiIns = tangentsAbsolute(UpsemiVerts, [\n                [\n                    0,\n                    0\n                ],\n                [\n                    $bm_mul(rad2, semiFac),\n                    0\n                ],\n                [\n                    0,\n                    $bm_mul(rad2, semiFac)\n                ]\n            ]);\n        var UpsemiOuts = tangentsAbsolute(UpsemiVerts, [\n                [\n                    0,\n                    $bm_mul(rad2, semiFac)\n                ],\n                [\n                    $bm_mul($bm_neg(rad2), semiFac),\n                    0\n                ],\n                [\n                    0,\n                    0\n                ]\n            ]);\n        t = $bm_div($bm_sub(quad, A), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        if (rad2 == rad1) {\n            var upA = 0.00001;\n        } else {\n            var upA = $bm_sub(quad, Math.acos(clamp($bm_div($bm_sub(rad2, rad1), dist), -1, 1)));\n        }\n        var upT = $bm_div(upA, quad);\n        var uq0 = midPoint(UpsemiVerts[0], UpsemiOuts[0], upT);\n        uq1 = midPoint(UpsemiOuts[0], UpsemiIns[1], upT);\n        uq2 = midPoint(UpsemiIns[1], UpsemiVerts[1], upT);\n        ur0 = midPoint(uq0, uq1, upT);\n        ur1 = midPoint(uq1, uq2, upT);\n        us0 = midPoint(ur0, ur1, upT);\n        newA = $bm_neg(Math.atan2($bm_sub($bm_neg(dist), splitY), xOnCircleGivenY($bm_sub($bm_neg(dist), splitY), rad2)));\n        newT = $bm_div(newA, upA);\n        nq0 = midPoint(UpsemiVerts[0], uq0, newT);\n        nq1 = midPoint(uq0, ur0, newT);\n        nq2 = midPoint(ur0, us0, newT);\n        nr0 = midPoint(nq0, nq1, newT);\n        nr1 = midPoint(nq1, nq2, newT);\n        ns0 = midPoint(nr0, nr1, newT);\n        newVerts = [\n            s0,\n            semiVerts[1],\n            fx(s0),\n            fx(r3a),\n            fx(ns0),\n            [\n                0,\n                splitY\n            ],\n            ns0,\n            us0\n        ];\n        newIns = tangentsRelative(newVerts, [\n            s0,\n            q2,\n            fx(r1),\n            fx(r3a),\n            fx(nr1),\n            [\n                0,\n                splitY\n            ],\n            ns0,\n            us0\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            r1,\n            fx(q2),\n            fx(r0),\n            fx(nq2),\n            fx(ns0),\n            [\n                0,\n                splitY\n            ],\n            nr1,\n            r3a\n        ]);\n    } else {\n        var state = 4;\n        t = $bm_div($bm_sub(quad, A), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, s0);\n        v4 = fx(v6);\n        newVerts = [\n            s0,\n            s0,\n            semiVerts[1],\n            fx(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            v6\n        ];\n        newIns = tangentsRelative(newVerts, [\n            s0,\n            s0,\n            q2,\n            fx(r1),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            v6\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            s0,\n            r1,\n            fx(q2),\n            fx(r0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            r0\n        ]);\n    }\n}\nif (isProximal != true) {\n    var tempVerts = newVerts;\n    var tempIns = newIns;\n    var tempOuts = newOuts;\n    newVerts = flipArrayY(tempVerts, -dist * 0.5).reverse();\n    newIns = flipArrayY(tempOuts, 0).reverse();\n    newOuts = flipArrayY(tempIns, 0).reverse();\n}\nif (pers != 0) {\n    var pVert = isProximal ? 5 : 2;\n    newVerts[pVert] = $bm_sum(newVerts[pVert], isProximal ? [\n        0,\n        newVerts[pVert + 1][0] * pers\n    ] : [\n        0,\n        -newVerts[pVert + 1][0] * pers\n    ]);\n    newIns[pVert] = [\n        $bm_mul($bm_neg(newVerts[pVert + 1][0]), semiFac),\n        0\n    ];\n    newOuts[pVert] = [\n        $bm_mul(newVerts[pVert + 1][0], semiFac),\n        0\n    ];\n    var B = isProximal ? $bm_sub($bm_div(Math.PI, 2), A) : -(Math.PI / 2 + A);\n    var temp6 = [\n            0,\n            newVerts[pVert + 1][0] * semiFac * pers\n        ];\n    newIns[pVert + 1][0] = $bm_mul($bm_neg(temp6[1]), Math.sin(B));\n    newIns[pVert + 1][1] = $bm_mul(temp6[1], Math.cos(B));\n    var temp4 = [\n            0,\n            newVerts[pVert + 1][0] * semiFac * pers\n        ];\n    newOuts[pVert - 1][0] = $bm_mul($bm_neg(temp4[1]), Math.sin($bm_neg(B)));\n    newOuts[pVert - 1][1] = $bm_mul(temp4[1], Math.cos($bm_neg(B)));\n}\nif (squareEndValue && !isUpper && !isProximal) {\n    if (state === 1) {\n        newVerts[5] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newOuts[4] = [\n            0,\n            0\n        ];\n        newIns[6] = [\n            0,\n            0\n        ];\n    }\n    if (state === 2) {\n        newVerts[6] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newOuts[5] = [\n            0,\n            0\n        ];\n        newIns[7] = [\n            0,\n            0\n        ];\n    }\n    if (state === 3) {\n        newVerts[5] = [\n            $bm_neg(distrad),\n            $bm_neg(dist)\n        ];\n        newVerts[6] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newVerts[7] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newOuts[5] = [\n            0,\n            0\n        ];\n        newIns[7] = [\n            0,\n            0\n        ];\n    }\n    if (state === 4) {\n        newVerts[4] = [\n            $bm_neg(distrad),\n            $bm_neg(dist)\n        ];\n        newVerts[5] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newVerts[6] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newVerts[7] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newOuts[4] = [\n            0,\n            0\n        ];\n        newIns[6] = [\n            0,\n            0\n        ];\n    }\n}\n$bm_rt = createPath(newVerts, newIns, newOuts, true);"},"nm":"Taper Path","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,0,0,1],"ix":4,"x":"var $bm_rt;\n$bm_rt = thisComp.layer('arm-Ankle').effect('Limber')('Upper Color');"},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Proximal Upper","np":2,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2,"x":"var $bm_rt;\n$bm_rt = thisComp.layer('arm-Ankle').content('Admin').content('p1').transform.position;"},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6,"x":"var $bm_rt;\n$bm_rt = thisComp.layer('arm-Ankle').content('Admin').content('angles').transform.anchorPoint[0];"},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Upper Group","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[],"o":[],"v":[],"c":false},"ix":2,"x":"var $bm_rt;\nvar newA, newT, nq0, nq1, nq2, nr0, nr1, ns0, t, q0, q1, q2, r0, r1, s0, v6, v4, newVerts, newIns, newOuts, uq1, uq2, ur0, ur1, us0;\nfunction midPoint(p1, p2, per) {\n    return [\n        p1[0] + (p2[0] - p1[0]) * per,\n        p1[1] + (p2[1] - p1[1]) * per\n    ];\n}\nfunction tangentsAbsolute(vertices, tans) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        tans[i] = $bm_sum(tans[i], vertices[i]);\n    }\n    return tans;\n}\nfunction tangentsRelative(vertices, tans) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        tans[i] = $bm_sub(tans[i], vertices[i]);\n    }\n    return tans;\n}\nfunction fx(point) {\n    return [\n        -point[0],\n        point[1]\n    ];\n}\nfunction fy(point) {\n    return [\n        point[0],\n        -point[1]\n    ];\n}\nfunction fxy(point) {\n    return [\n        -point[0],\n        -point[1]\n    ];\n}\nfunction flipArrayY(vertices, flipPoint) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        vertices[i] = [\n            vertices[i][0],\n            $bm_sub($bm_mul(flipPoint, 2), vertices[i][1])\n        ];\n    }\n    return vertices;\n}\nfunction pointAlongY(val, p1, p2) {\n    var linearValue = linear(val, p1[1], p2[1], p1[0], p2[0]);\n    return [\n        linearValue,\n        val\n    ];\n}\nfunction xOnCircleGivenY(x, r) {\n    return Math.sqrt($bm_sub($bm_mul(r, r), $bm_mul(x, x)));\n}\nvar semiFac = 0.55228474983079;\nvar quad = $bm_mul(0.5, Math.PI);\nvar groupName = thisProperty.propertyGroup(3)._name;\nvar isUpper = groupName.split(' ')[1] === 'Upper';\nvar isProximal = groupName.split(' ')[0] === 'Proximal';\nvar endctrl = thisComp.layer('arm-Ankle');\nvar lowerSplit = endctrl.effect('Limber')('Lower Split');\nvar lowerSplitValue = $bm_div(lowerSplit.value, 100);\nvar upperSplit = endctrl.effect('Limber')('Upper Split');\nvar upperSplitValue = $bm_div(upperSplit.value, 100);\nvar lowerRounding = endctrl.effect('Limber')('Lower Rounding');\nvar lowerRoundingValue = $bm_div(lowerRounding.value, 100);\nvar upperRounding = endctrl.effect('Limber')('Upper Rounding');\nvar upperRoundingValue = $bm_div(upperRounding.value, 100);\nvar squareEndValue = endctrl.effect('Limber')('Square End').value;\nvar sides = endctrl.content('Admin').content('sides').transform.position;\nif (isUpper) {\n    var c2 = endctrl.content('Admin').content('p2blend').transform.scale;\n    var c1 = endctrl.content('Admin').content('p1').transform.scale;\n    var dist = sides[1];\n} else {\n    var c1 = endctrl.content('Admin').content('p2blend').transform.scale;\n    var c2 = endctrl.content('Admin').content('p3ik').transform.scale;\n    var dist = sides[0];\n}\nvar distrad = $bm_mul(c2[0], 0.5);\nvar proxrad = $bm_mul(c1[0], 0.5);\nvar pers = $bm_neg(lowerRoundingValue);\nvar splitY = isProximal ? lowerSplitValue : $bm_sub(1, lowerSplitValue);\nif (isUpper) {\n    pers = $bm_neg(upperRoundingValue);\n    splitY = isProximal ? upperSplitValue : $bm_sub(1, upperSplitValue);\n}\nsplitY = $bm_sub($bm_mul($bm_neg(dist), splitY), 0.5);\nvar rad1 = isProximal ? proxrad : distrad;\nvar rad2 = isProximal ? distrad : proxrad;\nvar A = Math.acos(clamp($bm_div($bm_sub(rad2, rad1), dist), -1, 1));\nvar r3a = [\n        rad2 * Math.sin(A),\n        -(dist - rad2 * Math.cos(A))\n    ];\nvar r3b = [\n        rad1 * Math.sin(A),\n        rad1 * Math.cos(A)\n    ];\nvar semiVerts = [\n        [\n            rad1,\n            0\n        ],\n        [\n            0,\n            rad1\n        ],\n        [\n            -rad1,\n            0\n        ]\n    ];\nvar semiIns = tangentsAbsolute(semiVerts, [\n        [\n            0,\n            0\n        ],\n        [\n            $bm_mul(rad1, semiFac),\n            0\n        ],\n        [\n            0,\n            $bm_mul(rad1, semiFac)\n        ]\n    ]);\nvar semiOuts = tangentsAbsolute(semiVerts, [\n        [\n            0,\n            $bm_mul(rad1, semiFac)\n        ],\n        [\n            $bm_mul($bm_neg(rad1), semiFac),\n            0\n        ],\n        [\n            0,\n            0\n        ]\n    ]);\nif (rad2 < rad1) {\n    if (splitY > r3b[1]) {\n        var state = 1;\n        newA = $bm_neg(Math.atan2(splitY, xOnCircleGivenY(splitY, rad1)));\n        newT = $bm_div(newA, quad);\n        nq0 = midPoint(semiVerts[0], semiOuts[0], newT);\n        nq1 = midPoint(semiOuts[0], semiIns[1], newT);\n        nq2 = midPoint(semiIns[1], semiVerts[1], newT);\n        nr0 = midPoint(nq0, nq1, newT);\n        nr1 = midPoint(nq1, nq2, newT);\n        ns0 = midPoint(nr0, nr1, newT);\n        t = $bm_div($bm_sub(A, quad), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, fy(s0));\n        v4 = fx(v6);\n        newVerts = [\n            semiVerts[0],\n            semiVerts[0],\n            semiVerts[1],\n            semiVerts[2],\n            fxy(ns0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(ns0)\n        ];\n        newIns = tangentsRelative(newVerts, [\n            fy(nq0),\n            semiVerts[0],\n            semiIns[1],\n            semiIns[2],\n            fxy(nr0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(ns0)\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            semiVerts[0],\n            semiOuts[0],\n            semiOuts[1],\n            fxy(nq0),\n            fxy(ns0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(nr0)\n        ]);\n    } else {\n        var state = 2;\n        t = $bm_div($bm_sub(A, quad), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, fy(s0));\n        v4 = fx(v6);\n        newVerts = [\n            semiVerts[0],\n            semiVerts[1],\n            semiVerts[2],\n            fxy(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(s0)\n        ];\n        newIns = tangentsRelative(newVerts, [\n            fy(q0),\n            semiIns[1],\n            semiIns[2],\n            fxy(r0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(s0)\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            semiOuts[0],\n            semiOuts[1],\n            fxy(q0),\n            fxy(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(r0)\n        ]);\n    }\n} else {\n    if (splitY < r3a[1]) {\n        var state = 3;\n        var UpsemiVerts = [\n                [\n                    rad2,\n                    -dist\n                ],\n                [\n                    0,\n                    -(dist - rad2)\n                ],\n                [\n                    -rad2,\n                    -dist\n                ]\n            ];\n        var UpsemiIns = tangentsAbsolute(UpsemiVerts, [\n                [\n                    0,\n                    0\n                ],\n                [\n                    $bm_mul(rad2, semiFac),\n                    0\n                ],\n                [\n                    0,\n                    $bm_mul(rad2, semiFac)\n                ]\n            ]);\n        var UpsemiOuts = tangentsAbsolute(UpsemiVerts, [\n                [\n                    0,\n                    $bm_mul(rad2, semiFac)\n                ],\n                [\n                    $bm_mul($bm_neg(rad2), semiFac),\n                    0\n                ],\n                [\n                    0,\n                    0\n                ]\n            ]);\n        t = $bm_div($bm_sub(quad, A), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        if (rad2 == rad1) {\n            var upA = 0.00001;\n        } else {\n            var upA = $bm_sub(quad, Math.acos(clamp($bm_div($bm_sub(rad2, rad1), dist), -1, 1)));\n        }\n        var upT = $bm_div(upA, quad);\n        var uq0 = midPoint(UpsemiVerts[0], UpsemiOuts[0], upT);\n        uq1 = midPoint(UpsemiOuts[0], UpsemiIns[1], upT);\n        uq2 = midPoint(UpsemiIns[1], UpsemiVerts[1], upT);\n        ur0 = midPoint(uq0, uq1, upT);\n        ur1 = midPoint(uq1, uq2, upT);\n        us0 = midPoint(ur0, ur1, upT);\n        newA = $bm_neg(Math.atan2($bm_sub($bm_neg(dist), splitY), xOnCircleGivenY($bm_sub($bm_neg(dist), splitY), rad2)));\n        newT = $bm_div(newA, upA);\n        nq0 = midPoint(UpsemiVerts[0], uq0, newT);\n        nq1 = midPoint(uq0, ur0, newT);\n        nq2 = midPoint(ur0, us0, newT);\n        nr0 = midPoint(nq0, nq1, newT);\n        nr1 = midPoint(nq1, nq2, newT);\n        ns0 = midPoint(nr0, nr1, newT);\n        newVerts = [\n            s0,\n            semiVerts[1],\n            fx(s0),\n            fx(r3a),\n            fx(ns0),\n            [\n                0,\n                splitY\n            ],\n            ns0,\n            us0\n        ];\n        newIns = tangentsRelative(newVerts, [\n            s0,\n            q2,\n            fx(r1),\n            fx(r3a),\n            fx(nr1),\n            [\n                0,\n                splitY\n            ],\n            ns0,\n            us0\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            r1,\n            fx(q2),\n            fx(r0),\n            fx(nq2),\n            fx(ns0),\n            [\n                0,\n                splitY\n            ],\n            nr1,\n            r3a\n        ]);\n    } else {\n        var state = 4;\n        t = $bm_div($bm_sub(quad, A), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, s0);\n        v4 = fx(v6);\n        newVerts = [\n            s0,\n            s0,\n            semiVerts[1],\n            fx(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            v6\n        ];\n        newIns = tangentsRelative(newVerts, [\n            s0,\n            s0,\n            q2,\n            fx(r1),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            v6\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            s0,\n            r1,\n            fx(q2),\n            fx(r0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            r0\n        ]);\n    }\n}\nif (isProximal != true) {\n    var tempVerts = newVerts;\n    var tempIns = newIns;\n    var tempOuts = newOuts;\n    newVerts = flipArrayY(tempVerts, -dist * 0.5).reverse();\n    newIns = flipArrayY(tempOuts, 0).reverse();\n    newOuts = flipArrayY(tempIns, 0).reverse();\n}\nif (pers != 0) {\n    var pVert = isProximal ? 5 : 2;\n    newVerts[pVert] = $bm_sum(newVerts[pVert], isProximal ? [\n        0,\n        newVerts[pVert + 1][0] * pers\n    ] : [\n        0,\n        -newVerts[pVert + 1][0] * pers\n    ]);\n    newIns[pVert] = [\n        $bm_mul($bm_neg(newVerts[pVert + 1][0]), semiFac),\n        0\n    ];\n    newOuts[pVert] = [\n        $bm_mul(newVerts[pVert + 1][0], semiFac),\n        0\n    ];\n    var B = isProximal ? $bm_sub($bm_div(Math.PI, 2), A) : -(Math.PI / 2 + A);\n    var temp6 = [\n            0,\n            newVerts[pVert + 1][0] * semiFac * pers\n        ];\n    newIns[pVert + 1][0] = $bm_mul($bm_neg(temp6[1]), Math.sin(B));\n    newIns[pVert + 1][1] = $bm_mul(temp6[1], Math.cos(B));\n    var temp4 = [\n            0,\n            newVerts[pVert + 1][0] * semiFac * pers\n        ];\n    newOuts[pVert - 1][0] = $bm_mul($bm_neg(temp4[1]), Math.sin($bm_neg(B)));\n    newOuts[pVert - 1][1] = $bm_mul(temp4[1], Math.cos($bm_neg(B)));\n}\nif (squareEndValue && !isUpper && !isProximal) {\n    if (state === 1) {\n        newVerts[5] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newOuts[4] = [\n            0,\n            0\n        ];\n        newIns[6] = [\n            0,\n            0\n        ];\n    }\n    if (state === 2) {\n        newVerts[6] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newOuts[5] = [\n            0,\n            0\n        ];\n        newIns[7] = [\n            0,\n            0\n        ];\n    }\n    if (state === 3) {\n        newVerts[5] = [\n            $bm_neg(distrad),\n            $bm_neg(dist)\n        ];\n        newVerts[6] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newVerts[7] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newOuts[5] = [\n            0,\n            0\n        ];\n        newIns[7] = [\n            0,\n            0\n        ];\n    }\n    if (state === 4) {\n        newVerts[4] = [\n            $bm_neg(distrad),\n            $bm_neg(dist)\n        ];\n        newVerts[5] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newVerts[6] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newVerts[7] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newOuts[4] = [\n            0,\n            0\n        ];\n        newIns[6] = [\n            0,\n            0\n        ];\n    }\n}\n$bm_rt = createPath(newVerts, newIns, newOuts, true);"},"nm":"Taper Path","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,0,0,1],"ix":4,"x":"var $bm_rt;\n$bm_rt = thisComp.layer('arm-Ankle').effect('Limber')('Middle Color');"},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Proximal Lower","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[],"o":[],"v":[],"c":false},"ix":2,"x":"var $bm_rt;\nvar newA, newT, nq0, nq1, nq2, nr0, nr1, ns0, t, q0, q1, q2, r0, r1, s0, v6, v4, newVerts, newIns, newOuts, uq1, uq2, ur0, ur1, us0;\nfunction midPoint(p1, p2, per) {\n    return [\n        p1[0] + (p2[0] - p1[0]) * per,\n        p1[1] + (p2[1] - p1[1]) * per\n    ];\n}\nfunction tangentsAbsolute(vertices, tans) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        tans[i] = $bm_sum(tans[i], vertices[i]);\n    }\n    return tans;\n}\nfunction tangentsRelative(vertices, tans) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        tans[i] = $bm_sub(tans[i], vertices[i]);\n    }\n    return tans;\n}\nfunction fx(point) {\n    return [\n        -point[0],\n        point[1]\n    ];\n}\nfunction fy(point) {\n    return [\n        point[0],\n        -point[1]\n    ];\n}\nfunction fxy(point) {\n    return [\n        -point[0],\n        -point[1]\n    ];\n}\nfunction flipArrayY(vertices, flipPoint) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        vertices[i] = [\n            vertices[i][0],\n            $bm_sub($bm_mul(flipPoint, 2), vertices[i][1])\n        ];\n    }\n    return vertices;\n}\nfunction pointAlongY(val, p1, p2) {\n    var linearValue = linear(val, p1[1], p2[1], p1[0], p2[0]);\n    return [\n        linearValue,\n        val\n    ];\n}\nfunction xOnCircleGivenY(x, r) {\n    return Math.sqrt($bm_sub($bm_mul(r, r), $bm_mul(x, x)));\n}\nvar semiFac = 0.55228474983079;\nvar quad = $bm_mul(0.5, Math.PI);\nvar groupName = thisProperty.propertyGroup(3)._name;\nvar isUpper = groupName.split(' ')[1] === 'Upper';\nvar isProximal = groupName.split(' ')[0] === 'Proximal';\nvar endctrl = thisComp.layer('arm-Ankle');\nvar lowerSplit = endctrl.effect('Limber')('Lower Split');\nvar lowerSplitValue = $bm_div(lowerSplit.value, 100);\nvar upperSplit = endctrl.effect('Limber')('Upper Split');\nvar upperSplitValue = $bm_div(upperSplit.value, 100);\nvar lowerRounding = endctrl.effect('Limber')('Lower Rounding');\nvar lowerRoundingValue = $bm_div(lowerRounding.value, 100);\nvar upperRounding = endctrl.effect('Limber')('Upper Rounding');\nvar upperRoundingValue = $bm_div(upperRounding.value, 100);\nvar squareEndValue = endctrl.effect('Limber')('Square End').value;\nvar sides = endctrl.content('Admin').content('sides').transform.position;\nif (isUpper) {\n    var c2 = endctrl.content('Admin').content('p2blend').transform.scale;\n    var c1 = endctrl.content('Admin').content('p1').transform.scale;\n    var dist = sides[1];\n} else {\n    var c1 = endctrl.content('Admin').content('p2blend').transform.scale;\n    var c2 = endctrl.content('Admin').content('p3ik').transform.scale;\n    var dist = sides[0];\n}\nvar distrad = $bm_mul(c2[0], 0.5);\nvar proxrad = $bm_mul(c1[0], 0.5);\nvar pers = $bm_neg(lowerRoundingValue);\nvar splitY = isProximal ? lowerSplitValue : $bm_sub(1, lowerSplitValue);\nif (isUpper) {\n    pers = $bm_neg(upperRoundingValue);\n    splitY = isProximal ? upperSplitValue : $bm_sub(1, upperSplitValue);\n}\nsplitY = $bm_sub($bm_mul($bm_neg(dist), splitY), 0.5);\nvar rad1 = isProximal ? proxrad : distrad;\nvar rad2 = isProximal ? distrad : proxrad;\nvar A = Math.acos(clamp($bm_div($bm_sub(rad2, rad1), dist), -1, 1));\nvar r3a = [\n        rad2 * Math.sin(A),\n        -(dist - rad2 * Math.cos(A))\n    ];\nvar r3b = [\n        rad1 * Math.sin(A),\n        rad1 * Math.cos(A)\n    ];\nvar semiVerts = [\n        [\n            rad1,\n            0\n        ],\n        [\n            0,\n            rad1\n        ],\n        [\n            -rad1,\n            0\n        ]\n    ];\nvar semiIns = tangentsAbsolute(semiVerts, [\n        [\n            0,\n            0\n        ],\n        [\n            $bm_mul(rad1, semiFac),\n            0\n        ],\n        [\n            0,\n            $bm_mul(rad1, semiFac)\n        ]\n    ]);\nvar semiOuts = tangentsAbsolute(semiVerts, [\n        [\n            0,\n            $bm_mul(rad1, semiFac)\n        ],\n        [\n            $bm_mul($bm_neg(rad1), semiFac),\n            0\n        ],\n        [\n            0,\n            0\n        ]\n    ]);\nif (rad2 < rad1) {\n    if (splitY > r3b[1]) {\n        var state = 1;\n        newA = $bm_neg(Math.atan2(splitY, xOnCircleGivenY(splitY, rad1)));\n        newT = $bm_div(newA, quad);\n        nq0 = midPoint(semiVerts[0], semiOuts[0], newT);\n        nq1 = midPoint(semiOuts[0], semiIns[1], newT);\n        nq2 = midPoint(semiIns[1], semiVerts[1], newT);\n        nr0 = midPoint(nq0, nq1, newT);\n        nr1 = midPoint(nq1, nq2, newT);\n        ns0 = midPoint(nr0, nr1, newT);\n        t = $bm_div($bm_sub(A, quad), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, fy(s0));\n        v4 = fx(v6);\n        newVerts = [\n            semiVerts[0],\n            semiVerts[0],\n            semiVerts[1],\n            semiVerts[2],\n            fxy(ns0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(ns0)\n        ];\n        newIns = tangentsRelative(newVerts, [\n            fy(nq0),\n            semiVerts[0],\n            semiIns[1],\n            semiIns[2],\n            fxy(nr0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(ns0)\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            semiVerts[0],\n            semiOuts[0],\n            semiOuts[1],\n            fxy(nq0),\n            fxy(ns0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(nr0)\n        ]);\n    } else {\n        var state = 2;\n        t = $bm_div($bm_sub(A, quad), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, fy(s0));\n        v4 = fx(v6);\n        newVerts = [\n            semiVerts[0],\n            semiVerts[1],\n            semiVerts[2],\n            fxy(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(s0)\n        ];\n        newIns = tangentsRelative(newVerts, [\n            fy(q0),\n            semiIns[1],\n            semiIns[2],\n            fxy(r0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(s0)\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            semiOuts[0],\n            semiOuts[1],\n            fxy(q0),\n            fxy(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(r0)\n        ]);\n    }\n} else {\n    if (splitY < r3a[1]) {\n        var state = 3;\n        var UpsemiVerts = [\n                [\n                    rad2,\n                    -dist\n                ],\n                [\n                    0,\n                    -(dist - rad2)\n                ],\n                [\n                    -rad2,\n                    -dist\n                ]\n            ];\n        var UpsemiIns = tangentsAbsolute(UpsemiVerts, [\n                [\n                    0,\n                    0\n                ],\n                [\n                    $bm_mul(rad2, semiFac),\n                    0\n                ],\n                [\n                    0,\n                    $bm_mul(rad2, semiFac)\n                ]\n            ]);\n        var UpsemiOuts = tangentsAbsolute(UpsemiVerts, [\n                [\n                    0,\n                    $bm_mul(rad2, semiFac)\n                ],\n                [\n                    $bm_mul($bm_neg(rad2), semiFac),\n                    0\n                ],\n                [\n                    0,\n                    0\n                ]\n            ]);\n        t = $bm_div($bm_sub(quad, A), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        if (rad2 == rad1) {\n            var upA = 0.00001;\n        } else {\n            var upA = $bm_sub(quad, Math.acos(clamp($bm_div($bm_sub(rad2, rad1), dist), -1, 1)));\n        }\n        var upT = $bm_div(upA, quad);\n        var uq0 = midPoint(UpsemiVerts[0], UpsemiOuts[0], upT);\n        uq1 = midPoint(UpsemiOuts[0], UpsemiIns[1], upT);\n        uq2 = midPoint(UpsemiIns[1], UpsemiVerts[1], upT);\n        ur0 = midPoint(uq0, uq1, upT);\n        ur1 = midPoint(uq1, uq2, upT);\n        us0 = midPoint(ur0, ur1, upT);\n        newA = $bm_neg(Math.atan2($bm_sub($bm_neg(dist), splitY), xOnCircleGivenY($bm_sub($bm_neg(dist), splitY), rad2)));\n        newT = $bm_div(newA, upA);\n        nq0 = midPoint(UpsemiVerts[0], uq0, newT);\n        nq1 = midPoint(uq0, ur0, newT);\n        nq2 = midPoint(ur0, us0, newT);\n        nr0 = midPoint(nq0, nq1, newT);\n        nr1 = midPoint(nq1, nq2, newT);\n        ns0 = midPoint(nr0, nr1, newT);\n        newVerts = [\n            s0,\n            semiVerts[1],\n            fx(s0),\n            fx(r3a),\n            fx(ns0),\n            [\n                0,\n                splitY\n            ],\n            ns0,\n            us0\n        ];\n        newIns = tangentsRelative(newVerts, [\n            s0,\n            q2,\n            fx(r1),\n            fx(r3a),\n            fx(nr1),\n            [\n                0,\n                splitY\n            ],\n            ns0,\n            us0\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            r1,\n            fx(q2),\n            fx(r0),\n            fx(nq2),\n            fx(ns0),\n            [\n                0,\n                splitY\n            ],\n            nr1,\n            r3a\n        ]);\n    } else {\n        var state = 4;\n        t = $bm_div($bm_sub(quad, A), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, s0);\n        v4 = fx(v6);\n        newVerts = [\n            s0,\n            s0,\n            semiVerts[1],\n            fx(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            v6\n        ];\n        newIns = tangentsRelative(newVerts, [\n            s0,\n            s0,\n            q2,\n            fx(r1),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            v6\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            s0,\n            r1,\n            fx(q2),\n            fx(r0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            r0\n        ]);\n    }\n}\nif (isProximal != true) {\n    var tempVerts = newVerts;\n    var tempIns = newIns;\n    var tempOuts = newOuts;\n    newVerts = flipArrayY(tempVerts, -dist * 0.5).reverse();\n    newIns = flipArrayY(tempOuts, 0).reverse();\n    newOuts = flipArrayY(tempIns, 0).reverse();\n}\nif (pers != 0) {\n    var pVert = isProximal ? 5 : 2;\n    newVerts[pVert] = $bm_sum(newVerts[pVert], isProximal ? [\n        0,\n        newVerts[pVert + 1][0] * pers\n    ] : [\n        0,\n        -newVerts[pVert + 1][0] * pers\n    ]);\n    newIns[pVert] = [\n        $bm_mul($bm_neg(newVerts[pVert + 1][0]), semiFac),\n        0\n    ];\n    newOuts[pVert] = [\n        $bm_mul(newVerts[pVert + 1][0], semiFac),\n        0\n    ];\n    var B = isProximal ? $bm_sub($bm_div(Math.PI, 2), A) : -(Math.PI / 2 + A);\n    var temp6 = [\n            0,\n            newVerts[pVert + 1][0] * semiFac * pers\n        ];\n    newIns[pVert + 1][0] = $bm_mul($bm_neg(temp6[1]), Math.sin(B));\n    newIns[pVert + 1][1] = $bm_mul(temp6[1], Math.cos(B));\n    var temp4 = [\n            0,\n            newVerts[pVert + 1][0] * semiFac * pers\n        ];\n    newOuts[pVert - 1][0] = $bm_mul($bm_neg(temp4[1]), Math.sin($bm_neg(B)));\n    newOuts[pVert - 1][1] = $bm_mul(temp4[1], Math.cos($bm_neg(B)));\n}\nif (squareEndValue && !isUpper && !isProximal) {\n    if (state === 1) {\n        newVerts[5] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newOuts[4] = [\n            0,\n            0\n        ];\n        newIns[6] = [\n            0,\n            0\n        ];\n    }\n    if (state === 2) {\n        newVerts[6] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newOuts[5] = [\n            0,\n            0\n        ];\n        newIns[7] = [\n            0,\n            0\n        ];\n    }\n    if (state === 3) {\n        newVerts[5] = [\n            $bm_neg(distrad),\n            $bm_neg(dist)\n        ];\n        newVerts[6] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newVerts[7] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newOuts[5] = [\n            0,\n            0\n        ];\n        newIns[7] = [\n            0,\n            0\n        ];\n    }\n    if (state === 4) {\n        newVerts[4] = [\n            $bm_neg(distrad),\n            $bm_neg(dist)\n        ];\n        newVerts[5] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newVerts[6] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newVerts[7] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newOuts[4] = [\n            0,\n            0\n        ];\n        newIns[6] = [\n            0,\n            0\n        ];\n    }\n}\n$bm_rt = createPath(newVerts, newIns, newOuts, true);"},"nm":"Taper Path","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,0,0,1],"ix":4,"x":"var $bm_rt;\n$bm_rt = thisComp.layer('arm-Ankle').effect('Limber')('Lower Color');"},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Distal Lower","np":2,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2,"x":"var $bm_rt;\n$bm_rt = thisComp.layer('arm-Ankle').content('Admin').content('p2blend').transform.position;"},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6,"x":"var $bm_rt;\n$bm_rt = thisComp.layer('arm-Ankle').content('Admin').content('angles').transform.anchorPoint[1];"},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Lower Group","np":2,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Limb","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3,"x":"var $bm_rt;\nvar limbLayers = {\n        ankle: thisComp.layer('arm-Ankle'),\n        hip: thisComp.layer('arm-Hip'),\n        leg: thisComp.layer('arm-Leg')\n    };\n$bm_rt = value;"},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Admin","np":0,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":true}],"ip":0,"op":900.000036657751,"st":0,"bm":0},{"ddd":0,"ind":7,"ty":4,"nm":"body-Ankle","hd":true,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10,"x":"var $bm_rt;\nvar startctrl = thisComp.layer('body-Hip');\nvar endctrl = thisLayer;\nvar curLayer = thisLayer;\nvar curRot = 0;\nwhile (curLayer.hasParent) {\n    curRot = $bm_sum(curRot, curLayer.parent('ADBE Transform Group')('ADBE Rotate Z'));\n    curLayer = curLayer.parent;\n}\nvar rotend = $bm_div(endctrl.effect('Limber')('Rotate End'), 100);\nif (rotend == 0) {\n    $bm_rt = $bm_neg(curRot);\n} else {\n    var p1 = startctrl.toWorld([\n            0,\n            0,\n            0\n        ]);\n    var p3ik = endctrl.toWorld([\n            0,\n            0,\n            0\n        ]);\n    var p3r = $bm_sub(p3ik, p1);\n    var c1 = $bm_div(endctrl.content('Admin').content('p1').transform.scale[0], 2);\n    var c2 = $bm_div(endctrl.content('Admin').content('p2blend').transform.scale[0], 2);\n    var c3 = $bm_div(endctrl.content('Admin').content('p3blend').transform.scale[0], 2);\n    var linkLeng = endctrl.effect('Limber')('Link Length to Size Scale');\n    var sizeScale = $bm_div(endctrl.effect('Limber')('Size Scale'), 100);\n    var cw = endctrl.effect('Limber')('Clockwise');\n    var cwLin = Math.abs($bm_div(cw, 100));\n    var antipop = $bm_div(endctrl.effect('Limber')('Anti-pop'), 100);\n    var s3ik = Math.max($bm_mul(endctrl.effect('Limber')('Upper Length'), linkLeng == true ? sizeScale : 1), Math.abs($bm_sub(c1, c2)));\n    var s1ik = Math.max($bm_mul(endctrl.effect('Limber')('Lower Length'), linkLeng == true ? sizeScale : 1), Math.abs($bm_sub(c2, c3)));\n    var totLeng = $bm_sum(s3ik, s1ik);\n    var s2 = length(p1, p3ik);\n    var prox = linear(Math.abs($bm_sub(s2, $bm_div(totLeng, 2))), 0, $bm_div(totLeng, 2), 0, 1);\n    var antipopLin = $bm_mul(totLeng, linear(linear($bm_mul($bm_mul(prox, prox), prox), 0.833, 1), $bm_sub(1, antipop), 1));\n    var s1ap = $bm_mul(antipopLin, $bm_div(s1ik, totLeng));\n    var s3ap = $bm_mul(antipopLin, $bm_div(s3ik, totLeng));\n    var s3blend = $bm_sum($bm_mul(s3ap, cwLin), $bm_mul($bm_mul($bm_div(s3ap, $bm_sum(s3ap, s1ap)), s2), $bm_sub(1, cwLin)));\n    var s1blend = $bm_sum($bm_mul(s1ap, cwLin), $bm_mul($bm_mul($bm_div(s1ap, $bm_sum(s3ap, s1ap)), s2), $bm_sub(1, cwLin)));\n    try {\n        var theta2 = $bm_mul(cw > 0 ? 1 : -1, Math.acos(clamp($bm_div($bm_sub($bm_sub($bm_sum($bm_mul(p3r[1], p3r[1]), $bm_mul(p3r[0], p3r[0])), $bm_mul(s3blend, s3blend)), $bm_mul(s1blend, s1blend)), $bm_mul($bm_mul(2, s3blend), s1blend)), -1, 1)));\n        var theta1 = Math.atan2($bm_sub($bm_mul($bm_neg(p3r[0]), $bm_sum(s3blend, $bm_mul(s1blend, Math.cos(theta2)))), $bm_mul(p3r[1], $bm_mul(s1blend, Math.sin(theta2)))), $bm_sub($bm_mul(p3r[1], $bm_sum(s3blend, $bm_mul(s1blend, Math.cos(theta2)))), $bm_mul(p3r[0], $bm_mul(s1blend, Math.sin(theta2)))));\n        var a1ik = $bm_sum(theta1, Math.PI);\n        var a2ik = $bm_sum($bm_sum(theta1, theta2), Math.PI);\n    } catch (err) {\n        value;\n    }\n    var curveLin = $bm_div(endctrl.effect('Limber')('Bone Curvature'), 100);\n    if (curveLin == 0) {\n        $bm_rt = $bm_sum($bm_mul(rotend, $bm_sub($bm_sub(radiansToDegrees(a2ik), 180), curRot)), $bm_mul($bm_sub(1, rotend), $bm_neg(curRot)));\n    } else {\n        var p2ik = $bm_sum(p1, [\n                Math.sin(a1ik) * s3blend,\n                -Math.cos(a1ik) * s3blend\n            ]);\n        var p3ik = $bm_sum(p2ik, [\n                Math.sin(a2ik) * s1blend,\n                -Math.cos(a2ik) * s1blend\n            ]);\n        var sizeScale = $bm_div(endctrl.effect('Limber')('Size Scale'), 100);\n        var linkScale = endctrl.effect('Limber')('Link Length to Size Scale');\n        var tangLeng = $bm_mul($bm_div($bm_mul(curveLin, $bm_sum(endctrl.effect('Limber')('Upper Length'), endctrl.effect('Limber')('Lower Length'))), 2), linkScale == true ? sizeScale : 1);\n        var avang = $bm_div($bm_sub($bm_sum(a1ik, a2ik), Math.PI), 2);\n        var tangPos = $bm_sum(p2ik, [\n                Math.cos(avang) * tangLeng,\n                Math.sin(avang) * tangLeng\n            ]);\n        var tangPosRel = $bm_sub(tangPos, p3ik);\n        var a1curve = $bm_sum(radiansToDegrees(Math.atan2(tangPosRel[1], tangPosRel[0])), 90);\n        $bm_rt = $bm_sum($bm_sub($bm_mul(rotend, a1curve), curRot), $bm_mul($bm_sub(1, rotend), $bm_neg(curRot)));\n    }\n}"},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":0,"s":[776,236,0],"to":[-8.667,22,0],"ti":[-28.667,-58.667,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":418,"s":[724,368,0],"to":[28.667,58.667,0],"ti":[-37.333,-36.667,0]},{"t":668.000027208198,"s":[948,588,0]}],"ix":2,"l":2},"a":{"a":0,"k":[0,0,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"ef":[{"ty":5,"nm":"Limber","np":36,"mn":"Pseudo/Limber_16","ix":1,"en":1,"ef":[{"ty":6,"nm":"Shape","mn":"Pseudo/Limber_16-0001","ix":1,"v":0},{"ty":0,"nm":"Upper Length","mn":"Pseudo/Limber_16-0002","ix":2,"v":{"a":0,"k":83,"ix":2}},{"ty":0,"nm":"Lower Length","mn":"Pseudo/Limber_16-0003","ix":3,"v":{"a":0,"k":235,"ix":3}},{"ty":0,"nm":"Start Size","mn":"Pseudo/Limber_16-0004","ix":4,"v":{"a":0,"k":118,"ix":4}},{"ty":0,"nm":"Middle Size","mn":"Pseudo/Limber_16-0005","ix":5,"v":{"a":0,"k":141,"ix":5}},{"ty":0,"nm":"End Size","mn":"Pseudo/Limber_16-0006","ix":6,"v":{"a":0,"k":129,"ix":6}},{"ty":0,"nm":"Bone Curvature","mn":"Pseudo/Limber_16-0007","ix":7,"v":{"a":0,"k":100,"ix":7}},{"ty":7,"nm":"Square End","mn":"Pseudo/Limber_16-0008","ix":8,"v":{"a":0,"k":0,"ix":8}},{"ty":6,"nm":"Limber","mn":"Pseudo/Limber_16-0009","ix":9,"v":0},{"ty":6,"nm":"Scale","mn":"Pseudo/Limber_16-0010","ix":10,"v":0},{"ty":0,"nm":"Size Scale","mn":"Pseudo/Limber_16-0011","ix":11,"v":{"a":0,"k":100,"ix":11}},{"ty":7,"nm":"Link Length to Size Scale","mn":"Pseudo/Limber_16-0012","ix":12,"v":{"a":0,"k":1,"ix":12}},{"ty":6,"nm":"Limber","mn":"Pseudo/Limber_16-0013","ix":13,"v":0},{"ty":6,"nm":"Colors","mn":"Pseudo/Limber_16-0014","ix":14,"v":0},{"ty":0,"nm":"Upper Split","mn":"Pseudo/Limber_16-0015","ix":15,"v":{"a":0,"k":100,"ix":15}},{"ty":0,"nm":"Upper Rounding","mn":"Pseudo/Limber_16-0016","ix":16,"v":{"a":0,"k":0,"ix":16}},{"ty":0,"nm":"Lower Split","mn":"Pseudo/Limber_16-0017","ix":17,"v":{"a":0,"k":70,"ix":17}},{"ty":0,"nm":"Lower Rounding","mn":"Pseudo/Limber_16-0018","ix":18,"v":{"a":0,"k":0,"ix":18}},{"ty":2,"nm":"Upper Color","mn":"Pseudo/Limber_16-0019","ix":19,"v":{"a":0,"k":[0.029279507697,0.030226456001,0.031173406169,1],"ix":19}},{"ty":2,"nm":"Middle Color","mn":"Pseudo/Limber_16-0020","ix":20,"v":{"a":0,"k":[0.050141476095,0.05292000249,0.055698528886,1],"ix":20}},{"ty":2,"nm":"Lower Color","mn":"Pseudo/Limber_16-0021","ix":21,"v":{"a":0,"k":[0.034145221114,0.033155322075,0.032197352499,1],"ix":21}},{"ty":6,"nm":"Limber","mn":"Pseudo/Limber_16-0022","ix":22,"v":0},{"ty":6,"nm":"Dynamics","mn":"Pseudo/Limber_16-0023","ix":23,"v":0},{"ty":0,"nm":"Clockwise","mn":"Pseudo/Limber_16-0024","ix":24,"v":{"a":0,"k":-100,"ix":24}},{"ty":0,"nm":"Rotate Start","mn":"Pseudo/Limber_16-0025","ix":25,"v":{"a":0,"k":0,"ix":25}},{"ty":0,"nm":"Rotate End","mn":"Pseudo/Limber_16-0026","ix":26,"v":{"a":0,"k":0,"ix":26}},{"ty":7,"nm":"Stretch","mn":"Pseudo/Limber_16-0027","ix":27,"v":{"a":0,"k":1,"ix":27}},{"ty":0,"nm":"Anti-pop","mn":"Pseudo/Limber_16-0028","ix":28,"v":{"a":0,"k":0,"ix":28}},{"ty":6,"nm":"Limber","mn":"Pseudo/Limber_16-0029","ix":29,"v":0},{"ty":6,"nm":"Forward Kinematics","mn":"Pseudo/Limber_16-0030","ix":30,"v":0},{"ty":0,"nm":"FK","mn":"Pseudo/Limber_16-0031","ix":31,"v":{"a":0,"k":0,"ix":31}},{"ty":0,"nm":"Upper FK Rotation","mn":"Pseudo/Limber_16-0032","ix":32,"v":{"a":0,"k":180,"ix":32}},{"ty":0,"nm":"Lower FK Rotation","mn":"Pseudo/Limber_16-0033","ix":33,"v":{"a":0,"k":0,"ix":33}},{"ty":6,"nm":"Limber","mn":"Pseudo/Limber_16-0034","ix":34,"v":0}]}],"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[3.082,3.37],[0,0],[0,0],[0,0],[0,0],[0,-4.927],[-10.467,0],[0,10.467]],"o":[[0,0],[0,0],[0,0],[0,0],[-3.082,3.371],[0,10.467],[10.467,0],[0,-4.927]],"v":[[13.989,-12.688],[13.991,-12.688],[0,-27.99],[-13.991,-12.688],[-13.989,-12.688],[-18.952,0.096],[0,19.048],[18.952,0.096]],"c":true},"ix":2,"x":"var $bm_rt;\n$bm_rt = value;"},"nm":"Path","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.056755896176,0.066416519763,0.067953431373,1],"ix":4,"x":"var $bm_rt;\nvar hsl;\nvar startctrl = thisComp.layer('body-Hip');\nvar endctrl = thisLayer;\nvar totLeng = $bm_mul($bm_sum(endctrl.effect('Limber')('Upper Length'), endctrl.effect('Limber')('Lower Length')), endctrl.effect('Limber')('Link Length to Size Scale') == true ? endctrl.effect('Limber')('Size Scale') / 100 : 1);\nvar stretchLimit = length(endctrl.toWorld(endctrl.anchorPoint), startctrl.toWorld(startctrl.anchorPoint));\n$bm_rt = hsl = $bm_sum([\n    0.333,\n    1,\n    0.4,\n    0\n], [\n    linear(stretchLimit, $bm_mul(totLeng, 0.97), totLeng, 0, 0.19),\n    0,\n    0\n]);\nif (stretchLimit > totLeng)\n    $bm_rt = [\n        1,\n        0,\n        0,\n        0\n    ];\nelse\n    $bm_rt = hslToRgb(hsl);"},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":180,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Controller","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ty":"gr","it":[{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2,"x":"var $bm_rt;\nvar s1blend = thisLayer.content('Admin').content('sides').transform.position[0];\nvar a2blend = degreesToRadians(thisLayer.content('Admin').content('angles').transform.anchorPoint[1]);\nvar p2blend = thisLayer.content('Admin').content('p2blend').transform.position;\n$bm_rt = $bm_sum(p2blend, [\n    Math.sin(a2blend) * s1blend,\n    -Math.cos(a2blend) * s1blend\n]);"},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"p3blend","np":0,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":true},{"ty":"gr","it":[{"ty":"tr","p":{"a":0,"k":[1,0],"ix":2,"x":"var $bm_rt;\nvar s3blend = thisLayer(2)('Admin').content('sides').transform.position[1];\nvar a1blend = degreesToRadians(thisLayer.content('Admin').content('angles').transform.anchorPoint[0]);\n$bm_rt = $bm_sum(thisLayer.content('Admin').content('p1').transform.position, [\n    Math.sin(a1blend) * s3blend,\n    -Math.cos(a1blend) * s3blend\n]);"},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3,"x":"var $bm_rt;\nvar c2;\nvar endctrl = thisComp.layer('body-Ankle');\nvar sizeScale = $bm_div(endctrl.effect('Limber')('Size Scale'), 100);\nc2 = clamp($bm_mul(endctrl.effect('Limber')('Middle Size'), sizeScale), 1, $bm_mul($bm_mul($bm_sum(endctrl.effect('Limber')('Upper Length'), endctrl.effect('Limber')('Lower Length')), 0.55), endctrl.effect('Limber')('Link Length to Size Scale') == true ? sizeScale : 1));\n$bm_rt = [\n    c2,\n    c2\n];"},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"p2blend","np":0,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":true},{"ty":"gr","it":[{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1,"x":"var $bm_rt;\nvar startctrl = thisComp.layer('body-Hip');\nvar endctrl = thisComp.layer('body-Ankle');\nvar fk = $bm_div(endctrl.effect('Limber')('FK'), 100);\nif (fk == 1) {\n    var curLayer = startctrl;\n    var curRot = 0;\n    while (curLayer.hasParent) {\n        curRot = $bm_sum(curRot, curLayer.parent('ADBE Transform Group')('ADBE Rotate Z'));\n        curLayer = curLayer.parent;\n    }\n    var a1fk = $bm_sum(curRot, endctrl.effect('Limber')('Upper FK Rotation'));\n    var a2fk = endctrl.effect('Limber')('Lower FK Rotation');\n    $bm_rt = [\n        a1fk,\n        a1fk + a2fk\n    ];\n} else if (fk == 0) {\n    var p1 = thisLayer.content('Admin').content('p1').transform.position;\n    var p3ik = thisLayer.content('Admin').content('p3ik').transform.position;\n    var p3r = $bm_sub(p3ik, p1);\n    var s2ik = length(p1, p3ik);\n    var sides = thisLayer.content('Admin').content('sides').transform.position;\n    var s3blend = sides[1];\n    var s1blend = sides[0];\n    var cw = endctrl.effect('Limber')('Clockwise');\n    try {\n        var theta2 = $bm_mul($bm_neg(cw > 0 ? -1 : 1), Math.acos(clamp($bm_div($bm_sub($bm_sub($bm_sum($bm_mul(p3r[1], p3r[1]), $bm_mul(p3r[0], p3r[0])), $bm_mul(s3blend, s3blend)), $bm_mul(s1blend, s1blend)), $bm_mul($bm_mul(2, s3blend), s1blend)), -1, 1)));\n        var theta1 = Math.atan2($bm_sub($bm_mul($bm_neg(p3r[0]), $bm_sum(s3blend, $bm_mul(s1blend, Math.cos(theta2)))), $bm_mul(p3r[1], $bm_mul(s1blend, Math.sin(theta2)))), $bm_sub($bm_mul(p3r[1], $bm_sum(s3blend, $bm_mul(s1blend, Math.cos(theta2)))), $bm_mul(p3r[0], $bm_mul(s1blend, Math.sin(theta2)))));\n        var a1ik = $bm_sum(180, radiansToDegrees(theta1));\n        var a2ik = $bm_sum(180, radiansToDegrees($bm_sum(theta1, theta2)));\n        $bm_rt = [\n            a1ik,\n            a2ik\n        ];\n    } catch (err) {\n        $bm_rt = value;\n    }\n} else {\n    var curLayer = startctrl;\n    var curRot = 0;\n    while (curLayer.hasParent) {\n        curRot = $bm_sum(curRot, curLayer.parent('ADBE Transform Group')('ADBE Rotate Z'));\n        curLayer = curLayer.parent;\n    }\n    var a2fk = endctrl.effect('Limber')('Lower FK Rotation');\n    var a1fk = $bm_sum(curRot, endctrl.effect('Limber')('Upper FK Rotation'));\n    var p1 = thisLayer.content('Admin').content('p1').transform.position;\n    var p3ik = thisLayer.content('Admin').content('p3ik').transform.position;\n    var sides = thisLayer.content('Admin').content('sides').transform.position;\n    var s3blend = sides[1];\n    var s1blend = sides[0];\n    var p3r = $bm_sub(p3ik, p1);\n    var cw = endctrl.effect('Limber')('Clockwise');\n    try {\n        var theta2 = $bm_mul($bm_neg(cw > 0 ? -1 : 1), Math.acos(clamp($bm_div($bm_sub($bm_sub($bm_sum($bm_mul(p3r[1], p3r[1]), $bm_mul(p3r[0], p3r[0])), $bm_mul(s3blend, s3blend)), $bm_mul(s1blend, s1blend)), $bm_mul($bm_mul(2, s3blend), s1blend)), -1, 1)));\n        var theta1 = Math.atan2($bm_sub($bm_mul($bm_neg(p3r[0]), $bm_sum(s3blend, $bm_mul(s1blend, Math.cos(theta2)))), $bm_mul(p3r[1], $bm_mul(s1blend, Math.sin(theta2)))), $bm_sub($bm_mul(p3r[1], $bm_sum(s3blend, $bm_mul(s1blend, Math.cos(theta2)))), $bm_mul(p3r[0], $bm_mul(s1blend, Math.sin(theta2)))));\n        var a1ik = $bm_sum(180, radiansToDegrees(theta1));\n        var a2ik = $bm_sum(180, radiansToDegrees($bm_sum(theta1, theta2)));\n        var a1blend = $bm_sum($bm_mul(a1ik, $bm_sub(1, fk)), $bm_mul(a1fk, fk));\n        var a2blend = $bm_sum($bm_mul(a2ik, $bm_sub(1, fk)), $bm_mul($bm_sum(a1fk, a2fk), fk));\n        $bm_rt = [\n            a1blend,\n            a2blend\n        ];\n    } catch (err) {\n        $bm_rt = value;\n    }\n}"},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"angles","np":0,"cix":2,"bm":0,"ix":3,"mn":"ADBE Vector Group","hd":true},{"ty":"gr","it":[{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2,"x":"var $bm_rt;\nvar endctrl = thisComp.layer('body-Ankle');\nvar startctrl = thisComp.layer('body-Hip');\nvar fk = $bm_div(endctrl.effect('Limber')('FK'), 100);\nvar p1 = thisLayer.content('Admin').content('p1').transform.position;\nvar p3 = thisLayer.content('Admin').content('p3ik').transform.position;\nvar c1 = $bm_div(thisLayer.content('Admin').content('p1').transform.scale[0], 2);\nvar c2 = $bm_div(thisLayer.content('Admin').content('p2blend').transform.scale[0], 2);\nvar c3 = $bm_div(thisLayer.content('Admin').content('p3ik').transform.scale[0], 2);\nvar linkLeng = endctrl.effect('Limber')('Link Length to Size Scale');\nvar sizeScale = $bm_div(endctrl.effect('Limber')('Size Scale'), 100);\nvar stretch = endctrl.effect('Limber')('Stretch');\nvar cw = $bm_div(endctrl.effect('Limber')('Clockwise'), 100);\nvar cwLin = Math.abs(cw);\nvar antipop = $bm_div(endctrl.effect('Limber')('Anti-pop'), 100);\nvar s3ik = Math.max($bm_mul(endctrl.effect('Limber')('Upper Length'), linkLeng == true ? sizeScale : 1), Math.abs($bm_sub(c1, c2)));\nvar s1ik = Math.max($bm_mul(endctrl.effect('Limber')('Lower Length'), linkLeng == true ? sizeScale : 1), Math.abs($bm_sub(c2, c3)));\nvar totLeng = $bm_sum(s3ik, s1ik);\nvar s2 = length(p1, p3);\nif (s2 > totLeng && stretch == false) {\n    $bm_rt = [\n        s1ik,\n        s3ik\n    ];\n} else if (s2 > totLeng && stretch == true) {\n    var increase = $bm_sum(1, $bm_div($bm_sub(s2, totLeng), totLeng));\n    $bm_rt = [\n        s1ik * increase * (1 - fk) + s1ik * fk,\n        s3ik * increase * (1 - fk) + s3ik * fk\n    ];\n} else {\n    var prox = linear(Math.abs($bm_sub(s2, $bm_div(totLeng, 2))), 0, $bm_div(totLeng, 2), 0, 1);\n    var antipopLin = $bm_mul(totLeng, linear(linear($bm_mul($bm_mul(prox, prox), prox), 0.833, 1), $bm_sub(1, $bm_mul(antipop, $bm_sub(1, fk))), 1));\n    var cwBlend = $bm_sum(cwLin, $bm_mul(fk, $bm_sub(1, cwLin)));\n    var s1ap = $bm_mul(antipopLin, $bm_div(s1ik, totLeng));\n    var s3ap = $bm_mul(antipopLin, $bm_div(s3ik, totLeng));\n    var s3blend = $bm_sum($bm_mul(s3ap, cwBlend), $bm_mul($bm_mul($bm_div(s3ap, $bm_sum(s3ap, s1ap)), s2), $bm_sub(1, cwBlend)));\n    var s1blend = $bm_sum($bm_mul(s1ap, cwBlend), $bm_mul($bm_mul($bm_div(s1ap, $bm_sum(s3ap, s1ap)), s2), $bm_sub(1, cwBlend)));\n    $bm_rt = [\n        s1blend,\n        s3blend\n    ];\n}"},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"sides","np":0,"cix":2,"bm":0,"ix":4,"mn":"ADBE Vector Group","hd":true},{"ty":"gr","it":[{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2,"x":"var $bm_rt;\nvar val = thisComp.layer('body-Ankle');\n$bm_rt = val.toWorld(val.anchorPoint);"},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3,"x":"var $bm_rt;\nvar endctrl = thisComp.layer('body-Ankle');\nvar c3 = $bm_div($bm_mul(endctrl.effect('Limber')('End Size'), endctrl.effect('Limber')('Size Scale')), 100);\n$bm_rt = [\n    c3,\n    c3\n];"},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"p3ik","np":0,"cix":2,"bm":0,"ix":5,"mn":"ADBE Vector Group","hd":true},{"ty":"gr","it":[{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2,"x":"var $bm_rt;\nvar val = thisComp.layer('body-Hip');\n$bm_rt = val.toWorld(val.anchorPoint);"},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3,"x":"var $bm_rt;\nvar endctrl = thisComp.layer('body-Ankle');\nvar c1 = $bm_div($bm_mul(endctrl.effect('Limber')('Start Size'), endctrl.effect('Limber')('Size Scale')), 100);\n$bm_rt = [\n    c1,\n    c1\n];"},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"p1","np":0,"cix":2,"bm":0,"ix":6,"mn":"ADBE Vector Group","hd":true},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3,"x":"var $bm_rt;\nvar limbLayers = {\n        ankle: thisComp.layer('body-Ankle'),\n        hip: thisComp.layer('body-Hip'),\n        leg: thisComp.layer('body-Leg')\n    };\n$bm_rt = value;"},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Admin","np":6,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":900.000036657751,"st":0,"bm":0},{"ddd":0,"ind":8,"ty":4,"nm":"body-Hip","hd":true,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10,"x":"var $bm_rt;\nvar endctrl = thisComp.layer('body-Ankle');\nvar startctrl = thisComp.layer('body-Hip');\nvar rotstart = $bm_div(endctrl.effect('Limber')('Rotate Start'), 100);\nvar curlayer = startctrl;\nvar curRot = 0;\nwhile (curlayer.hasParent) {\n    curRot = $bm_sum(curRot, curlayer.parent('ADBE Transform Group')('ADBE Rotate Z'));\n    curlayer = curlayer.parent;\n}\nif (rotstart == 0) {\n    $bm_rt = $bm_neg(curRot);\n} else {\n    var fk = $bm_div(endctrl.effect('Limber')('FK'), 100);\n    if (fk == 1) {\n        var startctrl = thisComp.layer('body-Hip');\n        var p1 = startctrl.toWorld([\n                0,\n                0,\n                0\n            ]);\n        var a1fk = degreesToRadians(endctrl.effect('Limber')('Upper FK Rotation'));\n        var curveLin = $bm_div(endctrl.effect('Limber')('Bone Curvature'), 100);\n        if (curveLin == 0) {\n            $bm_rt = $bm_sum($bm_sub($bm_mul(rotstart, $bm_sub(radiansToDegrees(a1fk), 180)), curRot), $bm_mul($bm_neg(rotstart), $bm_neg(curRot)));\n        } else {\n            var a2fk = degreesToRadians(endctrl.effect('Limber')('Lower FK Rotation'));\n            var c1 = $bm_div(endctrl.content('Admin').content('p1').transform.scale[0], 2);\n            var c2 = $bm_div(endctr.content('Admin').content('p2blend').transform.scale[0], 2);\n            var c3 = $bm_div(endctrl.content('Admin').content('p3blend').transform.scale[0], 2);\n            var s3fk = Math.max(endctrl.effect('Limber')('Upper Length'), Math.abs($bm_sub(c1, c2)));\n            var s1fk = Math.max(endctrl.effect('Limber')('Lower Length'), Math.abs($bm_sub(c2, c3)));\n            var p2fk = $bm_sum(p1, [\n                    Math.sin(a1fk) * s3fk,\n                    -Math.cos(a1fk) * s3fk\n                ]);\n            var avang = $bm_div($bm_sub($bm_sum($bm_sum(a1fk, a1fk), a2fk), Math.PI), 2);\n            var tangLeng = $bm_div($bm_mul(curveLin, $bm_sum(s3fk, s1fk)), 2);\n            var tangPos = $bm_sub(p2fk, [\n                    Math.cos(avang) * tangLeng,\n                    Math.sin(avang) * tangLeng\n                ]);\n            var tangPosRel = $bm_sub(tangPos, p1);\n            var a1fkcurve = $bm_sub(radiansToDegrees(Math.atan2(tangPosRel[1], tangPosRel[0])), 90);\n            $bm_rt = $bm_sum($bm_sub($bm_mul(rotstart, a1fkcurve), curRot), $bm_mul($bm_neg(rotstart), $bm_neg(curRot)));\n        }\n    } else if (fk == 0) {\n        var p1 = startctrl.toWorld([\n                0,\n                0,\n                0\n            ]);\n        var p3ik = endctrl.toWorld([\n                0,\n                0,\n                0\n            ]);\n        var p3r = $bm_sub(p3ik, p1);\n        var s2 = length(p1, p3ik);\n        var c1 = $bm_div(endctrl.content('Admin').content('p1').transform.scale[0], 2);\n        var c2 = $bm_div(endctrl.content('Admin').content('p2blend').transform.scale[0], 2);\n        var c3 = $bm_div(endctrl.content('Admin').content('p3blend').transform.scale[0], 2);\n        var linkLeng = endctrl.effect('Limber')('Link Length to Size Scale');\n        var sizeScale = $bm_div(endctrl.effect('Limber')('Size Scale'), 100);\n        var cw = endctrl.effect('Limber')('Clockwise');\n        var cwLin = Math.abs($bm_div(cw, 100));\n        var antipop = $bm_div(endctrl.effect('Limber')('Anti-pop'), 100);\n        var s3ik = Math.max($bm_mul(endctrl.effect('Limber')('Upper Length'), linkLeng == true ? sizeScale : 1), Math.abs($bm_sub(c1, c2)));\n        var s1ik = Math.max($bm_mul(endctrl.effect('Limber')('Lower Length'), linkLeng == true ? sizeScale : 1), Math.abs($bm_sub(c2, c3)));\n        var totLeng = $bm_sum(s3ik, s1ik);\n        var s2 = length(p1, p3ik);\n        var prox = linear(Math.abs($bm_sub(s2, $bm_div(totLeng, 2))), 0, $bm_div(totLeng, 2), 0, 1);\n        var antipopLin = $bm_mul(totLeng, linear(linear($bm_mul($bm_mul(prox, prox), prox), 0.833, 1), $bm_sub(1, antipop), 1));\n        var s1ap = $bm_mul(antipopLin, $bm_div(s1ik, totLeng));\n        var s3ap = $bm_mul(antipopLin, $bm_div(s3ik, totLeng));\n        var cwBlend = $bm_sum(cwLin, $bm_mul(fk, $bm_sub(1, cwLin)));\n        var s3blend = $bm_sum($bm_mul(s3ap, cwBlend), $bm_mul($bm_mul($bm_div(s3ap, $bm_sum(s3ap, s1ap)), s2), $bm_sub(1, cwBlend)));\n        var s1blend = $bm_sum($bm_mul(s1ap, cwBlend), $bm_mul($bm_mul($bm_div(s1ap, $bm_sum(s3ap, s1ap)), s2), $bm_sub(1, cwBlend)));\n        try {\n            var theta2 = $bm_mul(cw > 0 ? 1 : -1, Math.acos(clamp($bm_div($bm_sub($bm_sub($bm_sum($bm_mul(p3r[1], p3r[1]), $bm_mul(p3r[0], p3r[0])), $bm_mul(s3blend, s3blend)), $bm_mul(s1blend, s1blend)), $bm_mul($bm_mul(2, s3blend), s1blend)), -1, 1)));\n            var theta1 = Math.atan2($bm_sub($bm_mul($bm_neg(p3r[0]), $bm_sum(s3blend, $bm_mul(s1blend, Math.cos(theta2)))), $bm_mul(p3r[1], $bm_mul(s1blend, Math.sin(theta2)))), $bm_sub($bm_mul(p3r[1], $bm_sum(s3blend, $bm_mul(s1blend, Math.cos(theta2)))), $bm_mul(p3r[0], $bm_mul(s1blend, Math.sin(theta2)))));\n            var a1ik = $bm_sum(theta1, Math.PI);\n            var a2ik = theta2;\n        } catch (err) {\n            value;\n        }\n        var curveLin = $bm_div(endctrl.effect('Limber')('Bone Curvature'), 100);\n        if (curveLin == 0) {\n            $bm_rt = $bm_sum($bm_mul(rotstart, $bm_sub($bm_sub(radiansToDegrees(a1ik), 180), curRot)), $bm_mul($bm_sub(1, rotstart), $bm_neg(curRot)));\n        } else {\n            var p2ik = $bm_sum(p1, [\n                    Math.sin(a1ik) * s3blend,\n                    -Math.cos(a1ik) * s3blend\n                ]);\n            var avang = $bm_div($bm_sub($bm_sum($bm_sum(a1ik, a1ik), a2ik), Math.PI), 2);\n            var sizeScale = $bm_div(endctrl.effect('Limber')('Size Scale'), 100);\n            var linkScale = endctrl.effect('Limber')('Link Length to Size Scale');\n            var tangLeng = $bm_mul($bm_div($bm_mul(curveLin, $bm_sum(endctrl.effect('Limber')('Upper Length'), endctrl.effect('Limber')('Lower Length'))), 2), linkScale == true ? sizeScale : 1);\n            var tangPos = $bm_sub(p2ik, [\n                    Math.cos(avang) * tangLeng,\n                    Math.sin(avang) * tangLeng\n                ]);\n            var tangPosRel = $bm_sub(tangPos, p1);\n            var curveRotik = $bm_sub(radiansToDegrees(Math.atan2(tangPosRel[1], tangPosRel[0])), 90);\n            $bm_rt = $bm_sum($bm_mul(rotstart, $bm_sub(curveRotik, curRot)), $bm_mul($bm_sub(1, rotstart), $bm_neg(curRot)));\n        }\n    } else {\n        var p1 = startctrl.toWorld([\n                0,\n                0,\n                0\n            ]);\n        var p3ik = endctrl.toWorld([\n                0,\n                0,\n                0\n            ]);\n        var p3r = $bm_sub(p3ik, p1);\n        var s2 = length(p1, p3ik);\n        var c1 = $bm_div(endctrl.content('Admin').content('p1').transform.scale[0], 2);\n        var c2 = $bm_div(endctrl.content('Admin').content('p2blend').transform.scale[0], 2);\n        var c3 = $bm_div(endctrl.content('Admin').content('p3blend').transform.scale[0], 2);\n        var linkLeng = endctrl.effect('Limber')('Link Length to Size Scale');\n        var sizeScale = $bm_div(endctrl.effect('Limber')('Size Scale'), 100);\n        var cw = endctrl.effect('Limber')('Clockwise');\n        var cwLin = Math.abs($bm_div(cw, 100));\n        var s3ik = Math.max($bm_mul(endctrl.effect('Limber')('Upper Length'), linkLeng == true ? sizeScale : 1), Math.abs($bm_sub(c1, c2)));\n        var s1ik = Math.max($bm_mul(endctrl.effect('Limber')('Lower Length'), linkLeng == true ? sizeScale : 1), Math.abs($bm_sub(c2, c3)));\n        var totLeng = $bm_sum(s3ik, s1ik);\n        var s2 = length(p1, p3ik);\n        var prox = linear(Math.abs($bm_sub(s2, $bm_div(totLeng, 2))), 0, $bm_div(totLeng, 2), 0, 1);\n        var antipopLin = $bm_mul(totLeng, linear(linear($bm_mul($bm_mul(prox, prox), prox), 0.833, 1), $bm_sub(1, $bm_div(endctrl.effect('Limber')('Anti-pop'), 100)), 1));\n        var s1ap = $bm_mul(antipopLin, $bm_div(s1ik, totLeng));\n        var s3ap = $bm_mul(antipopLin, $bm_div(s3ik, totLeng));\n        var cwBlend = $bm_sum(cwLin, $bm_mul(fk, $bm_sub(1, cwLin)));\n        var s3blend = $bm_sum($bm_mul(s3ap, cwBlend), $bm_mul($bm_mul($bm_div(s3ap, $bm_sum(s3ap, s1ap)), s2), $bm_sub(1, cwBlend)));\n        var s1blend = $bm_sum($bm_mul(s1ap, cwBlend), $bm_mul($bm_mul($bm_div(s1ap, $bm_sum(s3ap, s1ap)), s2), $bm_sub(1, cwBlend)));\n        try {\n            var theta2 = $bm_mul(cw > 0 ? 1 : -1, Math.acos(clamp($bm_div($bm_sub($bm_sub($bm_sum($bm_mul(p3r[1], p3r[1]), $bm_mul(p3r[0], p3r[0])), $bm_mul(s3blend, s3blend)), $bm_mul(s1blend, s1blend)), $bm_mul($bm_mul(2, s3blend), s1blend)), -1, 1)));\n            var theta1 = Math.atan2($bm_sub($bm_mul($bm_neg(p3r[0]), $bm_sum(s3blend, $bm_mul(s1blend, Math.cos(theta2)))), $bm_mul(p3r[1], $bm_mul(s1blend, Math.sin(theta2)))), $bm_sub($bm_mul(p3r[1], $bm_sum(s3blend, $bm_mul(s1blend, Math.cos(theta2)))), $bm_mul(p3r[0], $bm_mul(s1blend, Math.sin(theta2)))));\n            var a1ik = $bm_sum(theta1, Math.PI);\n            var a2ik = theta2;\n        } catch (err) {\n            value;\n        }\n        var a1fk = degreesToRadians($bm_sum(curRot, endctrl.effect('Limber')('Upper FK Rotation')));\n        var a2fk = degreesToRadians(endctrl.effect('Limber')('Lower FK Rotation'));\n        var a1blend = $bm_sum($bm_mul(a1ik, $bm_sub(1, fk)), $bm_mul(a1fk, fk));\n        var a2blend = $bm_sum($bm_mul(a2ik, $bm_sub(1, fk)), $bm_mul(a2fk, fk));\n        var p2blend = $bm_sum(p1, [\n                Math.sin(a1blend) * s3blend,\n                -Math.cos(a1blend) * s3blend\n            ]);\n        var curveLin = $bm_div(endctrl.effect('Limber')('Bone Curvature'), 100);\n        if (curveLin == 0) {\n            $bm_rt = $bm_sum($bm_mul(rotstart, $bm_sub($bm_sub(radiansToDegrees(a1blend), 180), curRot)), $bm_mul($bm_sub(1, rotstart), $bm_neg(curRot)));\n        } else {\n            var avang = $bm_div($bm_sub($bm_sum($bm_sum(a1blend, a1blend), a2blend), Math.PI), 2);\n            var tangLeng = $bm_div($bm_mul(curveLin, totLeng), 2);\n            var tangPos = $bm_sub(p2blend, [\n                    Math.cos(avang) * tangLeng,\n                    Math.sin(avang) * tangLeng\n                ]);\n            var tangPosRel = $bm_sub(tangPos, p1);\n            var curveRotblend = $bm_sub(radiansToDegrees(Math.atan2(tangPosRel[1], tangPosRel[0])), 90);\n            $bm_rt = $bm_sum($bm_mul(rotstart, $bm_sub(curveRotblend, curRot)), $bm_mul($bm_sub(1, rotstart), $bm_neg(curRot)));\n        }\n    }\n}"},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":0,"s":[1088,260,0],"to":[4,-8,0],"ti":[-4,8,0]},{"t":37.0000015070409,"s":[1112,212,0]}],"ix":2,"l":2},"a":{"a":0,"k":[0,0,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100],"ix":6,"l":2}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[3.082,3.37],[0,0],[0,0],[0,0],[0,0],[0,-4.927],[-10.467,0],[0,10.467]],"o":[[0,0],[0,0],[0,0],[0,0],[-3.082,3.371],[0,10.467],[10.467,0],[0,-4.927]],"v":[[13.989,-12.688],[13.991,-12.688],[0,-27.99],[-13.991,-12.688],[-13.989,-12.688],[-18.952,0.096],[0,19.048],[18.952,0.096]],"c":true},"ix":2},"nm":"Path","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0,0.800000011921,0,1],"ix":4,"x":"var $bm_rt;\nvar hsl;\nvar startctrl = thisLayer;\nvar endctrl = thisComp.layer('body-Ankle');\nvar totLeng = $bm_mul($bm_sum(endctrl.effect('Limber')('Upper Length'), endctrl.effect('Limber')('Lower Length')), endctrl.effect('Limber')('Link Length to Size Scale') == true ? endctrl.effect('Limber')('Size Scale') / 100 : 1);\nvar stretchLimit = length(endctrl.toWorld(endctrl.anchorPoint), startctrl.toWorld(startctrl.anchorPoint));\n$bm_rt = hsl = $bm_sum([\n    0.333,\n    1,\n    0.4,\n    0\n], [\n    linear(stretchLimit, $bm_mul(totLeng, 0.97), totLeng, 0, 0.19),\n    0,\n    0\n]);\nif (stretchLimit > totLeng)\n    $bm_rt = [\n        1,\n        0,\n        0,\n        0\n    ];\nelse\n    $bm_rt = hslToRgb(hsl);"},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":180,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Controller","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3,"x":"var $bm_rt;\nvar limbLayers = {\n        ankle: thisComp.layer('body-Ankle'),\n        hip: thisComp.layer('body-Hip'),\n        leg: thisComp.layer('body-Leg')\n    };\n$bm_rt = value;"},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Admin","np":0,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":900.000036657751,"st":0,"bm":0},{"ddd":0,"ind":9,"ty":4,"nm":"body-Leg","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10,"x":"var $bm_rt;\nvar curlayer = thisLayer;\nvar rot = 0;\nwhile (curlayer.hasParent) {\n    rot = $bm_sum(rot, curlayer.parent('ADBE Transform Group')('ADBE Rotate Z'));\n    curlayer = curlayer.parent;\n}\n$bm_rt = $bm_neg(rot);"},"p":{"a":0,"k":[0,0,0],"ix":2,"x":"var $bm_rt;\nvar val = [\n        0,\n        0\n    ];\nif (thisLayer.hasParent)\n    val = parent.fromWorld([\n        0,\n        0,\n        0\n    ]);\n$bm_rt = [\n    val[0],\n    val[1],\n    0\n];","l":2},"a":{"a":0,"k":[0,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"shapes":[{"ty":"gr","it":[{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[],"o":[],"v":[],"c":false},"ix":2,"x":"var $bm_rt;\nvar newA, newT, nq0, nq1, nq2, nr0, nr1, ns0, t, q0, q1, q2, r0, r1, s0, v6, v4, newVerts, newIns, newOuts, uq1, uq2, ur0, ur1, us0;\nfunction midPoint(p1, p2, per) {\n    return [\n        p1[0] + (p2[0] - p1[0]) * per,\n        p1[1] + (p2[1] - p1[1]) * per\n    ];\n}\nfunction tangentsAbsolute(vertices, tans) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        tans[i] = $bm_sum(tans[i], vertices[i]);\n    }\n    return tans;\n}\nfunction tangentsRelative(vertices, tans) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        tans[i] = $bm_sub(tans[i], vertices[i]);\n    }\n    return tans;\n}\nfunction fx(point) {\n    return [\n        -point[0],\n        point[1]\n    ];\n}\nfunction fy(point) {\n    return [\n        point[0],\n        -point[1]\n    ];\n}\nfunction fxy(point) {\n    return [\n        -point[0],\n        -point[1]\n    ];\n}\nfunction flipArrayY(vertices, flipPoint) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        vertices[i] = [\n            vertices[i][0],\n            $bm_sub($bm_mul(flipPoint, 2), vertices[i][1])\n        ];\n    }\n    return vertices;\n}\nfunction pointAlongY(val, p1, p2) {\n    var linearValue = linear(val, p1[1], p2[1], p1[0], p2[0]);\n    return [\n        linearValue,\n        val\n    ];\n}\nfunction xOnCircleGivenY(x, r) {\n    return Math.sqrt($bm_sub($bm_mul(r, r), $bm_mul(x, x)));\n}\nvar semiFac = 0.55228474983079;\nvar quad = $bm_mul(0.5, Math.PI);\nvar groupName = thisProperty.propertyGroup(3)._name;\nvar isUpper = groupName.split(' ')[1] === 'Upper';\nvar isProximal = groupName.split(' ')[0] === 'Proximal';\nvar endctrl = thisComp.layer('body-Ankle');\nvar lowerSplit = endctrl.effect('Limber')('Lower Split');\nvar lowerSplitValue = $bm_div(lowerSplit.value, 100);\nvar upperSplit = endctrl.effect('Limber')('Upper Split');\nvar upperSplitValue = $bm_div(upperSplit.value, 100);\nvar lowerRounding = endctrl.effect('Limber')('Lower Rounding');\nvar lowerRoundingValue = $bm_div(lowerRounding.value, 100);\nvar upperRounding = endctrl.effect('Limber')('Upper Rounding');\nvar upperRoundingValue = $bm_div(upperRounding.value, 100);\nvar squareEndValue = endctrl.effect('Limber')('Square End').value;\nvar sides = endctrl.content('Admin').content('sides').transform.position;\nif (isUpper) {\n    var c2 = endctrl.content('Admin').content('p2blend').transform.scale;\n    var c1 = endctrl.content('Admin').content('p1').transform.scale;\n    var dist = sides[1];\n} else {\n    var c1 = endctrl.content('Admin').content('p2blend').transform.scale;\n    var c2 = endctrl.content('Admin').content('p3ik').transform.scale;\n    var dist = sides[0];\n}\nvar distrad = $bm_mul(c2[0], 0.5);\nvar proxrad = $bm_mul(c1[0], 0.5);\nvar pers = $bm_neg(lowerRoundingValue);\nvar splitY = isProximal ? lowerSplitValue : $bm_sub(1, lowerSplitValue);\nif (isUpper) {\n    pers = $bm_neg(upperRoundingValue);\n    splitY = isProximal ? upperSplitValue : $bm_sub(1, upperSplitValue);\n}\nsplitY = $bm_sub($bm_mul($bm_neg(dist), splitY), 0.5);\nvar rad1 = isProximal ? proxrad : distrad;\nvar rad2 = isProximal ? distrad : proxrad;\nvar A = Math.acos(clamp($bm_div($bm_sub(rad2, rad1), dist), -1, 1));\nvar r3a = [\n        rad2 * Math.sin(A),\n        -(dist - rad2 * Math.cos(A))\n    ];\nvar r3b = [\n        rad1 * Math.sin(A),\n        rad1 * Math.cos(A)\n    ];\nvar semiVerts = [\n        [\n            rad1,\n            0\n        ],\n        [\n            0,\n            rad1\n        ],\n        [\n            -rad1,\n            0\n        ]\n    ];\nvar semiIns = tangentsAbsolute(semiVerts, [\n        [\n            0,\n            0\n        ],\n        [\n            $bm_mul(rad1, semiFac),\n            0\n        ],\n        [\n            0,\n            $bm_mul(rad1, semiFac)\n        ]\n    ]);\nvar semiOuts = tangentsAbsolute(semiVerts, [\n        [\n            0,\n            $bm_mul(rad1, semiFac)\n        ],\n        [\n            $bm_mul($bm_neg(rad1), semiFac),\n            0\n        ],\n        [\n            0,\n            0\n        ]\n    ]);\nif (rad2 < rad1) {\n    if (splitY > r3b[1]) {\n        var state = 1;\n        newA = $bm_neg(Math.atan2(splitY, xOnCircleGivenY(splitY, rad1)));\n        newT = $bm_div(newA, quad);\n        nq0 = midPoint(semiVerts[0], semiOuts[0], newT);\n        nq1 = midPoint(semiOuts[0], semiIns[1], newT);\n        nq2 = midPoint(semiIns[1], semiVerts[1], newT);\n        nr0 = midPoint(nq0, nq1, newT);\n        nr1 = midPoint(nq1, nq2, newT);\n        ns0 = midPoint(nr0, nr1, newT);\n        t = $bm_div($bm_sub(A, quad), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, fy(s0));\n        v4 = fx(v6);\n        newVerts = [\n            semiVerts[0],\n            semiVerts[0],\n            semiVerts[1],\n            semiVerts[2],\n            fxy(ns0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(ns0)\n        ];\n        newIns = tangentsRelative(newVerts, [\n            fy(nq0),\n            semiVerts[0],\n            semiIns[1],\n            semiIns[2],\n            fxy(nr0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(ns0)\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            semiVerts[0],\n            semiOuts[0],\n            semiOuts[1],\n            fxy(nq0),\n            fxy(ns0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(nr0)\n        ]);\n    } else {\n        var state = 2;\n        t = $bm_div($bm_sub(A, quad), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, fy(s0));\n        v4 = fx(v6);\n        newVerts = [\n            semiVerts[0],\n            semiVerts[1],\n            semiVerts[2],\n            fxy(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(s0)\n        ];\n        newIns = tangentsRelative(newVerts, [\n            fy(q0),\n            semiIns[1],\n            semiIns[2],\n            fxy(r0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(s0)\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            semiOuts[0],\n            semiOuts[1],\n            fxy(q0),\n            fxy(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(r0)\n        ]);\n    }\n} else {\n    if (splitY < r3a[1]) {\n        var state = 3;\n        var UpsemiVerts = [\n                [\n                    rad2,\n                    -dist\n                ],\n                [\n                    0,\n                    -(dist - rad2)\n                ],\n                [\n                    -rad2,\n                    -dist\n                ]\n            ];\n        var UpsemiIns = tangentsAbsolute(UpsemiVerts, [\n                [\n                    0,\n                    0\n                ],\n                [\n                    $bm_mul(rad2, semiFac),\n                    0\n                ],\n                [\n                    0,\n                    $bm_mul(rad2, semiFac)\n                ]\n            ]);\n        var UpsemiOuts = tangentsAbsolute(UpsemiVerts, [\n                [\n                    0,\n                    $bm_mul(rad2, semiFac)\n                ],\n                [\n                    $bm_mul($bm_neg(rad2), semiFac),\n                    0\n                ],\n                [\n                    0,\n                    0\n                ]\n            ]);\n        t = $bm_div($bm_sub(quad, A), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        if (rad2 == rad1) {\n            var upA = 0.00001;\n        } else {\n            var upA = $bm_sub(quad, Math.acos(clamp($bm_div($bm_sub(rad2, rad1), dist), -1, 1)));\n        }\n        var upT = $bm_div(upA, quad);\n        var uq0 = midPoint(UpsemiVerts[0], UpsemiOuts[0], upT);\n        uq1 = midPoint(UpsemiOuts[0], UpsemiIns[1], upT);\n        uq2 = midPoint(UpsemiIns[1], UpsemiVerts[1], upT);\n        ur0 = midPoint(uq0, uq1, upT);\n        ur1 = midPoint(uq1, uq2, upT);\n        us0 = midPoint(ur0, ur1, upT);\n        newA = $bm_neg(Math.atan2($bm_sub($bm_neg(dist), splitY), xOnCircleGivenY($bm_sub($bm_neg(dist), splitY), rad2)));\n        newT = $bm_div(newA, upA);\n        nq0 = midPoint(UpsemiVerts[0], uq0, newT);\n        nq1 = midPoint(uq0, ur0, newT);\n        nq2 = midPoint(ur0, us0, newT);\n        nr0 = midPoint(nq0, nq1, newT);\n        nr1 = midPoint(nq1, nq2, newT);\n        ns0 = midPoint(nr0, nr1, newT);\n        newVerts = [\n            s0,\n            semiVerts[1],\n            fx(s0),\n            fx(r3a),\n            fx(ns0),\n            [\n                0,\n                splitY\n            ],\n            ns0,\n            us0\n        ];\n        newIns = tangentsRelative(newVerts, [\n            s0,\n            q2,\n            fx(r1),\n            fx(r3a),\n            fx(nr1),\n            [\n                0,\n                splitY\n            ],\n            ns0,\n            us0\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            r1,\n            fx(q2),\n            fx(r0),\n            fx(nq2),\n            fx(ns0),\n            [\n                0,\n                splitY\n            ],\n            nr1,\n            r3a\n        ]);\n    } else {\n        var state = 4;\n        t = $bm_div($bm_sub(quad, A), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, s0);\n        v4 = fx(v6);\n        newVerts = [\n            s0,\n            s0,\n            semiVerts[1],\n            fx(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            v6\n        ];\n        newIns = tangentsRelative(newVerts, [\n            s0,\n            s0,\n            q2,\n            fx(r1),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            v6\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            s0,\n            r1,\n            fx(q2),\n            fx(r0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            r0\n        ]);\n    }\n}\nif (isProximal != true) {\n    var tempVerts = newVerts;\n    var tempIns = newIns;\n    var tempOuts = newOuts;\n    newVerts = flipArrayY(tempVerts, -dist * 0.5).reverse();\n    newIns = flipArrayY(tempOuts, 0).reverse();\n    newOuts = flipArrayY(tempIns, 0).reverse();\n}\nif (pers != 0) {\n    var pVert = isProximal ? 5 : 2;\n    newVerts[pVert] = $bm_sum(newVerts[pVert], isProximal ? [\n        0,\n        newVerts[pVert + 1][0] * pers\n    ] : [\n        0,\n        -newVerts[pVert + 1][0] * pers\n    ]);\n    newIns[pVert] = [\n        $bm_mul($bm_neg(newVerts[pVert + 1][0]), semiFac),\n        0\n    ];\n    newOuts[pVert] = [\n        $bm_mul(newVerts[pVert + 1][0], semiFac),\n        0\n    ];\n    var B = isProximal ? $bm_sub($bm_div(Math.PI, 2), A) : -(Math.PI / 2 + A);\n    var temp6 = [\n            0,\n            newVerts[pVert + 1][0] * semiFac * pers\n        ];\n    newIns[pVert + 1][0] = $bm_mul($bm_neg(temp6[1]), Math.sin(B));\n    newIns[pVert + 1][1] = $bm_mul(temp6[1], Math.cos(B));\n    var temp4 = [\n            0,\n            newVerts[pVert + 1][0] * semiFac * pers\n        ];\n    newOuts[pVert - 1][0] = $bm_mul($bm_neg(temp4[1]), Math.sin($bm_neg(B)));\n    newOuts[pVert - 1][1] = $bm_mul(temp4[1], Math.cos($bm_neg(B)));\n}\nif (squareEndValue && !isUpper && !isProximal) {\n    if (state === 1) {\n        newVerts[5] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newOuts[4] = [\n            0,\n            0\n        ];\n        newIns[6] = [\n            0,\n            0\n        ];\n    }\n    if (state === 2) {\n        newVerts[6] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newOuts[5] = [\n            0,\n            0\n        ];\n        newIns[7] = [\n            0,\n            0\n        ];\n    }\n    if (state === 3) {\n        newVerts[5] = [\n            $bm_neg(distrad),\n            $bm_neg(dist)\n        ];\n        newVerts[6] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newVerts[7] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newOuts[5] = [\n            0,\n            0\n        ];\n        newIns[7] = [\n            0,\n            0\n        ];\n    }\n    if (state === 4) {\n        newVerts[4] = [\n            $bm_neg(distrad),\n            $bm_neg(dist)\n        ];\n        newVerts[5] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newVerts[6] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newVerts[7] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newOuts[4] = [\n            0,\n            0\n        ];\n        newIns[6] = [\n            0,\n            0\n        ];\n    }\n}\n$bm_rt = createPath(newVerts, newIns, newOuts, true);"},"nm":"Taper Path","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,0,0,1],"ix":4,"x":"var $bm_rt;\n$bm_rt = thisComp.layer('body-Ankle').effect('Limber')('Middle Color');"},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Distal Upper","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[],"o":[],"v":[],"c":false},"ix":2,"x":"var $bm_rt;\nvar newA, newT, nq0, nq1, nq2, nr0, nr1, ns0, t, q0, q1, q2, r0, r1, s0, v6, v4, newVerts, newIns, newOuts, uq1, uq2, ur0, ur1, us0;\nfunction midPoint(p1, p2, per) {\n    return [\n        p1[0] + (p2[0] - p1[0]) * per,\n        p1[1] + (p2[1] - p1[1]) * per\n    ];\n}\nfunction tangentsAbsolute(vertices, tans) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        tans[i] = $bm_sum(tans[i], vertices[i]);\n    }\n    return tans;\n}\nfunction tangentsRelative(vertices, tans) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        tans[i] = $bm_sub(tans[i], vertices[i]);\n    }\n    return tans;\n}\nfunction fx(point) {\n    return [\n        -point[0],\n        point[1]\n    ];\n}\nfunction fy(point) {\n    return [\n        point[0],\n        -point[1]\n    ];\n}\nfunction fxy(point) {\n    return [\n        -point[0],\n        -point[1]\n    ];\n}\nfunction flipArrayY(vertices, flipPoint) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        vertices[i] = [\n            vertices[i][0],\n            $bm_sub($bm_mul(flipPoint, 2), vertices[i][1])\n        ];\n    }\n    return vertices;\n}\nfunction pointAlongY(val, p1, p2) {\n    var linearValue = linear(val, p1[1], p2[1], p1[0], p2[0]);\n    return [\n        linearValue,\n        val\n    ];\n}\nfunction xOnCircleGivenY(x, r) {\n    return Math.sqrt($bm_sub($bm_mul(r, r), $bm_mul(x, x)));\n}\nvar semiFac = 0.55228474983079;\nvar quad = $bm_mul(0.5, Math.PI);\nvar groupName = thisProperty.propertyGroup(3)._name;\nvar isUpper = groupName.split(' ')[1] === 'Upper';\nvar isProximal = groupName.split(' ')[0] === 'Proximal';\nvar endctrl = thisComp.layer('body-Ankle');\nvar lowerSplit = endctrl.effect('Limber')('Lower Split');\nvar lowerSplitValue = $bm_div(lowerSplit.value, 100);\nvar upperSplit = endctrl.effect('Limber')('Upper Split');\nvar upperSplitValue = $bm_div(upperSplit.value, 100);\nvar lowerRounding = endctrl.effect('Limber')('Lower Rounding');\nvar lowerRoundingValue = $bm_div(lowerRounding.value, 100);\nvar upperRounding = endctrl.effect('Limber')('Upper Rounding');\nvar upperRoundingValue = $bm_div(upperRounding.value, 100);\nvar squareEndValue = endctrl.effect('Limber')('Square End').value;\nvar sides = endctrl.content('Admin').content('sides').transform.position;\nif (isUpper) {\n    var c2 = endctrl.content('Admin').content('p2blend').transform.scale;\n    var c1 = endctrl.content('Admin').content('p1').transform.scale;\n    var dist = sides[1];\n} else {\n    var c1 = endctrl.content('Admin').content('p2blend').transform.scale;\n    var c2 = endctrl.content('Admin').content('p3ik').transform.scale;\n    var dist = sides[0];\n}\nvar distrad = $bm_mul(c2[0], 0.5);\nvar proxrad = $bm_mul(c1[0], 0.5);\nvar pers = $bm_neg(lowerRoundingValue);\nvar splitY = isProximal ? lowerSplitValue : $bm_sub(1, lowerSplitValue);\nif (isUpper) {\n    pers = $bm_neg(upperRoundingValue);\n    splitY = isProximal ? upperSplitValue : $bm_sub(1, upperSplitValue);\n}\nsplitY = $bm_sub($bm_mul($bm_neg(dist), splitY), 0.5);\nvar rad1 = isProximal ? proxrad : distrad;\nvar rad2 = isProximal ? distrad : proxrad;\nvar A = Math.acos(clamp($bm_div($bm_sub(rad2, rad1), dist), -1, 1));\nvar r3a = [\n        rad2 * Math.sin(A),\n        -(dist - rad2 * Math.cos(A))\n    ];\nvar r3b = [\n        rad1 * Math.sin(A),\n        rad1 * Math.cos(A)\n    ];\nvar semiVerts = [\n        [\n            rad1,\n            0\n        ],\n        [\n            0,\n            rad1\n        ],\n        [\n            -rad1,\n            0\n        ]\n    ];\nvar semiIns = tangentsAbsolute(semiVerts, [\n        [\n            0,\n            0\n        ],\n        [\n            $bm_mul(rad1, semiFac),\n            0\n        ],\n        [\n            0,\n            $bm_mul(rad1, semiFac)\n        ]\n    ]);\nvar semiOuts = tangentsAbsolute(semiVerts, [\n        [\n            0,\n            $bm_mul(rad1, semiFac)\n        ],\n        [\n            $bm_mul($bm_neg(rad1), semiFac),\n            0\n        ],\n        [\n            0,\n            0\n        ]\n    ]);\nif (rad2 < rad1) {\n    if (splitY > r3b[1]) {\n        var state = 1;\n        newA = $bm_neg(Math.atan2(splitY, xOnCircleGivenY(splitY, rad1)));\n        newT = $bm_div(newA, quad);\n        nq0 = midPoint(semiVerts[0], semiOuts[0], newT);\n        nq1 = midPoint(semiOuts[0], semiIns[1], newT);\n        nq2 = midPoint(semiIns[1], semiVerts[1], newT);\n        nr0 = midPoint(nq0, nq1, newT);\n        nr1 = midPoint(nq1, nq2, newT);\n        ns0 = midPoint(nr0, nr1, newT);\n        t = $bm_div($bm_sub(A, quad), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, fy(s0));\n        v4 = fx(v6);\n        newVerts = [\n            semiVerts[0],\n            semiVerts[0],\n            semiVerts[1],\n            semiVerts[2],\n            fxy(ns0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(ns0)\n        ];\n        newIns = tangentsRelative(newVerts, [\n            fy(nq0),\n            semiVerts[0],\n            semiIns[1],\n            semiIns[2],\n            fxy(nr0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(ns0)\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            semiVerts[0],\n            semiOuts[0],\n            semiOuts[1],\n            fxy(nq0),\n            fxy(ns0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(nr0)\n        ]);\n    } else {\n        var state = 2;\n        t = $bm_div($bm_sub(A, quad), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, fy(s0));\n        v4 = fx(v6);\n        newVerts = [\n            semiVerts[0],\n            semiVerts[1],\n            semiVerts[2],\n            fxy(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(s0)\n        ];\n        newIns = tangentsRelative(newVerts, [\n            fy(q0),\n            semiIns[1],\n            semiIns[2],\n            fxy(r0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(s0)\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            semiOuts[0],\n            semiOuts[1],\n            fxy(q0),\n            fxy(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(r0)\n        ]);\n    }\n} else {\n    if (splitY < r3a[1]) {\n        var state = 3;\n        var UpsemiVerts = [\n                [\n                    rad2,\n                    -dist\n                ],\n                [\n                    0,\n                    -(dist - rad2)\n                ],\n                [\n                    -rad2,\n                    -dist\n                ]\n            ];\n        var UpsemiIns = tangentsAbsolute(UpsemiVerts, [\n                [\n                    0,\n                    0\n                ],\n                [\n                    $bm_mul(rad2, semiFac),\n                    0\n                ],\n                [\n                    0,\n                    $bm_mul(rad2, semiFac)\n                ]\n            ]);\n        var UpsemiOuts = tangentsAbsolute(UpsemiVerts, [\n                [\n                    0,\n                    $bm_mul(rad2, semiFac)\n                ],\n                [\n                    $bm_mul($bm_neg(rad2), semiFac),\n                    0\n                ],\n                [\n                    0,\n                    0\n                ]\n            ]);\n        t = $bm_div($bm_sub(quad, A), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        if (rad2 == rad1) {\n            var upA = 0.00001;\n        } else {\n            var upA = $bm_sub(quad, Math.acos(clamp($bm_div($bm_sub(rad2, rad1), dist), -1, 1)));\n        }\n        var upT = $bm_div(upA, quad);\n        var uq0 = midPoint(UpsemiVerts[0], UpsemiOuts[0], upT);\n        uq1 = midPoint(UpsemiOuts[0], UpsemiIns[1], upT);\n        uq2 = midPoint(UpsemiIns[1], UpsemiVerts[1], upT);\n        ur0 = midPoint(uq0, uq1, upT);\n        ur1 = midPoint(uq1, uq2, upT);\n        us0 = midPoint(ur0, ur1, upT);\n        newA = $bm_neg(Math.atan2($bm_sub($bm_neg(dist), splitY), xOnCircleGivenY($bm_sub($bm_neg(dist), splitY), rad2)));\n        newT = $bm_div(newA, upA);\n        nq0 = midPoint(UpsemiVerts[0], uq0, newT);\n        nq1 = midPoint(uq0, ur0, newT);\n        nq2 = midPoint(ur0, us0, newT);\n        nr0 = midPoint(nq0, nq1, newT);\n        nr1 = midPoint(nq1, nq2, newT);\n        ns0 = midPoint(nr0, nr1, newT);\n        newVerts = [\n            s0,\n            semiVerts[1],\n            fx(s0),\n            fx(r3a),\n            fx(ns0),\n            [\n                0,\n                splitY\n            ],\n            ns0,\n            us0\n        ];\n        newIns = tangentsRelative(newVerts, [\n            s0,\n            q2,\n            fx(r1),\n            fx(r3a),\n            fx(nr1),\n            [\n                0,\n                splitY\n            ],\n            ns0,\n            us0\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            r1,\n            fx(q2),\n            fx(r0),\n            fx(nq2),\n            fx(ns0),\n            [\n                0,\n                splitY\n            ],\n            nr1,\n            r3a\n        ]);\n    } else {\n        var state = 4;\n        t = $bm_div($bm_sub(quad, A), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, s0);\n        v4 = fx(v6);\n        newVerts = [\n            s0,\n            s0,\n            semiVerts[1],\n            fx(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            v6\n        ];\n        newIns = tangentsRelative(newVerts, [\n            s0,\n            s0,\n            q2,\n            fx(r1),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            v6\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            s0,\n            r1,\n            fx(q2),\n            fx(r0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            r0\n        ]);\n    }\n}\nif (isProximal != true) {\n    var tempVerts = newVerts;\n    var tempIns = newIns;\n    var tempOuts = newOuts;\n    newVerts = flipArrayY(tempVerts, -dist * 0.5).reverse();\n    newIns = flipArrayY(tempOuts, 0).reverse();\n    newOuts = flipArrayY(tempIns, 0).reverse();\n}\nif (pers != 0) {\n    var pVert = isProximal ? 5 : 2;\n    newVerts[pVert] = $bm_sum(newVerts[pVert], isProximal ? [\n        0,\n        newVerts[pVert + 1][0] * pers\n    ] : [\n        0,\n        -newVerts[pVert + 1][0] * pers\n    ]);\n    newIns[pVert] = [\n        $bm_mul($bm_neg(newVerts[pVert + 1][0]), semiFac),\n        0\n    ];\n    newOuts[pVert] = [\n        $bm_mul(newVerts[pVert + 1][0], semiFac),\n        0\n    ];\n    var B = isProximal ? $bm_sub($bm_div(Math.PI, 2), A) : -(Math.PI / 2 + A);\n    var temp6 = [\n            0,\n            newVerts[pVert + 1][0] * semiFac * pers\n        ];\n    newIns[pVert + 1][0] = $bm_mul($bm_neg(temp6[1]), Math.sin(B));\n    newIns[pVert + 1][1] = $bm_mul(temp6[1], Math.cos(B));\n    var temp4 = [\n            0,\n            newVerts[pVert + 1][0] * semiFac * pers\n        ];\n    newOuts[pVert - 1][0] = $bm_mul($bm_neg(temp4[1]), Math.sin($bm_neg(B)));\n    newOuts[pVert - 1][1] = $bm_mul(temp4[1], Math.cos($bm_neg(B)));\n}\nif (squareEndValue && !isUpper && !isProximal) {\n    if (state === 1) {\n        newVerts[5] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newOuts[4] = [\n            0,\n            0\n        ];\n        newIns[6] = [\n            0,\n            0\n        ];\n    }\n    if (state === 2) {\n        newVerts[6] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newOuts[5] = [\n            0,\n            0\n        ];\n        newIns[7] = [\n            0,\n            0\n        ];\n    }\n    if (state === 3) {\n        newVerts[5] = [\n            $bm_neg(distrad),\n            $bm_neg(dist)\n        ];\n        newVerts[6] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newVerts[7] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newOuts[5] = [\n            0,\n            0\n        ];\n        newIns[7] = [\n            0,\n            0\n        ];\n    }\n    if (state === 4) {\n        newVerts[4] = [\n            $bm_neg(distrad),\n            $bm_neg(dist)\n        ];\n        newVerts[5] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newVerts[6] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newVerts[7] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newOuts[4] = [\n            0,\n            0\n        ];\n        newIns[6] = [\n            0,\n            0\n        ];\n    }\n}\n$bm_rt = createPath(newVerts, newIns, newOuts, true);"},"nm":"Taper Path","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,0,0,1],"ix":4,"x":"var $bm_rt;\n$bm_rt = thisComp.layer('body-Ankle').effect('Limber')('Upper Color');"},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Proximal Upper","np":2,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2,"x":"var $bm_rt;\n$bm_rt = thisComp.layer('body-Ankle').content('Admin').content('p1').transform.position;"},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6,"x":"var $bm_rt;\n$bm_rt = thisComp.layer('body-Ankle').content('Admin').content('angles').transform.anchorPoint[0];"},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Upper Group","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[],"o":[],"v":[],"c":false},"ix":2,"x":"var $bm_rt;\nvar newA, newT, nq0, nq1, nq2, nr0, nr1, ns0, t, q0, q1, q2, r0, r1, s0, v6, v4, newVerts, newIns, newOuts, uq1, uq2, ur0, ur1, us0;\nfunction midPoint(p1, p2, per) {\n    return [\n        p1[0] + (p2[0] - p1[0]) * per,\n        p1[1] + (p2[1] - p1[1]) * per\n    ];\n}\nfunction tangentsAbsolute(vertices, tans) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        tans[i] = $bm_sum(tans[i], vertices[i]);\n    }\n    return tans;\n}\nfunction tangentsRelative(vertices, tans) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        tans[i] = $bm_sub(tans[i], vertices[i]);\n    }\n    return tans;\n}\nfunction fx(point) {\n    return [\n        -point[0],\n        point[1]\n    ];\n}\nfunction fy(point) {\n    return [\n        point[0],\n        -point[1]\n    ];\n}\nfunction fxy(point) {\n    return [\n        -point[0],\n        -point[1]\n    ];\n}\nfunction flipArrayY(vertices, flipPoint) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        vertices[i] = [\n            vertices[i][0],\n            $bm_sub($bm_mul(flipPoint, 2), vertices[i][1])\n        ];\n    }\n    return vertices;\n}\nfunction pointAlongY(val, p1, p2) {\n    var linearValue = linear(val, p1[1], p2[1], p1[0], p2[0]);\n    return [\n        linearValue,\n        val\n    ];\n}\nfunction xOnCircleGivenY(x, r) {\n    return Math.sqrt($bm_sub($bm_mul(r, r), $bm_mul(x, x)));\n}\nvar semiFac = 0.55228474983079;\nvar quad = $bm_mul(0.5, Math.PI);\nvar groupName = thisProperty.propertyGroup(3)._name;\nvar isUpper = groupName.split(' ')[1] === 'Upper';\nvar isProximal = groupName.split(' ')[0] === 'Proximal';\nvar endctrl = thisComp.layer('body-Ankle');\nvar lowerSplit = endctrl.effect('Limber')('Lower Split');\nvar lowerSplitValue = $bm_div(lowerSplit.value, 100);\nvar upperSplit = endctrl.effect('Limber')('Upper Split');\nvar upperSplitValue = $bm_div(upperSplit.value, 100);\nvar lowerRounding = endctrl.effect('Limber')('Lower Rounding');\nvar lowerRoundingValue = $bm_div(lowerRounding.value, 100);\nvar upperRounding = endctrl.effect('Limber')('Upper Rounding');\nvar upperRoundingValue = $bm_div(upperRounding.value, 100);\nvar squareEndValue = endctrl.effect('Limber')('Square End').value;\nvar sides = endctrl.content('Admin').content('sides').transform.position;\nif (isUpper) {\n    var c2 = endctrl.content('Admin').content('p2blend').transform.scale;\n    var c1 = endctrl.content('Admin').content('p1').transform.scale;\n    var dist = sides[1];\n} else {\n    var c1 = endctrl.content('Admin').content('p2blend').transform.scale;\n    var c2 = endctrl.content('Admin').content('p3ik').transform.scale;\n    var dist = sides[0];\n}\nvar distrad = $bm_mul(c2[0], 0.5);\nvar proxrad = $bm_mul(c1[0], 0.5);\nvar pers = $bm_neg(lowerRoundingValue);\nvar splitY = isProximal ? lowerSplitValue : $bm_sub(1, lowerSplitValue);\nif (isUpper) {\n    pers = $bm_neg(upperRoundingValue);\n    splitY = isProximal ? upperSplitValue : $bm_sub(1, upperSplitValue);\n}\nsplitY = $bm_sub($bm_mul($bm_neg(dist), splitY), 0.5);\nvar rad1 = isProximal ? proxrad : distrad;\nvar rad2 = isProximal ? distrad : proxrad;\nvar A = Math.acos(clamp($bm_div($bm_sub(rad2, rad1), dist), -1, 1));\nvar r3a = [\n        rad2 * Math.sin(A),\n        -(dist - rad2 * Math.cos(A))\n    ];\nvar r3b = [\n        rad1 * Math.sin(A),\n        rad1 * Math.cos(A)\n    ];\nvar semiVerts = [\n        [\n            rad1,\n            0\n        ],\n        [\n            0,\n            rad1\n        ],\n        [\n            -rad1,\n            0\n        ]\n    ];\nvar semiIns = tangentsAbsolute(semiVerts, [\n        [\n            0,\n            0\n        ],\n        [\n            $bm_mul(rad1, semiFac),\n            0\n        ],\n        [\n            0,\n            $bm_mul(rad1, semiFac)\n        ]\n    ]);\nvar semiOuts = tangentsAbsolute(semiVerts, [\n        [\n            0,\n            $bm_mul(rad1, semiFac)\n        ],\n        [\n            $bm_mul($bm_neg(rad1), semiFac),\n            0\n        ],\n        [\n            0,\n            0\n        ]\n    ]);\nif (rad2 < rad1) {\n    if (splitY > r3b[1]) {\n        var state = 1;\n        newA = $bm_neg(Math.atan2(splitY, xOnCircleGivenY(splitY, rad1)));\n        newT = $bm_div(newA, quad);\n        nq0 = midPoint(semiVerts[0], semiOuts[0], newT);\n        nq1 = midPoint(semiOuts[0], semiIns[1], newT);\n        nq2 = midPoint(semiIns[1], semiVerts[1], newT);\n        nr0 = midPoint(nq0, nq1, newT);\n        nr1 = midPoint(nq1, nq2, newT);\n        ns0 = midPoint(nr0, nr1, newT);\n        t = $bm_div($bm_sub(A, quad), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, fy(s0));\n        v4 = fx(v6);\n        newVerts = [\n            semiVerts[0],\n            semiVerts[0],\n            semiVerts[1],\n            semiVerts[2],\n            fxy(ns0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(ns0)\n        ];\n        newIns = tangentsRelative(newVerts, [\n            fy(nq0),\n            semiVerts[0],\n            semiIns[1],\n            semiIns[2],\n            fxy(nr0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(ns0)\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            semiVerts[0],\n            semiOuts[0],\n            semiOuts[1],\n            fxy(nq0),\n            fxy(ns0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(nr0)\n        ]);\n    } else {\n        var state = 2;\n        t = $bm_div($bm_sub(A, quad), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, fy(s0));\n        v4 = fx(v6);\n        newVerts = [\n            semiVerts[0],\n            semiVerts[1],\n            semiVerts[2],\n            fxy(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(s0)\n        ];\n        newIns = tangentsRelative(newVerts, [\n            fy(q0),\n            semiIns[1],\n            semiIns[2],\n            fxy(r0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(s0)\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            semiOuts[0],\n            semiOuts[1],\n            fxy(q0),\n            fxy(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(r0)\n        ]);\n    }\n} else {\n    if (splitY < r3a[1]) {\n        var state = 3;\n        var UpsemiVerts = [\n                [\n                    rad2,\n                    -dist\n                ],\n                [\n                    0,\n                    -(dist - rad2)\n                ],\n                [\n                    -rad2,\n                    -dist\n                ]\n            ];\n        var UpsemiIns = tangentsAbsolute(UpsemiVerts, [\n                [\n                    0,\n                    0\n                ],\n                [\n                    $bm_mul(rad2, semiFac),\n                    0\n                ],\n                [\n                    0,\n                    $bm_mul(rad2, semiFac)\n                ]\n            ]);\n        var UpsemiOuts = tangentsAbsolute(UpsemiVerts, [\n                [\n                    0,\n                    $bm_mul(rad2, semiFac)\n                ],\n                [\n                    $bm_mul($bm_neg(rad2), semiFac),\n                    0\n                ],\n                [\n                    0,\n                    0\n                ]\n            ]);\n        t = $bm_div($bm_sub(quad, A), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        if (rad2 == rad1) {\n            var upA = 0.00001;\n        } else {\n            var upA = $bm_sub(quad, Math.acos(clamp($bm_div($bm_sub(rad2, rad1), dist), -1, 1)));\n        }\n        var upT = $bm_div(upA, quad);\n        var uq0 = midPoint(UpsemiVerts[0], UpsemiOuts[0], upT);\n        uq1 = midPoint(UpsemiOuts[0], UpsemiIns[1], upT);\n        uq2 = midPoint(UpsemiIns[1], UpsemiVerts[1], upT);\n        ur0 = midPoint(uq0, uq1, upT);\n        ur1 = midPoint(uq1, uq2, upT);\n        us0 = midPoint(ur0, ur1, upT);\n        newA = $bm_neg(Math.atan2($bm_sub($bm_neg(dist), splitY), xOnCircleGivenY($bm_sub($bm_neg(dist), splitY), rad2)));\n        newT = $bm_div(newA, upA);\n        nq0 = midPoint(UpsemiVerts[0], uq0, newT);\n        nq1 = midPoint(uq0, ur0, newT);\n        nq2 = midPoint(ur0, us0, newT);\n        nr0 = midPoint(nq0, nq1, newT);\n        nr1 = midPoint(nq1, nq2, newT);\n        ns0 = midPoint(nr0, nr1, newT);\n        newVerts = [\n            s0,\n            semiVerts[1],\n            fx(s0),\n            fx(r3a),\n            fx(ns0),\n            [\n                0,\n                splitY\n            ],\n            ns0,\n            us0\n        ];\n        newIns = tangentsRelative(newVerts, [\n            s0,\n            q2,\n            fx(r1),\n            fx(r3a),\n            fx(nr1),\n            [\n                0,\n                splitY\n            ],\n            ns0,\n            us0\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            r1,\n            fx(q2),\n            fx(r0),\n            fx(nq2),\n            fx(ns0),\n            [\n                0,\n                splitY\n            ],\n            nr1,\n            r3a\n        ]);\n    } else {\n        var state = 4;\n        t = $bm_div($bm_sub(quad, A), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, s0);\n        v4 = fx(v6);\n        newVerts = [\n            s0,\n            s0,\n            semiVerts[1],\n            fx(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            v6\n        ];\n        newIns = tangentsRelative(newVerts, [\n            s0,\n            s0,\n            q2,\n            fx(r1),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            v6\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            s0,\n            r1,\n            fx(q2),\n            fx(r0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            r0\n        ]);\n    }\n}\nif (isProximal != true) {\n    var tempVerts = newVerts;\n    var tempIns = newIns;\n    var tempOuts = newOuts;\n    newVerts = flipArrayY(tempVerts, -dist * 0.5).reverse();\n    newIns = flipArrayY(tempOuts, 0).reverse();\n    newOuts = flipArrayY(tempIns, 0).reverse();\n}\nif (pers != 0) {\n    var pVert = isProximal ? 5 : 2;\n    newVerts[pVert] = $bm_sum(newVerts[pVert], isProximal ? [\n        0,\n        newVerts[pVert + 1][0] * pers\n    ] : [\n        0,\n        -newVerts[pVert + 1][0] * pers\n    ]);\n    newIns[pVert] = [\n        $bm_mul($bm_neg(newVerts[pVert + 1][0]), semiFac),\n        0\n    ];\n    newOuts[pVert] = [\n        $bm_mul(newVerts[pVert + 1][0], semiFac),\n        0\n    ];\n    var B = isProximal ? $bm_sub($bm_div(Math.PI, 2), A) : -(Math.PI / 2 + A);\n    var temp6 = [\n            0,\n            newVerts[pVert + 1][0] * semiFac * pers\n        ];\n    newIns[pVert + 1][0] = $bm_mul($bm_neg(temp6[1]), Math.sin(B));\n    newIns[pVert + 1][1] = $bm_mul(temp6[1], Math.cos(B));\n    var temp4 = [\n            0,\n            newVerts[pVert + 1][0] * semiFac * pers\n        ];\n    newOuts[pVert - 1][0] = $bm_mul($bm_neg(temp4[1]), Math.sin($bm_neg(B)));\n    newOuts[pVert - 1][1] = $bm_mul(temp4[1], Math.cos($bm_neg(B)));\n}\nif (squareEndValue && !isUpper && !isProximal) {\n    if (state === 1) {\n        newVerts[5] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newOuts[4] = [\n            0,\n            0\n        ];\n        newIns[6] = [\n            0,\n            0\n        ];\n    }\n    if (state === 2) {\n        newVerts[6] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newOuts[5] = [\n            0,\n            0\n        ];\n        newIns[7] = [\n            0,\n            0\n        ];\n    }\n    if (state === 3) {\n        newVerts[5] = [\n            $bm_neg(distrad),\n            $bm_neg(dist)\n        ];\n        newVerts[6] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newVerts[7] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newOuts[5] = [\n            0,\n            0\n        ];\n        newIns[7] = [\n            0,\n            0\n        ];\n    }\n    if (state === 4) {\n        newVerts[4] = [\n            $bm_neg(distrad),\n            $bm_neg(dist)\n        ];\n        newVerts[5] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newVerts[6] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newVerts[7] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newOuts[4] = [\n            0,\n            0\n        ];\n        newIns[6] = [\n            0,\n            0\n        ];\n    }\n}\n$bm_rt = createPath(newVerts, newIns, newOuts, true);"},"nm":"Taper Path","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,0,0,1],"ix":4,"x":"var $bm_rt;\n$bm_rt = thisComp.layer('body-Ankle').effect('Limber')('Middle Color');"},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Proximal Lower","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[],"o":[],"v":[],"c":false},"ix":2,"x":"var $bm_rt;\nvar newA, newT, nq0, nq1, nq2, nr0, nr1, ns0, t, q0, q1, q2, r0, r1, s0, v6, v4, newVerts, newIns, newOuts, uq1, uq2, ur0, ur1, us0;\nfunction midPoint(p1, p2, per) {\n    return [\n        p1[0] + (p2[0] - p1[0]) * per,\n        p1[1] + (p2[1] - p1[1]) * per\n    ];\n}\nfunction tangentsAbsolute(vertices, tans) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        tans[i] = $bm_sum(tans[i], vertices[i]);\n    }\n    return tans;\n}\nfunction tangentsRelative(vertices, tans) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        tans[i] = $bm_sub(tans[i], vertices[i]);\n    }\n    return tans;\n}\nfunction fx(point) {\n    return [\n        -point[0],\n        point[1]\n    ];\n}\nfunction fy(point) {\n    return [\n        point[0],\n        -point[1]\n    ];\n}\nfunction fxy(point) {\n    return [\n        -point[0],\n        -point[1]\n    ];\n}\nfunction flipArrayY(vertices, flipPoint) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        vertices[i] = [\n            vertices[i][0],\n            $bm_sub($bm_mul(flipPoint, 2), vertices[i][1])\n        ];\n    }\n    return vertices;\n}\nfunction pointAlongY(val, p1, p2) {\n    var linearValue = linear(val, p1[1], p2[1], p1[0], p2[0]);\n    return [\n        linearValue,\n        val\n    ];\n}\nfunction xOnCircleGivenY(x, r) {\n    return Math.sqrt($bm_sub($bm_mul(r, r), $bm_mul(x, x)));\n}\nvar semiFac = 0.55228474983079;\nvar quad = $bm_mul(0.5, Math.PI);\nvar groupName = thisProperty.propertyGroup(3)._name;\nvar isUpper = groupName.split(' ')[1] === 'Upper';\nvar isProximal = groupName.split(' ')[0] === 'Proximal';\nvar endctrl = thisComp.layer('body-Ankle');\nvar lowerSplit = endctrl.effect('Limber')('Lower Split');\nvar lowerSplitValue = $bm_div(lowerSplit.value, 100);\nvar upperSplit = endctrl.effect('Limber')('Upper Split');\nvar upperSplitValue = $bm_div(upperSplit.value, 100);\nvar lowerRounding = endctrl.effect('Limber')('Lower Rounding');\nvar lowerRoundingValue = $bm_div(lowerRounding.value, 100);\nvar upperRounding = endctrl.effect('Limber')('Upper Rounding');\nvar upperRoundingValue = $bm_div(upperRounding.value, 100);\nvar squareEndValue = endctrl.effect('Limber')('Square End').value;\nvar sides = endctrl.content('Admin').content('sides').transform.position;\nif (isUpper) {\n    var c2 = endctrl.content('Admin').content('p2blend').transform.scale;\n    var c1 = endctrl.content('Admin').content('p1').transform.scale;\n    var dist = sides[1];\n} else {\n    var c1 = endctrl.content('Admin').content('p2blend').transform.scale;\n    var c2 = endctrl.content('Admin').content('p3ik').transform.scale;\n    var dist = sides[0];\n}\nvar distrad = $bm_mul(c2[0], 0.5);\nvar proxrad = $bm_mul(c1[0], 0.5);\nvar pers = $bm_neg(lowerRoundingValue);\nvar splitY = isProximal ? lowerSplitValue : $bm_sub(1, lowerSplitValue);\nif (isUpper) {\n    pers = $bm_neg(upperRoundingValue);\n    splitY = isProximal ? upperSplitValue : $bm_sub(1, upperSplitValue);\n}\nsplitY = $bm_sub($bm_mul($bm_neg(dist), splitY), 0.5);\nvar rad1 = isProximal ? proxrad : distrad;\nvar rad2 = isProximal ? distrad : proxrad;\nvar A = Math.acos(clamp($bm_div($bm_sub(rad2, rad1), dist), -1, 1));\nvar r3a = [\n        rad2 * Math.sin(A),\n        -(dist - rad2 * Math.cos(A))\n    ];\nvar r3b = [\n        rad1 * Math.sin(A),\n        rad1 * Math.cos(A)\n    ];\nvar semiVerts = [\n        [\n            rad1,\n            0\n        ],\n        [\n            0,\n            rad1\n        ],\n        [\n            -rad1,\n            0\n        ]\n    ];\nvar semiIns = tangentsAbsolute(semiVerts, [\n        [\n            0,\n            0\n        ],\n        [\n            $bm_mul(rad1, semiFac),\n            0\n        ],\n        [\n            0,\n            $bm_mul(rad1, semiFac)\n        ]\n    ]);\nvar semiOuts = tangentsAbsolute(semiVerts, [\n        [\n            0,\n            $bm_mul(rad1, semiFac)\n        ],\n        [\n            $bm_mul($bm_neg(rad1), semiFac),\n            0\n        ],\n        [\n            0,\n            0\n        ]\n    ]);\nif (rad2 < rad1) {\n    if (splitY > r3b[1]) {\n        var state = 1;\n        newA = $bm_neg(Math.atan2(splitY, xOnCircleGivenY(splitY, rad1)));\n        newT = $bm_div(newA, quad);\n        nq0 = midPoint(semiVerts[0], semiOuts[0], newT);\n        nq1 = midPoint(semiOuts[0], semiIns[1], newT);\n        nq2 = midPoint(semiIns[1], semiVerts[1], newT);\n        nr0 = midPoint(nq0, nq1, newT);\n        nr1 = midPoint(nq1, nq2, newT);\n        ns0 = midPoint(nr0, nr1, newT);\n        t = $bm_div($bm_sub(A, quad), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, fy(s0));\n        v4 = fx(v6);\n        newVerts = [\n            semiVerts[0],\n            semiVerts[0],\n            semiVerts[1],\n            semiVerts[2],\n            fxy(ns0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(ns0)\n        ];\n        newIns = tangentsRelative(newVerts, [\n            fy(nq0),\n            semiVerts[0],\n            semiIns[1],\n            semiIns[2],\n            fxy(nr0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(ns0)\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            semiVerts[0],\n            semiOuts[0],\n            semiOuts[1],\n            fxy(nq0),\n            fxy(ns0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(nr0)\n        ]);\n    } else {\n        var state = 2;\n        t = $bm_div($bm_sub(A, quad), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, fy(s0));\n        v4 = fx(v6);\n        newVerts = [\n            semiVerts[0],\n            semiVerts[1],\n            semiVerts[2],\n            fxy(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(s0)\n        ];\n        newIns = tangentsRelative(newVerts, [\n            fy(q0),\n            semiIns[1],\n            semiIns[2],\n            fxy(r0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(s0)\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            semiOuts[0],\n            semiOuts[1],\n            fxy(q0),\n            fxy(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(r0)\n        ]);\n    }\n} else {\n    if (splitY < r3a[1]) {\n        var state = 3;\n        var UpsemiVerts = [\n                [\n                    rad2,\n                    -dist\n                ],\n                [\n                    0,\n                    -(dist - rad2)\n                ],\n                [\n                    -rad2,\n                    -dist\n                ]\n            ];\n        var UpsemiIns = tangentsAbsolute(UpsemiVerts, [\n                [\n                    0,\n                    0\n                ],\n                [\n                    $bm_mul(rad2, semiFac),\n                    0\n                ],\n                [\n                    0,\n                    $bm_mul(rad2, semiFac)\n                ]\n            ]);\n        var UpsemiOuts = tangentsAbsolute(UpsemiVerts, [\n                [\n                    0,\n                    $bm_mul(rad2, semiFac)\n                ],\n                [\n                    $bm_mul($bm_neg(rad2), semiFac),\n                    0\n                ],\n                [\n                    0,\n                    0\n                ]\n            ]);\n        t = $bm_div($bm_sub(quad, A), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        if (rad2 == rad1) {\n            var upA = 0.00001;\n        } else {\n            var upA = $bm_sub(quad, Math.acos(clamp($bm_div($bm_sub(rad2, rad1), dist), -1, 1)));\n        }\n        var upT = $bm_div(upA, quad);\n        var uq0 = midPoint(UpsemiVerts[0], UpsemiOuts[0], upT);\n        uq1 = midPoint(UpsemiOuts[0], UpsemiIns[1], upT);\n        uq2 = midPoint(UpsemiIns[1], UpsemiVerts[1], upT);\n        ur0 = midPoint(uq0, uq1, upT);\n        ur1 = midPoint(uq1, uq2, upT);\n        us0 = midPoint(ur0, ur1, upT);\n        newA = $bm_neg(Math.atan2($bm_sub($bm_neg(dist), splitY), xOnCircleGivenY($bm_sub($bm_neg(dist), splitY), rad2)));\n        newT = $bm_div(newA, upA);\n        nq0 = midPoint(UpsemiVerts[0], uq0, newT);\n        nq1 = midPoint(uq0, ur0, newT);\n        nq2 = midPoint(ur0, us0, newT);\n        nr0 = midPoint(nq0, nq1, newT);\n        nr1 = midPoint(nq1, nq2, newT);\n        ns0 = midPoint(nr0, nr1, newT);\n        newVerts = [\n            s0,\n            semiVerts[1],\n            fx(s0),\n            fx(r3a),\n            fx(ns0),\n            [\n                0,\n                splitY\n            ],\n            ns0,\n            us0\n        ];\n        newIns = tangentsRelative(newVerts, [\n            s0,\n            q2,\n            fx(r1),\n            fx(r3a),\n            fx(nr1),\n            [\n                0,\n                splitY\n            ],\n            ns0,\n            us0\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            r1,\n            fx(q2),\n            fx(r0),\n            fx(nq2),\n            fx(ns0),\n            [\n                0,\n                splitY\n            ],\n            nr1,\n            r3a\n        ]);\n    } else {\n        var state = 4;\n        t = $bm_div($bm_sub(quad, A), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, s0);\n        v4 = fx(v6);\n        newVerts = [\n            s0,\n            s0,\n            semiVerts[1],\n            fx(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            v6\n        ];\n        newIns = tangentsRelative(newVerts, [\n            s0,\n            s0,\n            q2,\n            fx(r1),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            v6\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            s0,\n            r1,\n            fx(q2),\n            fx(r0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            r0\n        ]);\n    }\n}\nif (isProximal != true) {\n    var tempVerts = newVerts;\n    var tempIns = newIns;\n    var tempOuts = newOuts;\n    newVerts = flipArrayY(tempVerts, -dist * 0.5).reverse();\n    newIns = flipArrayY(tempOuts, 0).reverse();\n    newOuts = flipArrayY(tempIns, 0).reverse();\n}\nif (pers != 0) {\n    var pVert = isProximal ? 5 : 2;\n    newVerts[pVert] = $bm_sum(newVerts[pVert], isProximal ? [\n        0,\n        newVerts[pVert + 1][0] * pers\n    ] : [\n        0,\n        -newVerts[pVert + 1][0] * pers\n    ]);\n    newIns[pVert] = [\n        $bm_mul($bm_neg(newVerts[pVert + 1][0]), semiFac),\n        0\n    ];\n    newOuts[pVert] = [\n        $bm_mul(newVerts[pVert + 1][0], semiFac),\n        0\n    ];\n    var B = isProximal ? $bm_sub($bm_div(Math.PI, 2), A) : -(Math.PI / 2 + A);\n    var temp6 = [\n            0,\n            newVerts[pVert + 1][0] * semiFac * pers\n        ];\n    newIns[pVert + 1][0] = $bm_mul($bm_neg(temp6[1]), Math.sin(B));\n    newIns[pVert + 1][1] = $bm_mul(temp6[1], Math.cos(B));\n    var temp4 = [\n            0,\n            newVerts[pVert + 1][0] * semiFac * pers\n        ];\n    newOuts[pVert - 1][0] = $bm_mul($bm_neg(temp4[1]), Math.sin($bm_neg(B)));\n    newOuts[pVert - 1][1] = $bm_mul(temp4[1], Math.cos($bm_neg(B)));\n}\nif (squareEndValue && !isUpper && !isProximal) {\n    if (state === 1) {\n        newVerts[5] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newOuts[4] = [\n            0,\n            0\n        ];\n        newIns[6] = [\n            0,\n            0\n        ];\n    }\n    if (state === 2) {\n        newVerts[6] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newOuts[5] = [\n            0,\n            0\n        ];\n        newIns[7] = [\n            0,\n            0\n        ];\n    }\n    if (state === 3) {\n        newVerts[5] = [\n            $bm_neg(distrad),\n            $bm_neg(dist)\n        ];\n        newVerts[6] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newVerts[7] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newOuts[5] = [\n            0,\n            0\n        ];\n        newIns[7] = [\n            0,\n            0\n        ];\n    }\n    if (state === 4) {\n        newVerts[4] = [\n            $bm_neg(distrad),\n            $bm_neg(dist)\n        ];\n        newVerts[5] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newVerts[6] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newVerts[7] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newOuts[4] = [\n            0,\n            0\n        ];\n        newIns[6] = [\n            0,\n            0\n        ];\n    }\n}\n$bm_rt = createPath(newVerts, newIns, newOuts, true);"},"nm":"Taper Path","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,0,0,1],"ix":4,"x":"var $bm_rt;\n$bm_rt = thisComp.layer('body-Ankle').effect('Limber')('Lower Color');"},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Distal Lower","np":2,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2,"x":"var $bm_rt;\n$bm_rt = thisComp.layer('body-Ankle').content('Admin').content('p2blend').transform.position;"},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6,"x":"var $bm_rt;\n$bm_rt = thisComp.layer('body-Ankle').content('Admin').content('angles').transform.anchorPoint[1];"},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Lower Group","np":2,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Limb","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3,"x":"var $bm_rt;\nvar limbLayers = {\n        ankle: thisComp.layer('body-Ankle'),\n        hip: thisComp.layer('body-Hip'),\n        leg: thisComp.layer('body-Leg')\n    };\n$bm_rt = value;"},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Admin","np":0,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":true}],"ip":0,"op":900.000036657751,"st":0,"bm":0},{"ddd":0,"ind":10,"ty":4,"nm":"Prop-Blanket","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":33,"s":[100]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":145,"s":[100]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":150,"s":[0]},{"t":477.000019428608,"s":[0]}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[960,540,0],"ix":2,"l":2},"a":{"a":0,"k":[0,0,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[55.653,34.248],[105.323,1.991],[31.619,-2.635],[-1.564,-6.419],[-18.701,-6.568],[-70.967,-32.985],[-10.036,-35.919],[-27.635,-32.753],[-18.297,26.253],[0,44.02]],"o":[[-89.715,-55.209],[-31.723,-0.6],[-6.583,0.549],[4.691,19.258],[73.836,25.933],[33.82,15.719],[11.532,41.273],[20.636,24.457],[25.17,-36.114],[0,-65.347]],"v":[[100,-240],[-216,-236],[-310.456,-247.758],[-312,-228],[-292,-172],[-59.513,-139.32],[-8,-40],[4,88],[100,88],[96,-44]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[1,1,1,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":12,"ix":5},"lc":1,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":true},{"ty":"fl","c":{"a":0,"k":[0.087596429563,0.310186887255,0.112249135036,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":900.000036657751,"st":0,"bm":0},{"ddd":0,"ind":11,"ty":4,"nm":"Prop","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":355,"s":[100]},{"t":477.000019428608,"s":[0]}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[534,810,0],"ix":2,"l":2},"a":{"a":0,"k":[-412,17.187,0],"ix":1,"l":2},"s":{"a":1,"k":[{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":0,"s":[131.135,1648.021,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":69,"s":[118.324,1487.021,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":198,"s":[118.324,1151.85,100]},{"t":292.000011893404,"s":[118.324,792.738,100]}],"ix":6,"l":2}},"ao":0,"shapes":[{"ty":"gr","it":[{"ty":"rc","d":1,"s":{"a":0,"k":[662.219,280],"ix":2},"p":{"a":0,"k":[0,0],"ix":3},"r":{"a":0,"k":20,"ix":4},"nm":"Rectangle Path 1","mn":"ADBE Vector Shape - Rect","hd":false},{"ty":"st","c":{"a":0,"k":[0.921568687289,0.643137254902,0.176470588235,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":12,"ix":5},"lc":1,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":true},{"ty":"fl","c":{"a":0,"k":[0.086791019814,0.399998653636,0.828079044118,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[-429.359,14.047],"ix":2},"a":{"a":0,"k":[-11.219,108.965],"ix":1},"s":{"a":0,"k":[100,12.16],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Rectangle 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":900.000036657751,"st":0,"bm":0},{"ddd":0,"ind":12,"ty":4,"nm":"Hand","parent":4,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":0,"s":[-3.147]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":251,"s":[-7.647]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":468,"s":[-96.093]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":483,"s":[-57.8]},{"t":668.000027208198,"s":[-51.145]}],"ix":10},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":0,"s":[12,-8,0],"to":[-1.411,0,0],"ti":[3.519,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":251,"s":[3.421,-8,0],"to":[-3.134,0,0],"ti":[0.667,0,0]},{"t":484.000019713724,"s":[-8.579,-8,0]}],"ix":2,"l":2},"a":{"a":0,"k":[-643.306,-24.971,0],"ix":1,"l":2},"s":{"a":0,"k":[74.49,73.628,100],"ix":6,"l":2}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0]],"o":[[0,0]],"v":[[-620,-24]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.921568687289,0.643137254902,0.176470588235,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":12,"ix":5},"lc":1,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[0.921568687289,0.643137254902,0.176470588235,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 2","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[28.238,-1.448],[-17.264,-31.075],[-30.33,-8.485],[-22.649,-2.831],[0.457,22.667],[11.579,4.791]],"o":[[-24.557,1.259],[21.575,38.835],[22.429,6.274],[11.224,1.403],[-0.482,-23.951],[-27.515,-11.385]],"v":[[-728,-52],[-800,-24],[-708,-16],[-642.954,19.933],[-612,-4],[-644,-32]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.921568687289,0.643137254902,0.176470588235,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":12,"ix":5},"lc":1,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[0.921568687289,0.643137254902,0.176470588235,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":900.000036657751,"st":0,"bm":0},{"ddd":0,"ind":13,"ty":4,"nm":"Foot","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[-208,-236,0],"ix":2,"l":2},"a":{"a":0,"k":[0,0,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[11.099,3.108],[29.238,-10.233],[-24.268,-6.795],[-56.253,19.689]],"o":[[-29.437,-8.242],[-24.105,8.437],[56.635,15.858],[11.024,-3.859]],"v":[[212,216],[124,244],[52,272],[224,272]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.921568687289,0.643137254902,0.176470588235,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":12,"ix":5},"lc":1,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[0.921568687289,0.643137254902,0.176470588235,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":900.000036657751,"st":0,"bm":0},{"ddd":0,"ind":14,"ty":4,"nm":"head","parent":7,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":0,"s":[101.878]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":180,"s":[57.521]},{"t":668.000027208198,"s":[26.135]}],"ix":10},"p":{"a":0,"k":[-52,12,0],"ix":2,"l":2},"a":{"a":0,"k":[-240,-156,0],"ix":1,"l":2},"s":{"a":0,"k":[79.309,95.656,100],"ix":6,"l":2}},"ao":0,"shapes":[{"ty":"gr","it":[{"d":1,"ty":"el","s":{"a":0,"k":[39.156,109.297],"ix":2},"p":{"a":0,"k":[0,0],"ix":3},"nm":"Ellipse Path 1","mn":"ADBE Vector Shape - Ellipse","hd":false},{"ty":"st","c":{"a":0,"k":[0.921568687289,0.643137254902,0.176470588235,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":12,"ix":5},"lc":1,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[0.921568687289,0.643137254902,0.176470588235,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[-236.422,-33.352],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[295.495,166.463],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Ellipse 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":900.000036657751,"st":0,"bm":0}],"markers":[]}